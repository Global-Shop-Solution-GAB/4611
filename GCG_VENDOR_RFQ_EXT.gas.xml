<?xml version="1.0" encoding="utf-8"?>
<SyntaxEdit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Pages>
    <DefaultPage>
      <Header />
      <Footer />
    </DefaultPage>
  </Pages>
  <DisplayStrings />
  <Selection>
    <SelectionRect>
      <Location>
        <X>0</X>
        <Y>3932</Y>
      </Location>
      <Size>
        <Width>24</Width>
        <Height>4</Height>
      </Size>
      <X>0</X>
      <Y>3932</Y>
      <Width>24</Width>
      <Height>4</Height>
    </SelectionRect>
    <Options>UseColors OverwriteBlocks SelectLineOnTripleClick CopyLineWhenEmpty SelectWordOnCtrlClick</Options>
  </Selection>
  <Gutter>
    <Options>PaintLineNumbers PaintBookMarks PaintLineModificators</Options>
  </Gutter>
  <Margin>
    <Visible>false</Visible>
  </Margin>
  <LineStyles />
  <LineSeparator />
  <Printing>
    <Footer />
    <Header />
  </Printing>
  <WhiteSpace />
  <TextSource>
    <Position>
      <X>0</X>
      <Y>3932</Y>
    </Position>
    <Lexer>
      <Scheme>
        <Author>Quantum Whale, LLC.</Author>
        <Copyright>Copyright (c) 2004 - 2014 Quantum Whale LLC.</Copyright>
        <FileType>gas</FileType>
        <Version>1.5</Version>
        <Styles>
          <Style>
            <Name>idents</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>numbers</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>reswords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>comments</Name>
            <ForeColor>Green</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>xmlcomments</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>symbols</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>whitespace</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>strings</Name>
            <ForeColor>Maroon</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>directives</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>htmlparams</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>syntax errors</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>codes nippets</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>255:180:228:180</BackColor>
          </Style>
          <Style>
            <Name>GabReservedWords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>GabTokenWithBrackets</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>GabFunctionIntrinsicDebug</Name>
            <ForeColor>White</ForeColor>
            <BackColor>Red</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>GabVariable</Name>
            <ForeColor>Teal</ForeColor>
          </Style>
          <Style>
            <Name>GabVariableSystemDefined</Name>
            <ForeColor>Teal</ForeColor>
            <FontStyle>Bold Italic</FontStyle>
          </Style>
          <Style>
            <Name>GabGui</Name>
            <ForeColor>OrangeRed</ForeColor>
          </Style>
          <Style>
            <Name>GabProgramSubStartEnd</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>LightGray</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
        </Styles>
      </Scheme>
    </Lexer>
    <TextStrings>
      <Lines>
        <string>Program.Sub.ScreenSU.Start</string>
        <string>gui.f_Main..create</string>
        <string>gui.f_Main..caption("Multi Line Request for Quote Extended")</string>
        <string>gui.f_Main..size(18225,10815)</string>
        <string>gui.f_Main..minx(0)</string>
        <string>gui.f_Main..miny(0)</string>
        <string>gui.f_Main..position(0,0)</string>
        <string>gui.f_Main..event(unload,f_Main_Unload)</string>
        <string>gui.f_Main..alwaysontop(False)</string>
        <string>gui.f_Main..fontname("Arial")</string>
        <string>gui.f_Main..fontsize(8)</string>
        <string>gui.f_Main..forecolor(0)</string>
        <string>gui.f_Main..fontstyle(,,,,)</string>
        <string>gui.f_Main..BackColor(-2147483633)</string>
        <string>gui.f_Main..controlbox(True)</string>
        <string>gui.f_Main..maxbutton(True)</string>
        <string>gui.f_Main..minbutton(True)</string>
        <string>gui.f_Main..mousepointer(0)</string>
        <string>gui.f_Main..moveable(True)</string>
        <string>gui.f_Main..sizeable(True)</string>
        <string>gui.f_Main..ShowInTaskBar(True)</string>
        <string>gui.f_Main..titlebar(True)</string>
        <string>gui.f_Main.tabRFQ.create(tab)</string>
        <string>gui.f_Main.tabRFQ.tabs(3)</string>
        <string>gui.f_Main.tabRFQ.tabsperrow(3)</string>
        <string>gui.f_Main.tabRFQ.settab(0)</string>
        <string>gui.f_Main.tabRFQ.caption("Reply To")</string>
        <string>gui.f_Main.tabRFQ.settab(1)</string>
        <string>gui.f_Main.tabRFQ.caption("Vendor")</string>
        <string>gui.f_Main.tabRFQ.settab(2)</string>
        <string>gui.f_Main.tabRFQ.caption("Job/Router/Req")</string>
        <string>gui.f_Main.tabRFQ.size(17700,5025)</string>
        <string>gui.f_Main.tabRFQ.position(200,200)</string>
        <string>gui.f_Main.tabRFQ.visible(True)</string>
        <string>gui.f_Main.tabRFQ.fontname("Arial")</string>
        <string>gui.f_Main.tabRFQ.fontsize(8)</string>
        <string>gui.f_Main.lvParts.create(listview)</string>
        <string>gui.f_Main.lvParts.view(3)</string>
        <string>gui.f_Main.lvParts.addlistviewcolumn("Line",1000,0)</string>
        <string>gui.f_Main.lvParts.addlistviewcolumn("Part",3500,0)</string>
        <string>gui.f_Main.lvParts.addlistviewcolumn("Description",5000,0)</string>
        <string>gui.f_Main.lvParts.addlistviewcolumn("Quantity",1500,1)</string>
        <string>gui.f_Main.lvParts.addlistviewcolumn("Req No.",1500,0)</string>
        <string>gui.f_Main.lvParts.addlistviewcolumn("Job",1500,0)</string>
        <string>gui.f_Main.lvParts.addlistviewcolumn("Suffix",1000,0)</string>
        <string>gui.f_Main.lvParts.addlistviewcolumn("Req. Date",1000,0)</string>
        <string>gui.f_Main.lvParts.visible(True)</string>
        <string>gui.f_Main.lvParts.size(17700,2880)</string>
        <string>gui.f_Main.lvParts.zorder(0)</string>
        <string>gui.f_Main.lvParts.position(100,6700)</string>
        <string>gui.f_Main.lvParts.enabled(True)</string>
        <string>gui.f_Main.lvParts.fontname("Arial")</string>
        <string>gui.f_Main.lvParts.fontsize(8)</string>
        <string>gui.f_Main.lvParts.event(dblclick,f_main_load_line)</string>
        <string>gui.f_Main.cmdSave.create(button)</string>
        <string>gui.f_Main.cmdSave.caption("Save")</string>
        <string>gui.f_Main.cmdSave.visible(True)</string>
        <string>gui.f_Main.cmdSave.size(1000,375)</string>
        <string>gui.f_Main.cmdSave.zorder(0)</string>
        <string>gui.f_Main.cmdSave.position(100,9725)</string>
        <string>gui.f_Main.cmdSave.enabled(True)</string>
        <string>gui.f_Main.cmdSave.fontname("Arial")</string>
        <string>gui.f_Main.cmdSave.fontsize(8)</string>
        <string>gui.f_Main.cmdSave.event(click,f_main_save_all)</string>
        <string>gui.f_Main.cmdSave.defaultvalue("")</string>
        <string>gui.f_Main.cmdSave.controlgroup(0)</string>
        <string>gui.f_Main.lblRName.create(label,"Reply To",True,1935,255,1,10945,5245,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblRName.defaultvalue("")</string>
        <string>gui.f_Main.lblRName.controlgroup(0)</string>
        <string>gui.f_Main.txtRName.create(textbox,"",True,3000,300,0,10945,5430,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtRName.defaultvalue("")</string>
        <string>gui.f_Main.txtRName.controlgroup(1)</string>
        <string>gui.f_Main.cmdBrwReply.create(button)</string>
        <string>gui.f_Main.cmdBrwReply.caption("^")</string>
        <string>gui.f_Main.cmdBrwReply.visible(True)</string>
        <string>gui.f_Main.cmdBrwReply.size(300,300)</string>
        <string>gui.f_Main.cmdBrwReply.zorder(0)</string>
        <string>gui.f_Main.cmdBrwReply.position(14055,5445)</string>
        <string>gui.f_Main.cmdBrwReply.enabled(True)</string>
        <string>gui.f_Main.cmdBrwReply.fontname("Arial")</string>
        <string>gui.f_Main.cmdBrwReply.fontsize(8)</string>
        <string>gui.f_Main.cmdBrwReply.event(click,cmdbrwreply_click)</string>
        <string>gui.f_Main.cmdBrwReply.defaultvalue("")</string>
        <string>gui.f_Main.cmdBrwReply.controlgroup(0)</string>
        <string>gui.f_Main.lblREmail.create(label,"Email",True,1000,255,1,10945,5890,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblREmail.defaultvalue("")</string>
        <string>gui.f_Main.lblREmail.controlgroup(0)</string>
        <string>gui.f_Main.txtREmail.create(textbox,"",True,3290,300,0,10945,6090,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtREmail.defaultvalue("")</string>
        <string>gui.f_Main.txtREmail.controlgroup(1)</string>
        <string>gui.f_Main.txtUser.create(textbox,"",True,1250,300,0,14610,5430,False,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtUser.defaultvalue("")</string>
        <string>gui.f_Main.txtUser.controlgroup(1)</string>
        <string>gui.f_Main.lblRFax.create(label,"Fax No.",True,1015,300,1,14610,5890,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblRFax.defaultvalue("")</string>
        <string>gui.f_Main.lblRFax.controlgroup(0)</string>
        <string>gui.f_Main.txtRFax.create(textbox,"",True,2265,300,0,14610,6090,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtRFax.defaultvalue("")</string>
        <string>gui.f_Main.txtRFax.controlgroup(1)</string>
        <string>gui.f_Main.dtpReplyBy.create(datepicker)</string>
        <string>gui.f_Main.dtpReplyBy.visible(True)</string>
        <string>gui.f_Main.dtpReplyBy.size(1500,285)</string>
        <string>gui.f_Main.dtpReplyBy.zorder(0)</string>
        <string>gui.f_Main.dtpReplyBy.position(16180,5430)</string>
        <string>gui.f_Main.dtpReplyBy.enabled(True)</string>
        <string>gui.f_Main.dtpReplyBy.checkbox(False)</string>
        <string>gui.f_Main.dtpReplyBy.defaultvalue("")</string>
        <string>gui.f_Main.dtpReplyBy.controlgroup(0)</string>
        <string>gui.f_Main.lblReplyDate.create(label,"Reply By:",True,1000,255,1,16195,5245,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblReplyDate.defaultvalue("")</string>
        <string>gui.f_Main.lblReplyDate.controlgroup(0)</string>
        <string>gui.f_Main.lvSelVendors.create(listview)</string>
        <string>gui.f_Main.lvSelVendors.view(3)</string>
        <string>gui.f_Main.lvSelVendors.addlistviewcolumn("Vendor",1000,0)</string>
        <string>gui.f_Main.lvSelVendors.addlistviewcolumn("Name",4200,0)</string>
        <string>gui.f_Main.lvSelVendors.visible(True)</string>
        <string>gui.f_Main.lvSelVendors.size(5430,3160)</string>
        <string>gui.f_Main.lvSelVendors.zorder(0)</string>
        <string>gui.f_Main.lvSelVendors.position(100,1360)</string>
        <string>gui.f_Main.lvSelVendors.enabled(True)</string>
        <string>gui.f_Main.lvSelVendors.parent("tabrfq",1)</string>
        <string>gui.f_Main.lvSelVendors.fontname("Arial")</string>
        <string>gui.f_Main.lvSelVendors.fontsize(8)</string>
        <string>gui.f_Main.lvSelVendors.event(itemclick,lvselvendors_itemclick)</string>
        <string>gui.f_Main.lvAvailContacts.create(listview)</string>
        <string>gui.f_Main.lvAvailContacts.view(3)</string>
        <string>gui.f_Main.lvAvailContacts.addlistviewcolumn("Available Contacts",2400,0)</string>
        <string>gui.f_Main.lvAvailContacts.addlistviewcolumn("Email Address",2750,0)</string>
        <string>gui.f_Main.lvAvailContacts.addlistviewcolumn("ID",0,0)</string>
        <string>gui.f_Main.lvAvailContacts.visible(True)</string>
        <string>gui.f_Main.lvAvailContacts.size(5450,4100)</string>
        <string>gui.f_Main.lvAvailContacts.zorder(0)</string>
        <string>gui.f_Main.lvAvailContacts.position(5955,440)</string>
        <string>gui.f_Main.lvAvailContacts.enabled(True)</string>
        <string>gui.f_Main.lvAvailContacts.parent("tabrfq",1)</string>
        <string>gui.f_Main.lvAvailContacts.fontname("Arial")</string>
        <string>gui.f_Main.lvAvailContacts.fontsize(8)</string>
        <string>gui.f_Main.lvAvailContacts.event(dblclick,lvavailcontacts_dblclick)</string>
        <string>gui.f_Main.lvlSelContacts.create(listview)</string>
        <string>gui.f_Main.lvlSelContacts.view(3)</string>
        <string>gui.f_Main.lvlSelContacts.addlistviewcolumn("Selected Contacts",2400,0)</string>
        <string>gui.f_Main.lvlSelContacts.addlistviewcolumn("Email Address",2750,0)</string>
        <string>gui.f_Main.lvlSelContacts.addlistviewcolumn("ID",0,0)</string>
        <string>gui.f_Main.lvlSelContacts.visible(True)</string>
        <string>gui.f_Main.lvlSelContacts.size(5450,4100)</string>
        <string>gui.f_Main.lvlSelContacts.zorder(0)</string>
        <string>gui.f_Main.lvlSelContacts.position(12065,440)</string>
        <string>gui.f_Main.lvlSelContacts.enabled(True)</string>
        <string>gui.f_Main.lvlSelContacts.parent("tabrfq",1)</string>
        <string>gui.f_Main.lvlSelContacts.fontname("Arial")</string>
        <string>gui.f_Main.lvlSelContacts.fontsize(8)</string>
        <string>gui.f_Main.lvlSelContacts.event(dblclick,lvlselcontacts_dblclick)</string>
        <string>gui.f_Main.lblVendor.create(label,"Vendor",True,1000,255,1,100,100,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblVendor.parent("tabrfq",1)</string>
        <string>gui.f_Main.lblVendor.defaultvalue("")</string>
        <string>gui.f_Main.lblVendor.controlgroup(0)</string>
        <string>gui.f_Main.txtVendor.create(textbox,"",True,1250,300,0,100,330,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtVendor.parent("tabrfq",1)</string>
        <string>gui.f_Main.txtVendor.maxLength(6)</string>
        <string>gui.f_Main.txtVendor.event(lostfocus,txtvendor_lostfocus)</string>
        <string>gui.f_Main.txtVendor.defaultvalue("")</string>
        <string>gui.f_Main.txtVendor.controlgroup(2)</string>
        <string>gui.f_Main.cmdBrwVendor.create(button)</string>
        <string>gui.f_Main.cmdBrwVendor.caption("^")</string>
        <string>gui.f_Main.cmdBrwVendor.visible(True)</string>
        <string>gui.f_Main.cmdBrwVendor.size(300,300)</string>
        <string>gui.f_Main.cmdBrwVendor.zorder(0)</string>
        <string>gui.f_Main.cmdBrwVendor.position(1400,330)</string>
        <string>gui.f_Main.cmdBrwVendor.enabled(True)</string>
        <string>gui.f_Main.cmdBrwVendor.parent("tabrfq",1)</string>
        <string>gui.f_Main.cmdBrwVendor.fontname("Arial")</string>
        <string>gui.f_Main.cmdBrwVendor.fontsize(8)</string>
        <string>gui.f_Main.cmdBrwVendor.event(click,cmdbrwvendor_click)</string>
        <string>gui.f_Main.cmdBrwVendor.defaultvalue("")</string>
        <string>gui.f_Main.cmdBrwVendor.controlgroup(0)</string>
        <string>gui.f_Main.lblVendorName.create(label,"Vendor Name",True,1935,255,1,100,730,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblVendorName.parent("tabrfq",1)</string>
        <string>gui.f_Main.lblVendorName.defaultvalue("")</string>
        <string>gui.f_Main.lblVendorName.controlgroup(0)</string>
        <string>gui.f_Main.txtVendorName.create(textbox,"",True,3000,300,0,100,960,False,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtVendorName.parent("tabrfq",1)</string>
        <string>gui.f_Main.txtVendorName.defaultvalue("")</string>
        <string>gui.f_Main.txtVendorName.controlgroup(2)</string>
        <string>gui.f_Main.cmdAddVendor.create(button)</string>
        <string>gui.f_Main.cmdAddVendor.caption("Add")</string>
        <string>gui.f_Main.cmdAddVendor.visible(True)</string>
        <string>gui.f_Main.cmdAddVendor.size(750,300)</string>
        <string>gui.f_Main.cmdAddVendor.zorder(0)</string>
        <string>gui.f_Main.cmdAddVendor.position(3150,960)</string>
        <string>gui.f_Main.cmdAddVendor.enabled(True)</string>
        <string>gui.f_Main.cmdAddVendor.parent("tabrfq",1)</string>
        <string>gui.f_Main.cmdAddVendor.fontname("Arial")</string>
        <string>gui.f_Main.cmdAddVendor.fontsize(8)</string>
        <string>gui.f_Main.cmdAddVendor.event(click,cmdaddvendor_click)</string>
        <string>gui.f_Main.cmdAddVendor.defaultvalue("")</string>
        <string>gui.f_Main.cmdAddVendor.controlgroup(0)</string>
        <string>gui.f_Main.cmdRemoveVendor.create(button)</string>
        <string>gui.f_Main.cmdRemoveVendor.caption("Remove")</string>
        <string>gui.f_Main.cmdRemoveVendor.visible(True)</string>
        <string>gui.f_Main.cmdRemoveVendor.size(750,300)</string>
        <string>gui.f_Main.cmdRemoveVendor.zorder(0)</string>
        <string>gui.f_Main.cmdRemoveVendor.position(3950,960)</string>
        <string>gui.f_Main.cmdRemoveVendor.enabled(True)</string>
        <string>gui.f_Main.cmdRemoveVendor.parent("tabrfq",1)</string>
        <string>gui.f_Main.cmdRemoveVendor.fontname("Arial")</string>
        <string>gui.f_Main.cmdRemoveVendor.fontsize(8)</string>
        <string>gui.f_Main.cmdRemoveVendor.event(click,cmdremovevendor_click)</string>
        <string>gui.f_Main.cmdRemoveVendor.defaultvalue("")</string>
        <string>gui.f_Main.cmdRemoveVendor.controlgroup(0)</string>
        <string>gui.f_Main.cmdAddContact.create(button)</string>
        <string>gui.f_Main.cmdAddContact.caption("&gt;&gt;")</string>
        <string>gui.f_Main.cmdAddContact.visible(True)</string>
        <string>gui.f_Main.cmdAddContact.size(400,375)</string>
        <string>gui.f_Main.cmdAddContact.zorder(0)</string>
        <string>gui.f_Main.cmdAddContact.position(11540,1500)</string>
        <string>gui.f_Main.cmdAddContact.enabled(True)</string>
        <string>gui.f_Main.cmdAddContact.parent("tabrfq",1)</string>
        <string>gui.f_Main.cmdAddContact.fontname("Arial")</string>
        <string>gui.f_Main.cmdAddContact.fontsize(8)</string>
        <string>gui.f_Main.cmdAddContact.event(click,cmdaddcontact_click)</string>
        <string>gui.f_Main.cmdAddContact.defaultvalue("")</string>
        <string>gui.f_Main.cmdAddContact.controlgroup(0)</string>
        <string>gui.f_Main.cmdRemoveContact.create(button)</string>
        <string>gui.f_Main.cmdRemoveContact.caption("&lt;&lt;")</string>
        <string>gui.f_Main.cmdRemoveContact.visible(True)</string>
        <string>gui.f_Main.cmdRemoveContact.size(400,375)</string>
        <string>gui.f_Main.cmdRemoveContact.zorder(0)</string>
        <string>gui.f_Main.cmdRemoveContact.position(11540,1970)</string>
        <string>gui.f_Main.cmdRemoveContact.enabled(True)</string>
        <string>gui.f_Main.cmdRemoveContact.parent("tabrfq",1)</string>
        <string>gui.f_Main.cmdRemoveContact.fontname("Arial")</string>
        <string>gui.f_Main.cmdRemoveContact.fontsize(8)</string>
        <string>gui.f_Main.cmdRemoveContact.event(click,cmdremovecontact_click)</string>
        <string>gui.f_Main.cmdRemoveContact.defaultvalue("")</string>
        <string>gui.f_Main.cmdRemoveContact.controlgroup(0)</string>
        <string>gui.f_Main.cmdDocuments.create(button)</string>
        <string>gui.f_Main.cmdDocuments.caption("Documents")</string>
        <string>gui.f_Main.cmdDocuments.visible(True)</string>
        <string>gui.f_Main.cmdDocuments.size(1100,390)</string>
        <string>gui.f_Main.cmdDocuments.zorder(0)</string>
        <string>gui.f_Main.cmdDocuments.position(2590,5845)</string>
        <string>gui.f_Main.cmdDocuments.enabled(True)</string>
        <string>gui.f_Main.cmdDocuments.fontname("Arial")</string>
        <string>gui.f_Main.cmdDocuments.fontsize(8)</string>
        <string>gui.f_Main.cmdDocuments.event(click,f_main_documents)</string>
        <string>gui.f_Main.cmdDocuments.defaultvalue("")</string>
        <string>gui.f_Main.cmdDocuments.controlgroup(0)</string>
        <string>gui.f_Main.lblPart.create(label,"Part",True,1000,255,1,100,5235,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblPart.defaultvalue("")</string>
        <string>gui.f_Main.lblPart.controlgroup(0)</string>
        <string>gui.f_Main.lblDesc.create(label,"Description",True,1700,255,1,2600,5235,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblDesc.defaultvalue("")</string>
        <string>gui.f_Main.lblDesc.controlgroup(0)</string>
        <string>gui.f_Main.txtPart.create(textbox,"",True,2000,300,0,100,5435,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtPart.event(lostfocus,txtpart_lostfocus)</string>
        <string>gui.f_Main.txtPart.defaultvalue("")</string>
        <string>gui.f_Main.txtPart.controlgroup(3)</string>
        <string>gui.f_Main.txtDescription.create(textbox,"",True,3000,300,0,2600,5435,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtDescription.defaultvalue("")</string>
        <string>gui.f_Main.txtDescription.controlgroup(3)</string>
        <string>gui.f_Main.lblRouter.create(label,"Router",True,1000,255,1,5620,25,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblRouter.parent("tabrfq",2)</string>
        <string>gui.f_Main.lblRouter.defaultvalue("")</string>
        <string>gui.f_Main.lblRouter.controlgroup(0)</string>
        <string>gui.f_Main.txtRouter.create(textbox,"",True,2000,300,0,5620,240,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtRouter.parent("tabrfq",2)</string>
        <string>gui.f_Main.txtRouter.event(lostfocus,txtrouter_lostfocus)</string>
        <string>gui.f_Main.txtRouter.defaultvalue("")</string>
        <string>gui.f_Main.txtRouter.controlgroup(3)</string>
        <string>gui.f_Main.txtRouterQty.create(textbox,"",True,1200,300,0,8505,240,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtRouterQty.parent("tabrfq",2)</string>
        <string>gui.f_Main.txtRouterQty.numericonly(2)</string>
        <string>gui.f_Main.txtRouterQty.event(lostfocus,txtrouterqty_lostfocus)</string>
        <string>gui.f_Main.txtRouterQty.defaultvalue("")</string>
        <string>gui.f_Main.txtRouterQty.controlgroup(3)</string>
        <string>gui.f_Main.lblRouterQty.create(label,"Router Qty",True,1000,255,1,8490,30,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblRouterQty.parent("tabrfq",2)</string>
        <string>gui.f_Main.lblRouterQty.defaultvalue("")</string>
        <string>gui.f_Main.lblRouterQty.controlgroup(0)</string>
        <string>gui.f_Main.cmdBrwRouter.create(button)</string>
        <string>gui.f_Main.cmdBrwRouter.caption("^")</string>
        <string>gui.f_Main.cmdBrwRouter.visible(True)</string>
        <string>gui.f_Main.cmdBrwRouter.size(300,300)</string>
        <string>gui.f_Main.cmdBrwRouter.zorder(0)</string>
        <string>gui.f_Main.cmdBrwRouter.position(7700,240)</string>
        <string>gui.f_Main.cmdBrwRouter.enabled(True)</string>
        <string>gui.f_Main.cmdBrwRouter.parent("tabrfq",2)</string>
        <string>gui.f_Main.cmdBrwRouter.fontname("Arial")</string>
        <string>gui.f_Main.cmdBrwRouter.fontsize(8)</string>
        <string>gui.f_Main.cmdBrwRouter.event(click,cmdbrwrouter_click)</string>
        <string>gui.f_Main.cmdBrwRouter.defaultvalue("")</string>
        <string>gui.f_Main.cmdBrwRouter.controlgroup(0)</string>
        <string>gui.f_Main.txtJob.create(textbox,"",True,1000,300,0,50,240,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtJob.parent("tabrfq",2)</string>
        <string>gui.f_Main.txtJob.event(lostfocus,txtjob_lostfocus)</string>
        <string>gui.f_Main.txtJob.defaultvalue("")</string>
        <string>gui.f_Main.txtJob.controlgroup(3)</string>
        <string>gui.f_Main.txtSuffix.create(textbox,"",True,500,300,0,1170,245,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtSuffix.parent("tabrfq",2)</string>
        <string>gui.f_Main.txtSuffix.event(lostfocus,txtsuffix_lostfocus)</string>
        <string>gui.f_Main.txtSuffix.defaultvalue("")</string>
        <string>gui.f_Main.txtSuffix.controlgroup(3)</string>
        <string>gui.f_Main.cmdBrwJob.create(button)</string>
        <string>gui.f_Main.cmdBrwJob.caption("^")</string>
        <string>gui.f_Main.cmdBrwJob.visible(True)</string>
        <string>gui.f_Main.cmdBrwJob.size(300,300)</string>
        <string>gui.f_Main.cmdBrwJob.zorder(0)</string>
        <string>gui.f_Main.cmdBrwJob.position(1755,240)</string>
        <string>gui.f_Main.cmdBrwJob.enabled(True)</string>
        <string>gui.f_Main.cmdBrwJob.parent("tabrfq",2)</string>
        <string>gui.f_Main.cmdBrwJob.fontname("Arial")</string>
        <string>gui.f_Main.cmdBrwJob.fontsize(8)</string>
        <string>gui.f_Main.cmdBrwJob.event(click,cmdbrwjob_click)</string>
        <string>gui.f_Main.cmdBrwJob.defaultvalue("")</string>
        <string>gui.f_Main.cmdBrwJob.controlgroup(0)</string>
        <string>gui.f_Main.lblJob.create(label,"Starting Job",True,925,255,1,65,40,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblJob.parent("tabrfq",2)</string>
        <string>gui.f_Main.lblJob.defaultvalue("")</string>
        <string>gui.f_Main.lblJob.controlgroup(0)</string>
        <string>gui.f_Main.lblSuffix.create(label,"Suffix",True,500,255,1,1170,40,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblSuffix.parent("tabrfq",2)</string>
        <string>gui.f_Main.lblSuffix.defaultvalue("")</string>
        <string>gui.f_Main.lblSuffix.controlgroup(0)</string>
        <string>gui.f_Main.lvRouterWOSeq.create(listview)</string>
        <string>gui.f_Main.lvRouterWOSeq.view(3)</string>
        <string>gui.f_Main.lvRouterWOSeq.addlistviewcolumn("Sequence",1650,0)</string>
        <string>gui.f_Main.lvRouterWOSeq.addlistviewcolumn("Part",2200,0)</string>
        <string>gui.f_Main.lvRouterWOSeq.addlistviewcolumn("Description",2600,0)</string>
        <string>gui.f_Main.lvRouterWOSeq.addlistviewcolumn("Quantity",1035,0)</string>
        <string>gui.f_Main.lvRouterWOSeq.addlistviewcolumn("Required Date",1320,0)</string>
        <string>gui.f_Main.lvRouterWOSeq.addlistviewcolumn("Work Order",1800,0)</string>
        <string>gui.f_Main.lvRouterWOSeq.visible(True)</string>
        <string>gui.f_Main.lvRouterWOSeq.size(17450,3875)</string>
        <string>gui.f_Main.lvRouterWOSeq.zorder(0)</string>
        <string>gui.f_Main.lvRouterWOSeq.position(50,640)</string>
        <string>gui.f_Main.lvRouterWOSeq.enabled(True)</string>
        <string>gui.f_Main.lvRouterWOSeq.parent("tabrfq",2)</string>
        <string>gui.f_Main.lvRouterWOSeq.fontname("Arial")</string>
        <string>gui.f_Main.lvRouterWOSeq.fontsize(8)</string>
        <string>gui.f_Main.lvRouterWOSeq.event(columnclick,lvrouterwoseq_columnclick)</string>
        <string>gui.f_Main.lvRouterWOSeq.event(itemclick,lvrouterwoseq_itemclick)</string>
        <string>gui.f_Main.lblQuantity.create(label,"Quantity",True,1000,255,1,5700,5235,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblQuantity.defaultvalue("")</string>
        <string>gui.f_Main.lblQuantity.controlgroup(0)</string>
        <string>gui.f_Main.txtQuantity.create(textbox,"",True,1200,300,0,5700,5435,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtQuantity.defaultvalue("")</string>
        <string>gui.f_Main.txtQuantity.controlgroup(3)</string>
        <string>gui.f_Main.lblReqDate.create(label,"Req. Date",True,1000,255,1,7000,5235,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblReqDate.defaultvalue("")</string>
        <string>gui.f_Main.lblReqDate.controlgroup(0)</string>
        <string>gui.f_Main.dtpDueDate.create(datepicker)</string>
        <string>gui.f_Main.dtpDueDate.visible(True)</string>
        <string>gui.f_Main.dtpDueDate.size(1500,285)</string>
        <string>gui.f_Main.dtpDueDate.zorder(0)</string>
        <string>gui.f_Main.dtpDueDate.position(7000,5435)</string>
        <string>gui.f_Main.dtpDueDate.enabled(True)</string>
        <string>gui.f_Main.dtpDueDate.checkbox(False)</string>
        <string>gui.f_Main.dtpDueDate.defaultvalue("")</string>
        <string>gui.f_Main.dtpDueDate.controlgroup(0)</string>
        <string>gui.f_Main.cmdAddLine.create(button)</string>
        <string>gui.f_Main.cmdAddLine.caption("Add")</string>
        <string>gui.f_Main.cmdAddLine.visible(True)</string>
        <string>gui.f_Main.cmdAddLine.size(1100,375)</string>
        <string>gui.f_Main.cmdAddLine.zorder(0)</string>
        <string>gui.f_Main.cmdAddLine.position(100,5845)</string>
        <string>gui.f_Main.cmdAddLine.enabled(True)</string>
        <string>gui.f_Main.cmdAddLine.fontname("Arial")</string>
        <string>gui.f_Main.cmdAddLine.fontsize(8)</string>
        <string>gui.f_Main.cmdAddLine.event(click,cmdaddline_click)</string>
        <string>gui.f_Main.cmdAddLine.defaultvalue("")</string>
        <string>gui.f_Main.cmdAddLine.controlgroup(0)</string>
        <string>gui.f_Main.cmdRemoveLine.create(button)</string>
        <string>gui.f_Main.cmdRemoveLine.caption("Remove")</string>
        <string>gui.f_Main.cmdRemoveLine.visible(True)</string>
        <string>gui.f_Main.cmdRemoveLine.size(1100,375)</string>
        <string>gui.f_Main.cmdRemoveLine.zorder(0)</string>
        <string>gui.f_Main.cmdRemoveLine.position(1340,5845)</string>
        <string>gui.f_Main.cmdRemoveLine.enabled(True)</string>
        <string>gui.f_Main.cmdRemoveLine.fontname("Arial")</string>
        <string>gui.f_Main.cmdRemoveLine.fontsize(8)</string>
        <string>gui.f_Main.cmdRemoveLine.event(click,f_main_remove_line)</string>
        <string>gui.f_Main.cmdRemoveLine.defaultvalue("")</string>
        <string>gui.f_Main.cmdRemoveLine.controlgroup(0)</string>
        <string>gui.f_Main.cmdBrwPart.create(button)</string>
        <string>gui.f_Main.cmdBrwPart.caption("^")</string>
        <string>gui.f_Main.cmdBrwPart.visible(True)</string>
        <string>gui.f_Main.cmdBrwPart.size(300,300)</string>
        <string>gui.f_Main.cmdBrwPart.zorder(0)</string>
        <string>gui.f_Main.cmdBrwPart.position(2200,5435)</string>
        <string>gui.f_Main.cmdBrwPart.enabled(True)</string>
        <string>gui.f_Main.cmdBrwPart.fontname("Arial")</string>
        <string>gui.f_Main.cmdBrwPart.fontsize(8)</string>
        <string>gui.f_Main.cmdBrwPart.event(click,cmdbrwpart_click)</string>
        <string>gui.f_Main.cmdBrwPart.defaultvalue("")</string>
        <string>gui.f_Main.cmdBrwPart.controlgroup(0)</string>
        <string>gui.f_Main.lbl14.create(label,"User",True,1935,255,1,14625,5245,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lbl14.defaultvalue("")</string>
        <string>gui.f_Main.lbl14.controlgroup(0)</string>
        <string>gui.f_Main.chkRequisitions.create(checkbox)</string>
        <string>gui.f_Main.chkRequisitions.caption("Requisitions")</string>
        <string>gui.f_Main.chkRequisitions.visible(True)</string>
        <string>gui.f_Main.chkRequisitions.size(1200,255)</string>
        <string>gui.f_Main.chkRequisitions.zorder(0)</string>
        <string>gui.f_Main.chkRequisitions.position(9965,240)</string>
        <string>gui.f_Main.chkRequisitions.enabled(True)</string>
        <string>gui.f_Main.chkRequisitions.alignment(0)</string>
        <string>gui.f_Main.chkRequisitions.parent("tabrfq",2)</string>
        <string>gui.f_Main.chkRequisitions.fontname("Arial")</string>
        <string>gui.f_Main.chkRequisitions.fontsize(8)</string>
        <string>gui.f_Main.chkRequisitions.event(click,chkrequisitions_click)</string>
        <string>gui.f_Main.chkRequisitions.defaultvalue("")</string>
        <string>gui.f_Main.chkRequisitions.controlgroup(0)</string>
        <string>gui.f_Main.txtJob2.create(textbox,"",True,1050,300,0,8590,5430,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtJob2.defaultvalue("")</string>
        <string>gui.f_Main.txtJob2.controlgroup(0)</string>
        <string>gui.f_Main.txtSuffix2.create(textbox,"",True,600,300,0,9730,5430,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtSuffix2.defaultvalue("")</string>
        <string>gui.f_Main.txtSuffix2.controlgroup(0)</string>
        <string>gui.f_Main.lblJob2.create(label,"Job",True,1935,255,1,8615,5245,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblJob2.defaultvalue("")</string>
        <string>gui.f_Main.lblJob2.controlgroup(0)</string>
        <string>gui.f_Main.lblSuffix2.create(label,"Suffix",True,1935,255,1,9745,5245,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblSuffix2.defaultvalue("")</string>
        <string>gui.f_Main.lblSuffix2.controlgroup(0)</string>
        <string>gui.f_Main.cmdBrwJob2.create(button)</string>
        <string>gui.f_Main.cmdBrwJob2.caption("^")</string>
        <string>gui.f_Main.cmdBrwJob2.visible(True)</string>
        <string>gui.f_Main.cmdBrwJob2.size(300,300)</string>
        <string>gui.f_Main.cmdBrwJob2.zorder(0)</string>
        <string>gui.f_Main.cmdBrwJob2.position(10400,5420)</string>
        <string>gui.f_Main.cmdBrwJob2.enabled(True)</string>
        <string>gui.f_Main.cmdBrwJob2.fontname("Arial")</string>
        <string>gui.f_Main.cmdBrwJob2.fontsize(8)</string>
        <string>gui.f_Main.cmdBrwJob2.event(click,cmdbrwjob2_click)</string>
        <string>gui.f_Main.cmdBrwJob2.defaultvalue("")</string>
        <string>gui.f_Main.cmdBrwJob2.controlgroup(0)</string>
        <string>gui.f_Main.cmdbrwEnding.create(button)</string>
        <string>gui.f_Main.cmdbrwEnding.caption("^")</string>
        <string>gui.f_Main.cmdbrwEnding.visible(True)</string>
        <string>gui.f_Main.cmdbrwEnding.size(300,300)</string>
        <string>gui.f_Main.cmdbrwEnding.zorder(0)</string>
        <string>gui.f_Main.cmdbrwEnding.position(4435,245)</string>
        <string>gui.f_Main.cmdbrwEnding.enabled(True)</string>
        <string>gui.f_Main.cmdbrwEnding.parent("tabrfq",2)</string>
        <string>gui.f_Main.cmdbrwEnding.fontname("Arial")</string>
        <string>gui.f_Main.cmdbrwEnding.fontsize(8)</string>
        <string>gui.f_Main.cmdbrwEnding.event(click,cmdbrwending_click)</string>
        <string>gui.f_Main.cmdbrwEnding.defaultvalue("")</string>
        <string>gui.f_Main.cmdbrwEnding.controlgroup(0)</string>
        <string>gui.f_Main.txtEndSuff.create(textbox,"",True,500,300,0,3865,225,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtEndSuff.parent("tabrfq",2)</string>
        <string>gui.f_Main.txtEndSuff.defaultvalue("")</string>
        <string>gui.f_Main.txtEndSuff.controlgroup(0)</string>
        <string>gui.f_Main.txtEndJob.create(textbox,"",True,1000,300,0,2720,245,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Main.txtEndJob.parent("tabrfq",2)</string>
        <string>gui.f_Main.txtEndJob.defaultvalue("")</string>
        <string>gui.f_Main.txtEndJob.controlgroup(0)</string>
        <string>gui.f_Main.lblEndingJob.create(label,"Ending Job",True,900,255,1,2750,50,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblEndingJob.parent("tabrfq",2)</string>
        <string>gui.f_Main.lblEndingJob.defaultvalue("")</string>
        <string>gui.f_Main.lblEndingJob.controlgroup(0)</string>
        <string>gui.f_Main.lblEndingSuff.create(label,"Suffix",True,480,255,1,3875,50,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblEndingSuff.parent("tabrfq",2)</string>
        <string>gui.f_Main.lblEndingSuff.defaultvalue("")</string>
        <string>gui.f_Main.lblEndingSuff.controlgroup(0)</string>
        <string>gui.f_Main.lblto.create(label,"to",True,360,330,1,2295,290,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Main.lblto.parent("tabrfq",2)</string>
        <string>gui.f_Main.lblto.defaultvalue("")</string>
        <string>gui.f_Main.lblto.controlgroup(0)</string>
        <string>gui.f_Main.txtRName.tabstop(True)</string>
        <string>gui.f_Main.txtRName.tabindex(1)</string>
        <string>gui.f_Main.cmdBrwReply.tabstop(True)</string>
        <string>gui.f_Main.cmdBrwReply.tabindex(2)</string>
        <string>gui.f_Main.txtUser.tabstop(True)</string>
        <string>gui.f_Main.txtUser.tabindex(3)</string>
        <string>gui.f_Main.txtREmail.tabstop(True)</string>
        <string>gui.f_Main.txtREmail.tabindex(4)</string>
        <string>gui.f_Main.txtRFax.tabstop(True)</string>
        <string>gui.f_Main.txtRFax.tabindex(5)</string>
        <string>gui.f_Main.dtpReplyBy.tabstop(True)</string>
        <string>gui.f_Main.dtpReplyBy.tabindex(6)</string>
        <string>gui.f_Main.txtVendor.tabstop(True)</string>
        <string>gui.f_Main.txtVendor.tabindex(7)</string>
        <string>gui.f_Main.cmdBrwVendor.tabstop(True)</string>
        <string>gui.f_Main.cmdBrwVendor.tabindex(8)</string>
        <string>gui.f_Main.txtVendorName.tabstop(True)</string>
        <string>gui.f_Main.txtVendorName.tabindex(9)</string>
        <string>gui.f_Main.cmdAddVendor.tabstop(True)</string>
        <string>gui.f_Main.cmdAddVendor.tabindex(10)</string>
        <string>gui.f_Main.cmdRemoveVendor.tabstop(True)</string>
        <string>gui.f_Main.cmdRemoveVendor.tabindex(11)</string>
        <string>gui.f_Main.lvSelVendors.tabstop(True)</string>
        <string>gui.f_Main.lvSelVendors.tabindex(12)</string>
        <string>gui.f_Main.lvAvailContacts.tabstop(True)</string>
        <string>gui.f_Main.lvAvailContacts.tabindex(13)</string>
        <string>gui.f_Main.cmdAddContact.tabstop(True)</string>
        <string>gui.f_Main.cmdAddContact.tabindex(14)</string>
        <string>gui.f_Main.cmdRemoveContact.tabstop(True)</string>
        <string>gui.f_Main.cmdRemoveContact.tabindex(15)</string>
        <string>gui.f_Main.lvlSelContacts.tabstop(True)</string>
        <string>gui.f_Main.lvlSelContacts.tabindex(16)</string>
        <string>gui.f_Main.txtJob.tabstop(True)</string>
        <string>gui.f_Main.txtJob.tabindex(23)</string>
        <string>gui.f_Main.txtSuffix.tabstop(True)</string>
        <string>gui.f_Main.txtSuffix.tabindex(24)</string>
        <string>gui.f_Main.cmdBrwJob.tabstop(True)</string>
        <string>gui.f_Main.cmdBrwJob.tabindex(25)</string>
        <string>gui.f_Main.txtPart.tabstop(True)</string>
        <string>gui.f_Main.txtPart.tabindex(27)</string>
        <string>gui.f_Main.cmdBrwPart.tabstop(True)</string>
        <string>gui.f_Main.cmdBrwPart.tabindex(28)</string>
        <string>gui.f_Main.txtDescription.tabstop(True)</string>
        <string>gui.f_Main.txtDescription.tabindex(29)</string>
        <string>gui.f_Main.txtQuantity.tabstop(True)</string>
        <string>gui.f_Main.txtQuantity.tabindex(30)</string>
        <string>gui.f_Main.dtpDueDate.tabstop(True)</string>
        <string>gui.f_Main.dtpDueDate.tabindex(31)</string>
        <string>gui.f_Main.txtJob2.tabstop(True)</string>
        <string>gui.f_Main.txtJob2.tabindex(32)</string>
        <string>gui.f_Main.txtSuffix2.tabstop(True)</string>
        <string>gui.f_Main.txtSuffix2.tabindex(33)</string>
        <string>gui.f_Main.cmdBrwJob2.tabstop(True)</string>
        <string>gui.f_Main.cmdBrwJob2.tabindex(34)</string>
        <string>gui.f_Main.cmdAddLine.tabstop(True)</string>
        <string>gui.f_Main.cmdAddLine.tabindex(35)</string>
        <string>gui.f_Main.cmdRemoveLine.tabstop(True)</string>
        <string>gui.f_Main.cmdRemoveLine.tabindex(36)</string>
        <string>gui.f_Main.cmdDocuments.tabstop(True)</string>
        <string>gui.f_Main.cmdDocuments.tabindex(37)</string>
        <string>gui.f_Main.cmdSave.tabstop(True)</string>
        <string>gui.f_Main.cmdSave.tabindex(38)</string>
        <string>gui.f_Main.lvParts.tabstop(True)</string>
        <string>gui.f_Main.lvParts.tabindex(43)</string>
        <string />
        <string />
        <string>gui.f_Send..create</string>
        <string>gui.f_Send..caption("Send RFQs to Vendors")</string>
        <string>gui.f_Send..size(9900,6420)</string>
        <string>gui.f_Send..minx(0)</string>
        <string>gui.f_Send..miny(0)</string>
        <string>gui.f_Send..position(0,0)</string>
        <string>gui.f_Send..event(unload,f_Send_unload)</string>
        <string>gui.f_Send..alwaysontop(False)</string>
        <string>gui.f_Send..fontname("Arial")</string>
        <string>gui.f_Send..fontsize(8)</string>
        <string>gui.f_Send..forecolor(0)</string>
        <string>gui.f_Send..fontstyle(,,,,)</string>
        <string>gui.f_Send..BackColor(-2147483633)</string>
        <string>gui.f_Send..controlbox(True)</string>
        <string>gui.f_Send..maxbutton(True)</string>
        <string>gui.f_Send..minbutton(True)</string>
        <string>gui.f_Send..mousepointer(0)</string>
        <string>gui.f_Send..moveable(True)</string>
        <string>gui.f_Send..sizeable(True)</string>
        <string>gui.f_Send..ShowInTaskBar(True)</string>
        <string>gui.f_Send..titlebar(True)</string>
        <string>gui.f_Send.fgRFQs.create(gsflexgrid)</string>
        <string>gui.f_Send.fgRFQs.FixedRows(0)</string>
        <string>gui.f_Send.fgRFQs.FixedCols(0)</string>
        <string>gui.f_Send.fgRFQs.visible(True)</string>
        <string>gui.f_Send.fgRFQs.size(9500,2500)</string>
        <string>gui.f_Send.fgRFQs.zorder(0)</string>
        <string>gui.f_Send.fgRFQs.position(100,100)</string>
        <string>gui.f_Send.fgRFQs.enabled(True)</string>
        <string>gui.f_Send.cmdProcess.create(button)</string>
        <string>gui.f_Send.cmdProcess.caption("Process")</string>
        <string>gui.f_Send.cmdProcess.visible(True)</string>
        <string>gui.f_Send.cmdProcess.size(1000,375)</string>
        <string>gui.f_Send.cmdProcess.zorder(0)</string>
        <string>gui.f_Send.cmdProcess.position(100,5300)</string>
        <string>gui.f_Send.cmdProcess.enabled(True)</string>
        <string>gui.f_Send.cmdProcess.fontname("Arial")</string>
        <string>gui.f_Send.cmdProcess.fontsize(8)</string>
        <string>gui.f_Send.cmdProcess.event(click,f_Send_Process)</string>
        <string>gui.f_Send.cmdProcess.defaultvalue("")</string>
        <string>gui.f_Send.cmdProcess.controlgroup(0)</string>
        <string>gui.f_Send.txtSubject.create(textbox,"Request For Quote Attached",True,9500,300,0,100,3050,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Send.txtSubject.defaultvalue("")</string>
        <string>gui.f_Send.txtSubject.controlgroup(0)</string>
        <string>gui.f_Send.txtBody.create(textboxm)</string>
        <string>gui.f_Send.txtBody.text("Please see attached Request for Quote and respond accordingly.")</string>
        <string>gui.f_Send.txtBody.visible(True)</string>
        <string>gui.f_Send.txtBody.size(9500,1500)</string>
        <string>gui.f_Send.txtBody.zorder(0)</string>
        <string>gui.f_Send.txtBody.position(100,3650)</string>
        <string>gui.f_Send.txtBody.enabled(True)</string>
        <string>gui.f_Send.txtBody.alignment(0)</string>
        <string>gui.f_Send.txtBody.fontname("Arial")</string>
        <string>gui.f_Send.txtBody.fontsize(8)</string>
        <string>gui.f_Send.txtBody.BackColor(-2147483643)</string>
        <string>gui.f_Send.txtBody.defaultvalue("")</string>
        <string>gui.f_Send.txtBody.controlgroup(0)</string>
        <string>gui.f_Send.lblSubject.create(label,"Subject",,9500,255,1,100,2850,True,0,,8,-2147483633,0)</string>
        <string>gui.f_Send.lblSubject.defaultvalue("")</string>
        <string>gui.f_Send.lblSubject.controlgroup(0)</string>
        <string>gui.f_Send.lblBody.create(label,"Body",,9500,255,1,100,3450,True,0,,8,-2147483633,0)</string>
        <string>gui.f_Send.lblBody.defaultvalue("")</string>
        <string>gui.f_Send.lblBody.controlgroup(0)</string>
        <string />
        <string />
        <string>gui.f_Docs..create</string>
        <string>gui.f_Docs..caption("Documents")</string>
        <string>gui.f_Docs..size(7365,5055)</string>
        <string>gui.f_Docs..minx(0)</string>
        <string>gui.f_Docs..miny(0)</string>
        <string>gui.f_Docs..position(0,0)</string>
        <string>gui.f_Docs..event(unload,f_docs_unload)</string>
        <string>gui.f_Docs..alwaysontop(False)</string>
        <string>gui.f_Docs..fontname("Arial")</string>
        <string>gui.f_Docs..fontsize(8)</string>
        <string>gui.f_Docs..forecolor(0)</string>
        <string>gui.f_Docs..fontstyle(,,,,)</string>
        <string>gui.f_Docs..BackColor(-2147483633)</string>
        <string>gui.f_Docs..controlbox(True)</string>
        <string>gui.f_Docs..maxbutton(True)</string>
        <string>gui.f_Docs..minbutton(True)</string>
        <string>gui.f_Docs..mousepointer(0)</string>
        <string>gui.f_Docs..moveable(True)</string>
        <string>gui.f_Docs..sizeable(True)</string>
        <string>gui.f_Docs..ShowInTaskBar(True)</string>
        <string>gui.f_Docs..titlebar(True)</string>
        <string>gui.f_Docs.txtdocpath.create(textbox,"",True,6180,300,0,185,450,True,0,Arial,8,-2147483643,1)</string>
        <string>gui.f_Docs.txtdocpath.defaultvalue("")</string>
        <string>gui.f_Docs.txtdocpath.controlgroup(0)</string>
        <string>gui.f_Docs.lblDocPath.create(label,"Document Path",True,1935,255,1,230,240,True,0,Arial,8,-2147483633,0)</string>
        <string>gui.f_Docs.lblDocPath.defaultvalue("")</string>
        <string>gui.f_Docs.lblDocPath.controlgroup(0)</string>
        <string>gui.f_Docs.lvDocs.create(listview)</string>
        <string>gui.f_Docs.lvDocs.view(3)</string>
        <string>gui.f_Docs.lvDocs.addlistviewcolumn("Line",615,0)</string>
        <string>gui.f_Docs.lvDocs.addlistviewcolumn("Document Path",5000,2)</string>
        <string>gui.f_Docs.lvDocs.visible(True)</string>
        <string>gui.f_Docs.lvDocs.size(6705,2610)</string>
        <string>gui.f_Docs.lvDocs.zorder(0)</string>
        <string>gui.f_Docs.lvDocs.position(200,1540)</string>
        <string>gui.f_Docs.lvDocs.enabled(True)</string>
        <string>gui.f_Docs.lvDocs.fontname("Arial")</string>
        <string>gui.f_Docs.lvDocs.fontsize(8)</string>
        <string>gui.f_Docs.cmdAddDoc.create(button)</string>
        <string>gui.f_Docs.cmdAddDoc.caption("Add")</string>
        <string>gui.f_Docs.cmdAddDoc.visible(True)</string>
        <string>gui.f_Docs.cmdAddDoc.size(1100,375)</string>
        <string>gui.f_Docs.cmdAddDoc.zorder(0)</string>
        <string>gui.f_Docs.cmdAddDoc.position(200,875)</string>
        <string>gui.f_Docs.cmdAddDoc.enabled(True)</string>
        <string>gui.f_Docs.cmdAddDoc.fontname("Arial")</string>
        <string>gui.f_Docs.cmdAddDoc.fontsize(8)</string>
        <string>gui.f_Docs.cmdAddDoc.event(click,cmdadddoc_click)</string>
        <string>gui.f_Docs.cmdAddDoc.defaultvalue("")</string>
        <string>gui.f_Docs.cmdAddDoc.controlgroup(0)</string>
        <string>gui.f_Docs.cmdRemoveDoc.create(button)</string>
        <string>gui.f_Docs.cmdRemoveDoc.caption("Remove")</string>
        <string>gui.f_Docs.cmdRemoveDoc.visible(True)</string>
        <string>gui.f_Docs.cmdRemoveDoc.size(1100,375)</string>
        <string>gui.f_Docs.cmdRemoveDoc.zorder(0)</string>
        <string>gui.f_Docs.cmdRemoveDoc.position(1460,875)</string>
        <string>gui.f_Docs.cmdRemoveDoc.enabled(True)</string>
        <string>gui.f_Docs.cmdRemoveDoc.fontname("Arial")</string>
        <string>gui.f_Docs.cmdRemoveDoc.fontsize(8)</string>
        <string>gui.f_Docs.cmdRemoveDoc.event(click,cmdremovedoc_click)</string>
        <string>gui.f_Docs.cmdRemoveDoc.defaultvalue("")</string>
        <string>gui.f_Docs.cmdRemoveDoc.controlgroup(0)</string>
        <string>gui.f_Docs.cmdClearDocs.create(button)</string>
        <string>gui.f_Docs.cmdClearDocs.caption("Clear")</string>
        <string>gui.f_Docs.cmdClearDocs.visible(True)</string>
        <string>gui.f_Docs.cmdClearDocs.size(1100,375)</string>
        <string>gui.f_Docs.cmdClearDocs.zorder(0)</string>
        <string>gui.f_Docs.cmdClearDocs.position(2700,875)</string>
        <string>gui.f_Docs.cmdClearDocs.enabled(True)</string>
        <string>gui.f_Docs.cmdClearDocs.fontname("Arial")</string>
        <string>gui.f_Docs.cmdClearDocs.fontsize(8)</string>
        <string>gui.f_Docs.cmdClearDocs.event(click,cmdclear_click)</string>
        <string>gui.f_Docs.cmdClearDocs.defaultvalue("")</string>
        <string>gui.f_Docs.cmdClearDocs.controlgroup(0)</string>
        <string>gui.f_Docs.cmdDocBrowse.create(button)</string>
        <string>gui.f_Docs.cmdDocBrowse.caption("^")</string>
        <string>gui.f_Docs.cmdDocBrowse.visible(True)</string>
        <string>gui.f_Docs.cmdDocBrowse.size(405,330)</string>
        <string>gui.f_Docs.cmdDocBrowse.zorder(0)</string>
        <string>gui.f_Docs.cmdDocBrowse.position(6465,430)</string>
        <string>gui.f_Docs.cmdDocBrowse.enabled(True)</string>
        <string>gui.f_Docs.cmdDocBrowse.fontname("Arial")</string>
        <string>gui.f_Docs.cmdDocBrowse.fontsize(8)</string>
        <string>gui.f_Docs.cmdDocBrowse.event(click,cmddocbrowse_click)</string>
        <string>gui.f_Docs.cmdDocBrowse.defaultvalue("")</string>
        <string>gui.f_Docs.cmdDocBrowse.controlgroup(0)</string>
        <string>gui.f_Docs.txtdocpath.tabstop(True)</string>
        <string>gui.f_Docs.txtdocpath.tabindex(2)</string>
        <string>gui.f_Docs.cmdAddDoc.tabstop(True)</string>
        <string>gui.f_Docs.cmdAddDoc.tabindex(3)</string>
        <string>gui.f_Docs.cmdRemoveDoc.tabstop(True)</string>
        <string>gui.f_Docs.cmdRemoveDoc.tabindex(4)</string>
        <string />
        <string />
        <string>Program.Sub.ScreenSU.End</string>
        <string />
        <string>Program.Sub.Preflight.Start</string>
        <string />
        <string>Variable.UDT.uContacts.Define("VENDOR",String,CUST)</string>
        <string>Variable.UDT.uContacts.Define("ID",String,ID)</string>
        <string>Variable.UDT.uContacts.Define("EMAIL",String,EMAIL1)</string>
        <string>Variable.UDT.uContacts.Define("NAME",String,FULL_NAME)</string>
        <string>Variable.UDT.uContacts.Define("Selected",Boolean)</string>
        <string>Variable.UDT.uContacts.Define("TIME",String)</string>
        <string>Variable.uGlobal.uContacts.Declare("uContacts")</string>
        <string>Variable.Global.iLastNumber.Declare(Long,0)</string>
        <string>Variable.UDT.uLines.Define("Line",String)</string>
        <string>Variable.UDT.uLines.Define("Part",String)</string>
        <string>Variable.UDT.uLines.Define("Description",String)</string>
        <string>Variable.UDT.uLines.Define("Qty",Float)</string>
        <string>Variable.UDT.uLines.Define("Type",String)</string>
        <string>Variable.UDT.uLines.Define("Router",String)</string>
        <string>Variable.UDT.uLines.Define("Job",String)</string>
        <string>Variable.UDT.uLines.Define("Suffix",String)</string>
        <string>Variable.UDT.uLines.Define("Sequence",String)</string>
        <string>Variable.UDT.uLines.Define("DueDate",String)</string>
        <string>Variable.UDT.uLines.Define("Requisition",String)</string>
        <string>Variable.uGlobal.uLines.Declare("uLines")</string>
        <string>Variable.UDT.uExport.Define("LINE",String,LINE)</string>
        <string>Variable.UDT.uExport.Define("RFQ",String,NUM)</string>
        <string>Variable.UDT.uExport.Define("REPLY_BY",String,REPLY_BY)</string>
        <string>Variable.UDT.uExport.Define("REPLY_NAME",String,REPLY_NAME)</string>
        <string>Variable.UDT.uExport.Define("DATE_SENT",String,DATE_SENT)</string>
        <string>Variable.UDT.uExport.Define("TIME_SENT",String,TIME_SENT)</string>
        <string>Variable.UDT.uExport.Define("METHOD_SENT",String,METHOD_SENT)</string>
        <string>Variable.UDT.uExport.Define("RCVD_DATE",String,RCVD_DATE)</string>
        <string>Variable.UDT.uExport.Define("VENDOR",String,VENDOR)</string>
        <string>Variable.UDT.uExport.Define("VENDOR_NAME",String,VENDOR_NAME)</string>
        <string>Variable.UDT.uExport.Define("CONTACT_NAME",String,CONTACT_NAME)</string>
        <string>Variable.UDT.uExport.Define("EMAIL_ADDRESS",String,EMAIL_ADDRESS)</string>
        <string>Variable.UDT.uExport.Define("MFG_PART_NUMBER",String,MFG_PART_NUMBER)</string>
        <string>Variable.UDT.uExport.Define("MFG_PART_NAME",String,MFG_PART_NAME)</string>
        <string>Variable.UDT.uExport.Define("PART_NUMBER",String,PART_NUMBER)</string>
        <string>Variable.UDT.uExport.Define("PART_DESC",String,PART_DESC)</string>
        <string>Variable.UDT.uExport.Define("UNIT",String,UNIT)</string>
        <string>Variable.UDT.uExport.Define("QUANTITY",Float,QUANTITY)</string>
        <string>Variable.UDT.uExport.Define("REQUIRED_BY",String,REQUIRED_BY)</string>
        <string>Variable.UDT.uExport.Define("FAX_NUMBER",String,FAX_NUMBER)</string>
        <string>Variable.UDT.uExport.Define("REPLY_FAX",String,REPLY_FAX)</string>
        <string>Variable.UDT.uExport.Define("TYPE",String)</string>
        <string>Variable.UDT.uExport.Define("ROUTER",String)</string>
        <string>Variable.UDT.uExport.Define("SUFFIX",String)</string>
        <string>Variable.UDT.uExport.Define("SEQUENCE",String)</string>
        <string>Variable.UDT.uExport.Define("A_RFQ",String)</string>
        <string>Variable.UDT.uExport.Define("A_LINE",String)</string>
        <string>Variable.UDT.uExport.Define("JOB",String)</string>
        <string>Variable.UDT.uExport.Define("REQUISITION",String)</string>
        <string>Variable.UDT.uExport.Define("REPLY_EMAIL",String,REPLY_EMAIL)</string>
        <string>Variable.uGlobal.uExport.Declare("uExport")</string>
        <string>Variable.Global.iLastDocID.Declare(Long,0)</string>
        <string>Variable.Global.sRFQs.Declare(String)</string>
        <string>Variable.UDT.uRFQ.Define("TRMNL_NO",String,TRMNL_NO)</string>
        <string>Variable.UDT.uRFQ.Define("RPTID",String,RPTID)</string>
        <string>Variable.UDT.uRFQ.Define("VENDOR",String,VENDOR)</string>
        <string>Variable.UDT.uRFQ.Define("LINE",String,LINE)</string>
        <string>Variable.UDT.uRFQ.Define("PART",String,PART)</string>
        <string>Variable.UDT.uRFQ.Define("QTY",String,QTY)</string>
        <string>Variable.UDT.uRFQ.Define("DESCR",String,DESCR)</string>
        <string>Variable.UDT.uRFQ.Define("REPLY_NAME",String,REPLY_NAME)</string>
        <string>Variable.UDT.uRFQ.Define("REPLY_EMAIL",String,REPLY_EMAIL)</string>
        <string>Variable.UDT.uRFQ.Define("ATTN",String,ATTN)</string>
        <string>Variable.UDT.uRFQ.Define("FAX_TITLE",String,FAX_TITLE)</string>
        <string>Variable.UDT.uRFQ.Define("KEY_SEQ",String,KEY_SEQ)</string>
        <string>Variable.UDT.uRFQ.Define("REPLY_DATE",String,REPLY_DATE)</string>
        <string>Variable.UDT.uRFQ.Define("REPLY_FAX",String,REPLY_FAX)</string>
        <string>Variable.UDT.uRFQ.Define("REQD_DATE",String,REQD_DATE)</string>
        <string>Variable.UDT.uRFQ.Define("RFQ_DATE",String,RFQ_DATE)</string>
        <string>Variable.UDT.uRFQ.Define("RFQ_NUM",String,RFQ_NUM)</string>
        <string>Variable.UDT.uRFQ.Define("UNIT",String,UNIT)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_ADDS_1",String,VEN_ADDS_1)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_ADDS_2",String,VEN_ADDS_2)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_ADDS_3",String,VEN_ADDS_3)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_ADDS_4",String,VEN_ADDS_4)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_ADDS_5",String,VEN_ADDS_5)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_CITY",String,VEN_CITY)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_COUNTRY",String,VEN_COUNTRY)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_FAX_OUT",String,VEN_FAX_OUT)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_NAME_OUT",String,VEN_NAME_OUT)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_STATE",String,VEN_STATE)</string>
        <string>Variable.UDT.uRFQ.Define("VEN_ZIP",String,VEN_ZIP)</string>
        <string>Variable.Global.sQuoteAll.Declare(String)</string>
        <string>Variable.Global.iNextRFQ.Declare(Long,0)</string>
        <string>Variable.Global.iKey.Declare(Long,0)</string>
        <string>Variable.UDT.uDocuments.Define("uDocuments",String,uDocuments)</string>
        <string>Variable.uGlobal.uDocuments.Declare("uDocuments")</string>
        <string>Variable.Global.sExcelFile.Declare(String)</string>
        <string>Variable.Global.sSeq.Declare(String)</string>
        <string />
        <string>Variable.Global.sSeq2.Declare(String)</string>
        <string>Variable.Global.uVendor.Declare(String)</string>
        <string>Variable.UDT.uExcel.Define("uVendor",String,uVendor)</string>
        <string>Variable.UDT.uExcel.Define("uExcel",String,uExcel)</string>
        <string>Variable.uGlobal.uExcel.Declare("uExcel")</string>
        <string>Variable.uGlobal.uCopy.Declare("uContacts")</string>
        <string>Variable.uGlobal.uRFQ.Declare("uRFQ")</string>
        <string>Variable.Global.sTimeDate.Declare(String)</string>
        <string>Program.Sub.Preflight.End</string>
        <string />
        <string>Program.Sub.Main.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Main_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string>V.Local.iNextRFQ.Declare(Long)</string>
        <string />
        <string>'establish connection to the database</string>
        <string>Function.ODBC.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass,1200)</string>
        <string />
        <string>F.Intrinsic.Debug.EnableLogging</string>
        <string />
        <string>'FIRST, GET USER THAT IS CALLING THE PROGRAM. PASS THAT TO THE "LOADREPLYTO" SUB WHICH WILL LOAD THE REPLY CONTACT INFO</string>
        <string>Function.Intrinsic.Control.CallSub(Loadreplyto,"User",V.Caller.User)</string>
        <string />
        <string>'Make Tab(0) invisible so that the referencing of the other tabs does not change</string>
        <string>Gui.f_Main.tabRFQ.TabVisible(0,False)</string>
        <string />
        <string>'Setting default tab</string>
        <string>Gui.f_Main.tabRFQ.SetTab(1)</string>
        <string>F.Intrinsic.Control.If(V.Caller.Hook,&lt;&gt;,46510)</string>
        <string>	Gui.f_Main..Show</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("Main_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Main.End</string>
        <string />
        <string>Program.Sub.f_Main_Unload.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_Main_Unload_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'close connection to the database and end the program</string>
        <string>Function.ODBC.Connection!conx.Close</string>
        <string>Function.Intrinsic.Control.End</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("f_Main_Unload_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.End</string>
        <string />
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.f_Main_Unload.End</string>
        <string />
        <string>Program.Sub.LoadReplyTo.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("LoadReplyTo_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sUser.Declare(String)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string>V.Local.sName.Declare(String)</string>
        <string>V.Local.sEmail.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sFax.Declare(String)</string>
        <string />
        <string>'GET USER NAME FROM CALLING SUB (THIS SUB IS CALLED FROM MULTIPLE PROCESSES)</string>
        <string>V.Local.sUser.Set(V.Args.User)</string>
        <string />
        <string>'USER NAME</string>
        <string>Gui.f_Main.txtUser.Text(V.Local.sUser)</string>
        <string />
        <string>'GET USER'S FULL NAME</string>
        <string>Function.Global.Security.GetFullName(V.Local.sUser,V.Local.sName)</string>
        <string>Gui.f_Main.txtRName.Text(V.Local.sName)</string>
        <string />
        <string>'GET USER'S EMAIL</string>
        <string>Function.Global.Security.GetUserEmail(V.Local.sUser,V.Local.sEmail)</string>
        <string>Gui.f_Main.txtREmail.Text(V.Local.sEmail)</string>
        <string />
        <string>'Getting pieces of fax number from options</string>
        <string>V.Local.sRet.Redim(0,2)</string>
        <string>F.Global.General.ReadOption(401941,1,"",14,V.Local.sRet(0))</string>
        <string>F.Global.General.ReadOption(401941,1,"",15,V.Local.sRet(1))</string>
        <string>F.Global.General.ReadOption(401941,1,"",16,V.Local.sRet(2))</string>
        <string />
        <string>'Putting together fax number and setting to screen</string>
        <string>F.Intrinsic.String.Build("({0}){1}-{2}",V.Local.sRet(0),V.Local.sRet(1),V.Local.sRet(2),V.Local.sFax)</string>
        <string>Gui.f_Main.txtRFax.Text(V.Local.sFax)</string>
        <string />
        <string>'TERMINATE SUBROUTINE</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("LoadReplyTo_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.LoadReplyTo.End</string>
        <string />
        <string>program.sub.f_main_add_line.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_main_add_part_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.sSeq.Declare(String)</string>
        <string>V.Local.iOrd.Declare(Long)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string>V.Local.iC.Declare(Long,-1)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sReq.Declare(String)</string>
        <string />
        <string>'Making sure user has a part selected to add</string>
        <string>Function.Intrinsic.Control.If(V.Screen.f_Main!txtPart.Text,=,"")</string>
        <string>	Function.Intrinsic.UI.Msgbox("Part Number is Required","Required Fields")</string>
        <string>	Function.Intrinsic.Control.ExitSub</string>
        <string>Function.Intrinsic.Control.ElseIf(V.screen.f_Main!txtQuantity.Text,=&lt;,0)</string>
        <string>	Function.Intrinsic.UI.Msgbox("Quantity must be greater than 0","Required Fields")</string>
        <string>	Function.Intrinsic.Control.ExitSub</string>
        <string>Function.Intrinsic.Control.Endif</string>
        <string />
        <string />
        <string>Function.Intrinsic.Control.Case("Router")</string>
        <string>	Function.Intrinsic.Control.If(V.Screen.f_Main!txtRouter.Text,=,"")</string>
        <string>		Function.Intrinsic.UI.Msgbox("Router number when using type "Router" is required","Required Fields")</string>
        <string>		Function.Intrinsic.Control.ExitSub</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Gui.f_Main.lvRouterWOSeq.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sSeq.Set(V.Screen.f_Main!lvRouterWOSeq.ListItemText(v.Local.iOrd))</string>
        <string>Function.Intrinsic.Control.Case("Job")</string>
        <string>	Function.Intrinsic.Control.If(V.Screen.f_Main!txtJob.Text,=,"")</string>
        <string>		Function.Intrinsic.UI.Msgbox("Job number when using type "Job" is required","Required Fields")</string>
        <string>		Function.Intrinsic.Control.ExitSub</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Gui.f_Main.lvRouterWOSeq.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sSeq.Set(V.Screen.f_Main!lvRouterWOSeq.ListItemText(v.Local.iOrd))</string>
        <string>Function.Intrinsic.Control.Case("Requisition")</string>
        <string>	Function.Intrinsic.Control.If(V.Screen.f_Main!lvRouterWOSeq.SelectedItemKey,&lt;&gt;,"***NORETURN***")</string>
        <string>		Gui.f_Main.lvRouterWOSeq.ListitemKeyToOrdinal(V.Screen.f_Main!lvRouterWOSeq.SelectedItemKey,V.Local.iOrd)</string>
        <string>		V.Local.sReq.Set(V.Screen.f_Main!lvRouterWOSeq.ListItemText(v.Local.iOrd))</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>Function.Intrinsic.Control.EndSelect</string>
        <string />
        <string>'set fields in the uLines UDT</string>
        <string>V.uglobal.uLines(v.Local.iC)!Part.Set(V.Screen.f_Main!txtPart.Text)</string>
        <string>V.uGlobal.uLines(v.Local.iC)!Description.Set(V.Screen.f_Main!txtDescription.Text)</string>
        <string>V.uGlobal.uLines(v.Local.iC)!Qty.Set(V.Screen.f_Main!txtQuantity.Text)</string>
        <string>V.uglobal.uLines(v.Local.iC)!Router.Set(V.Screen.f_Main!txtRouter.Text)</string>
        <string>V.uGlobal.uLines(v.Local.iC)!Job.Set(V.Screen.f_Main!txtJob.Text)</string>
        <string>V.uGlobal.uLines(v.Local.iC)!Suffix.Set(V.Screen.f_Main!txtSuffix.Text)</string>
        <string>V.uGlobal.uLines(v.Local.iC)!Sequence.Set(V.Local.sSeq.Trim)</string>
        <string>V.uglobal.uLines(v.Local.iC)!DueDate.Set(V.Screen.f_Main!dtpDueDate.Value)</string>
        <string>V.uGlobal.uLines(v.local.iC)!Requisition.Set(V.Screen.f_Main!txtReq.Text)</string>
        <string />
        <string>Function.Intrinsic.Control.CallSub(Loadlinesgrid)</string>
        <string />
        <string>'TERMINATE SUBROUTINE</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("f_main_add_part_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.f_main_add_line.End</string>
        <string />
        <string>program.sub.f_main_remove_line.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_main_remove_line_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.iOrd.Declare(Long)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string />
        <string />
        <string>V.Local.sText.Declare(String)</string>
        <string />
        <string>Gui.f_Main.lvParts.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>Function.Intrinsic.Control.If(V.Local.sKey,&lt;&gt;,"***NORETURN***")</string>
        <string>	Gui.f_Main.lvParts.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sText.Set(V.Screen.f_Main!lvParts.ListItemText(V.Local.iOrd))</string>
        <string />
        <string>	'flag fields in the udt and delete them</string>
        <string>	Function.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uLines!LINE,V.Local.sText)</string>
        <string>	Function.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uLines)</string>
        <string />
        <string>	'remove the part form the listview</string>
        <string>	Gui.f_Main.lvParts.RemoveItem(V.Local.sKey)</string>
        <string />
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>'TERMINATE SUBROUTINE</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("f_main_remove_line_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.f_main_remove_line.End</string>
        <string />
        <string>program.sub.f_main_documents.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_main_load_docs_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.iRet.Declare(Long)</string>
        <string />
        <string>Gui.f_Docs..Visible(true)</string>
        <string />
        <string>V.Local.sFile.Declare(String)</string>
        <string />
        <string>'TERMINATE SUBROUTINE</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("f_main_load_docs_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.f_main_documents.End</string>
        <string />
        <string>program.sub.f_main_load_line.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_main_load_line_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.iOrd.Declare(Long)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string />
        <string>Gui.f_Main.lvParts.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>Gui.f_Main.lvParts.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string />
        <string>Function.Intrinsic.String.Split(V.SCreen.f_Main!lvParts.ListItemTextExtended(v.Local.iOrd),"*!*",V.Local.sText)</string>
        <string />
        <string>'Gui.f_Main.txtLine.Text(V.Local.sText(0).Trim)</string>
        <string>Gui.f_Main.txtPart.Text(V.Local.sText(1).Trim)</string>
        <string>Gui.f_Main.txtDescription.Text(V.Local.sText(2).Trim)</string>
        <string>Gui.f_Main.txtQuantity.Text(V.Local.sText(3).Trim)</string>
        <string>'Gui.f_Main.txtRouter.Text(V.Local.sText(6).Trim)</string>
        <string>Gui.f_Main.txtJob.Text(V.Local.sText(5).Trim)</string>
        <string>Gui.f_Main.txtSuffix.Text(V.Local.sText(6).Trim)</string>
        <string />
        <string>Function.Intrinsic.Control.Case("Router")</string>
        <string>Function.Intrinsic.Control.Case("Job")</string>
        <string>Function.Intrinsic.Control.EndSelect</string>
        <string />
        <string>'TERMINATE SUBROUTINE</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("f_main_load_line_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.f_main_load_line.End</string>
        <string />
        <string>Program.Sub.LoadLinesGrid.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("LoadLinesGrid_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.iLastLine.Declare(Long,0)</string>
        <string>V.Local.i2.Declare(Long)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string />
        <string>Gui.f_Main.lvParts.ClearItems</string>
        <string />
        <string>'loop through the uLines UDT</string>
        <string>F.Intrinsic.Control.For(V.Local.i,V.uGlobal.uLines.LBound,V.uGlobal.uLines.UBound,1)</string>
        <string>	F.Intrinsic.Math.Add(V.Local.iLastLine,1,V.Local.iLastLine)</string>
        <string>		Function.Intrinsic.Control.If(V.Local.sRet,&lt;&gt;,"")</string>
        <string>		Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>		Function.Intrinsic.Control.For(V.Local.i2,0,V.Local.sRet.UBound,1)</string>
        <string>		Function.Intrinsic.Control.Next(V.Local.i2)</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	V.uGlobal.uLines(v.Local.i)!Line.Set(V.Local.iLastLine)</string>
        <string>	'add list item and set the list item subtext based on data in uLines UDt</string>
        <string>	Gui.f_Main.lvParts.AddListItem(V.uGlobal.uLines(v.Local.i)!Line,V.uglobal.uLines(v.Local.i)!Line)</string>
        <string>	Gui.f_Main.lvParts.SetListItemSubItemText(V.uGlobal.uLines(v.Local.i)!Line,1,V.uGlobal.uLines(v.Local.i)!Part.Trim)</string>
        <string>	Gui.f_Main.lvParts.SetListItemSubItemText(V.uGlobal.uLines(v.Local.i)!Line,2,V.uGlobal.uLines(v.Local.i)!Description.Trim)</string>
        <string>	Gui.f_Main.lvParts.SetListItemSubItemText(V.uGlobal.uLines(v.Local.i)!Line,3,V.uGlobal.uLines(v.Local.i)!Qty.Trim)</string>
        <string>	Gui.f_Main.lvParts.SetListItemSubItemText(V.uGlobal.uLines(v.Local.i)!Line,4,V.uGlobal.uLines(v.Local.i)!Requisition.Trim)</string>
        <string>	Gui.f_Main.lvParts.SetListItemSubItemText(V.uGlobal.uLines(v.Local.i)!Line,5,V.uGlobal.uLines(v.Local.i)!Job.Trim)</string>
        <string>	Gui.f_Main.lvParts.SetListItemSubItemText(V.uGlobal.uLines(v.Local.i)!Line,6,V.uGlobal.uLines(v.Local.i)!Suffix.Trim)</string>
        <string>	Gui.f_Main.lvParts.SetListItemSubItemText(V.uGlobal.uLines(v.Local.i)!Line,7,V.uGlobal.uLines(v.Local.i)!DueDate)</string>
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>V.Global.iLastNumber.Set(V.Local.iLastLine)</string>
        <string />
        <string>'TERMINATE SUBROUTINE</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("LoadLinesGrid_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.LoadLinesGrid.End</string>
        <string />
        <string>program.sub.f_main_save_all.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_main_save_all_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sVendors.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sVendorsNoContacts.Declare(String)</string>
        <string>V.Local.sParts.Declare(String)</string>
        <string>V.Local.iRet.Declare(Long)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string>V.Local.sRFQ.Declare(String)</string>
        <string>V.Local.sQuoteFile.Declare(String)</string>
        <string>V.Local.bExists.Declare(Boolean)</string>
        <string>V.Local.ssql2.Declare(String)</string>
        <string>V.Local.ikey.Declare(Long)</string>
        <string>V.Local.bdocexists.Declare(Boolean)</string>
        <string>V.Local.sdocfile.Declare(String)</string>
        <string>V.Local.sdocuments.Declare(String)</string>
        <string>V.Local.srows.Declare(String)</string>
        <string>V.Local.iord.Declare(Long)</string>
        <string>V.Local.srange.Declare(String)</string>
        <string>V.Local.sdocuments2.Declare(String)</string>
        <string>V.local.icount.Declare(Long)</string>
        <string>V.Local.icount2.Declare(Long)</string>
        <string>V.Local.scontact.Declare(String)</string>
        <string>V.Local.sPart.Declare(String)</string>
        <string>V.Local.sfinal.Declare(String)</string>
        <string>V.Local.sfinal2.Declare(String)</string>
        <string>V.Local.bbool.Declare(Boolean)</string>
        <string>V.Local.squantity.Declare(String)</string>
        <string>V.Local.ssort.Declare(String)</string>
        <string>V.Local.exists.Declare(Boolean)</string>
        <string>V.Local.stemp.Declare(String)</string>
        <string />
        <string>V.Local.stimestamp.Declare(String)</string>
        <string />
        <string>'F.intrinsic.string.concat(V.Ambient.Time,V.Ambient.Date,V.Local.stimestamp)</string>
        <string>'F.intrinsic.String.StripCharacters(V.local.stimestamp,V.Local.stimestamp)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Screen.f_Docs.Visible,=,True)</string>
        <string>	V.Screen.f_Docs.Visible(False)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Loop through the document list view</string>
        <string>Gui.f_Docs.lvDocs.RetrieveAllListItems(V.Local.srows)</string>
        <string>F.Intrinsic.Control.If(V.Local.srows.Trim,&lt;&gt;,"***NORETURN***")</string>
        <string>	F.Intrinsic.String.Split(V.Local.srows,"*!*",V.Local.srows)</string>
        <string>	F.Intrinsic.Control.For(V.Local.i,0,V.Local.srows.UBound,1)</string>
        <string>		Gui.f_Docs.lvDocs.RetrieveItemOrdinal(V.Local.srows(v.Local.i).Trim,V.Local.iord)</string>
        <string>		V.Local.srange.Set(V.Screen.f_Docs!lvDocs.ListItemTextExtended(v.Local.iord))</string>
        <string>		F.Intrinsic.control.If(V.Local.srange.Trim,&lt;&gt;,"")</string>
        <string>			F.Intrinsic.string.Split(V.local.srange,"*!*",V.Local.srange)</string>
        <string>			V.Local.srange.Set(V.Local.srange(1))</string>
        <string>		F.Intrinsic.String.Concat(V.local.sdocuments,V.local.srange,V.ambient.newline,V.Local.sdocuments)</string>
        <string>	F.Intrinsic.Control.Next(V.Local.i)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'check to see if the temporary file already exists, if so, delete it and replace it with the new one</string>
        <string>Function.Intrinsic.String.Concat(V.Caller.FilesDir,"\Documents.txt",V.Local.sDocFile)</string>
        <string>Function.Intrinsic.File.Exists(V.Local.sDocFile,V.Local.bDocExists)</string>
        <string>Function.Intrinsic.Control.If(V.Local.bDocExists,=,True)</string>
        <string>	Function.Intrinsic.File.DeleteFile(V.Local.sDocFile)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>Function.Intrinsic.File.String2File(V.Local.sDocFile,V.local.sdocuments)</string>
        <string />
        <string>'flag items in the UDT where element is = 0 and delete them</string>
        <string>F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uContacts!VENDOR,"")</string>
        <string>F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uContacts!Selected,False)</string>
        <string>F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uContacts)</string>
        <string>'F.Intrinsic.Debug.InvokeDebugger</string>
        <string>'F.Intrinsic.Debug.Stop</string>
        <string />
        <string>'loop through the selected contacts and get vendor and part, then pad them for the temporary textfile</string>
        <string>F.Intrinsic.Control.For(V.Local.icount,V.uGlobal.uContacts.lBound,V.uGlobal.uContacts.uBound,1)</string>
        <string />
        <string>	F.intrinsic.string.concat(V.Ambient.Time,V.Ambient.Date,V.Local.stimestamp)</string>
        <string>	F.intrinsic.String.StripCharacters(V.local.stimestamp,V.Local.stimestamp)</string>
        <string>	</string>
        <string>	V.uglobal.uContacts(v.Local.icount)!TIME.Set(V.Local.stimestamp)</string>
        <string>	F.Intrinsic.UI.Sleep(1)</string>
        <string />
        <string>	V.Local.scontact.Set(V.uGlobal.uContacts(v.local.icount)!VENDOR)</string>
        <string>	F.Intrinsic.String.Rpad(V.Local.scontact," ",6,V.Local.scontact)</string>
        <string />
        <string>	'loop through parts</string>
        <string>	F.Intrinsic.Control.For(V.Local.icount2,V.uGlobal.uLines.lBound,V.uGlobal.uLines.uBound,1)</string>
        <string>		V.Local.sPart.Set(V.uGlobal.uLines(v.Local.icount2)!PART)</string>
        <string />
        <string>'		F.Intrinsic.string.Concat(V.uGlobal.uLines(v.Local.icount2)!Job,"-",V.uGlobal.ulines(v.Local.icount2)!Suffix,V.Local.ssort)</string>
        <string>'		F.Intrinsic.String.Build("SELECT SEQ FROM VEND_QTE_HEADER WHERE PART = '{0}' AND VENDOR = '{1}' AND SORT_CODE_1 = '{2}'",V.uGlobal.uLines(V.Local.icount2)!Part,V.uGlobal.uContacts(v.Local.icount)!VENDOR,V.Local.ssort,V.Local.ssql2)</string>
        <string>'		F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.ssql2)</string>
        <string>'		F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,&lt;&gt;,True)</string>
        <string>'</string>
        <string>'			V.Local.ssort.Set(V.ODBC.conx!rst.FieldValTrim!SEQ)</string>
        <string>'		F.intrinsic.control.endif</string>
        <string>		'new line added for sort code</string>
        <string>		F.Intrinsic.string.Concat(V.uGlobal.uLines(v.Local.icount2)!Job,"-",V.uGlobal.ulines(v.Local.icount2)!Suffix,V.Local.ssort)</string>
        <string>		F.Intrinsic.String.RPad(V.Local.sPart," ",20,V.Local.sPart)</string>
        <string>		</string>
        <string>		V.Local.squantity.Set(V.uGlobal.uLines(v.Local.icount2)!Qty)</string>
        <string>		F.Intrinsic.String.Rpad(V.Local.scontact," ",214,V.Local.scontact)</string>
        <string>		F.Intrinsic.String.RPad(V.local.squantity," ",25,V.Local.squantity)</string>
        <string>		F.Intrinsic.String.LPad(V.Local.ssort," ",305,V.Local.ssort)</string>
        <string />
        <string>		F.Intrinsic.String.LPad(V.Local.stimestamp," ",24,V.Local.stimestamp)</string>
        <string />
        <string>			F.Intrinsic.Control.If(V.Local.sfinal,=,"")</string>
        <string>				F.Intrinsic.String.Concat(V.local.spart,V.Local.scontact,V.local.ssort,V.local.stimestamp,V.Local.sfinal2)</string>
        <string>				F.Intrinsic.String.IsInString(V.local.sfinal,V.local.sfinal2,True,V.Local.bbool)</string>
        <string />
        <string>						F.Intrinsic.Control.If(V.Local.bbool,=,False)</string>
        <string>						F.Intrinsic.String.Concat(V.local.spart,V.Local.scontact,V.local.ssort,V.Local.sfinal)</string>
        <string>						F.Intrinsic.String.Concat(V.local.spart,V.Local.scontact,V.local.squantity,V.local.ssort,V.local.stimestamp,V.Local.sfinal)</string>
        <string />
        <string>						V.Local.bbool.Set(False)</string>
        <string>						F.intrinsic.Control.EndIf</string>
        <string />
        <string>			F.Intrinsic.Control.elseIf(V.Local.sfinal,&lt;&gt;,"")</string>
        <string>				F.Intrinsic.String.Concat(V.local.spart,V.Local.scontact,V.local.squantity,V.local.ssort,V.local.stimestamp,V.Local.sfinal2)</string>
        <string />
        <string>'				F.Intrinsic.String.Concat(V.local.spart,V.Local.scontact,V.local.squantity,V.local.ssort,V.Local.sfinal2)</string>
        <string>				F.Intrinsic.String.IsInString(V.local.sfinal,V.local.sfinal2,True,V.Local.bbool)</string>
        <string />
        <string>				F.Intrinsic.Control.If(V.Local.bbool,=,False)</string>
        <string>					V.Local.sfinal2.Set("")</string>
        <string>'					F.Intrinsic.String.Concat(V.Local.sfinal,V.Ambient.NewLine,V.local.spart,V.Local.scontact,V.local.squantity,V.local.ssort,V.Local.sfinal)</string>
        <string>					F.Intrinsic.String.Concat(V.Local.sfinal,V.Ambient.NewLine,V.local.spart,V.Local.scontact,V.local.squantity,V.local.ssort,V.local.stimestamp,V.Local.sfinal)</string>
        <string />
        <string>					V.Local.bbool.Set(False)</string>
        <string>	</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.Control.Next(V.Local.icount2)</string>
        <string>F.Intrinsic.Control.Next(V.Local.icount)</string>
        <string />
        <string>'F.ODBC.Connection!conx.Close</string>
        <string />
        <string>		'ENSURING VENDOR(S) ARE SELECTED, AND ALL VENDORS HAVE CONTACTS SELECTED</string>
        <string>'		Gui.f_Main.lvSelVendors.RetrieveAllListItems(V.Local.sVendors)</string>
        <string>'		Function.Intrinsic.Control.If(V.Local.sVendors,&lt;&gt;,"***NORETURN***")</string>
        <string>'			Function.Intrinsic.String.Split(V.Local.sVendors,"*!*",V.Local.sVendors)</string>
        <string>'			Function.Intrinsic.Control.For(V.Local.i,0,V.Local.sVendors.UBound,1)</string>
        <string>'		Function.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uContacts!VENDOR,V.Local.sVendors(v.Local.i).trim,V.uglobal.uContacts!Selected,True,V.Local.sRet)</string>
        <string>'		Function.Intrinsic.Control.If(V.Local.sRet,=,"")</string>
        <string>'			Function.Intrinsic.Control.If(V.Local.sVendorsNoContacts,=,"")</string>
        <string>'				V.Local.sVendorsNoContacts.Set(V.Local.sVendors(v.Local.i).Trim)</string>
        <string>'			Function.Intrinsic.Control.Else</string>
        <string>'				Function.Intrinsic.String.Concat(V.Local.sVendorsNoContacts,V.Ambient.NewLine,V.Local.sVendors(V.Local.i).Trim,V.Local.sVendorsNoContacts)</string>
        <string>'			Function.Intrinsic.Control.EndIf</string>
        <string>'		Function.Intrinsic.Control.EndIf</string>
        <string>'	Function.Intrinsic.Control.Next(V.Local.i)</string>
        <string>'	Function.Intrinsic.Control.If(V.Local.sVendorsNoContacts,&lt;&gt;,"")</string>
        <string>'		Function.Intrinsic.String.Concat("Vendors have been selected, but no contact has been selected. The below Vendors need to have Contacts assigned",V.Ambient.NewLine,V.Ambient.NewLine,V.Local.sVendorsNoContacts,V.Local.sVendorsNoContacts)</string>
        <string>'		Function.Intrinsic.UI.Msgbox(V.Local.sVendorsNoContacts,"Vendor/Contacts Mismatch")</string>
        <string>'		Function.Intrinsic.Control.ExitSub</string>
        <string>'	Function.Intrinsic.Control.EndIf</string>
        <string>'Function.Intrinsic.Control.Else</string>
        <string>'	Function.Intrinsic.UI.Msgbox("There are no Vendors selected. You must select Vendor's, and Contacts prior to processing this RFQ","No Vendors Selected")</string>
        <string>'	Function.Intrinsic.Control.ExitSub</string>
        <string>'Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>'ENSURING PARTS HAVE BEEN SELECTED.</string>
        <string>Gui.f_Main.lvParts.RetrieveAllListItems(V.Local.sParts)</string>
        <string>Function.Intrinsic.Control.If(V.Local.sParts,=,"***NORETURN***")</string>
        <string>	Function.Intrinsic.UI.Msgbox("You must add parts to the RFQ, prior to saving.","No Parts Selected")</string>
        <string>	Function.Intrinsic.Control.ExitSub</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>Gui.f_Main..Visible(False)</string>
        <string />
        <string>Function.Intrinsic.UI.InvokeWaitDialog("Processing.........","Please Wait")</string>
        <string />
        <string>Function.Intrinsic.Variable.UDTMultiQuickSort(V.uGlobal.uExport!RFQ,False,V.uGlobal.uExport!LINE,False)</string>
        <string />
        <string>Function.Intrinsic.String.Concat(V.Caller.FilesDir,"\vendquot.txt",V.Local.sQuoteFile)</string>
        <string>Function.Intrinsic.File.Exists(V.Local.sQuoteFile,V.Local.bExists)</string>
        <string>Function.Intrinsic.Control.If(V.Local.bExists,=,True)</string>
        <string>	Function.Intrinsic.File.DeleteFile(V.Local.sQuoteFile)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>Function.Intrinsic.File.String2File(V.Local.sQuoteFile,V.local.sfinal)</string>
        <string />
        <string>F.Intrinsic.String.Build("{0}\{1}{2}000UPLVENQPEXPORT000000001.TMP",v.caller.localgsstempdir,V.Caller.User.trim,V.Caller.Terminal,V.Local.stemp)</string>
        <string />
        <string>F.Intrinsic.File.Exists(V.Local.stemp,V.Local.exists)</string>
        <string />
        <string>'if the temporary file exists, delete it</string>
        <string>F.Intrinsic.Control.If(V.local.exists,=,True)</string>
        <string>	F.Intrinsic.File.deletefile(V.Local.stemp)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>Function.Global.General.CallWrapperSync(50,"UPLVENQP/A/X")</string>
        <string />
        <string>'call the read export and build export subs</string>
        <string>F.Intrinsic.Control.CallSub(Readexportfile)</string>
        <string>F.Intrinsic.Control.CallSub(Buildexportexcel)</string>
        <string />
        <string>Function.Intrinsic.UI.CloseWaitDialog</string>
        <string />
        <string>Function.Intrinsic.Control.CallSub(F_send_load)</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("f_main_save_all_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.f_main_save_all.End</string>
        <string />
        <string>program.sub.f_Send_unload.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_Send_unload_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sMsg.Declare(String)</string>
        <string>V.Local.iRet.Declare(String)</string>
        <string />
        <string>Function.Intrinsic.UI.Msgbox("Are you sure you want to exit? RFQs have already been created, and exiting now, will only prevent them from being sent. Records will NOT be deleted","Are you sure?",4,V.Local.iRet)</string>
        <string>Function.Intrinsic.Control.If(V.Local.iRet,=,6)</string>
        <string>	Function.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>'TERMINATE SUBROUTINE</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("f_Send_unload_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.f_Send_unload.End</string>
        <string />
        <string>Program.Sub.f_Send_Load.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_Process_Load_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.iRow.Declare(Long)</string>
        <string>V.Local.sRFQ.Declare(String)</string>
        <string>V.Local.sFile.Declare(String)</string>
        <string />
        <string>V.Local.skey.Declare(String)</string>
        <string>V.Local.iord.Declare(Long)</string>
        <string>V.Local.svendor.Declare(String)</string>
        <string>V.Local.i2.Declare(Long)</string>
        <string>V.Local.i3.Declare(Long)</string>
        <string>V.Local.srows.Declare(String)</string>
        <string>V.Local.sret.Declare(String)</string>
        <string />
        <string>'call the buildstyle sub</string>
        <string>Function.Intrinsic.Control.CallSub(F_send_buildstyle)</string>
        <string />
        <string>		'loop through the ucontacts UDT and build the rows with the vendors, names, and emails stored in the uContacts UDT</string>
        <string>		Function.Intrinsic.Control.For(V.local.i,0,V.uGlobal.uContacts.UBound,1)</string>
        <string>		Function.Intrinsic.Math.Add(V.Screen.f_Send!fgRFQs.Rows,1,V.Local.iRow)</string>
        <string>			Gui.f_Send.fgRFQs.Rows(V.Local.iRow)</string>
        <string>			Function.Intrinsic.Math.Sub(V.Local.iRow,1,V.Local.iRow)</string>
        <string>			Gui.f_Send.fgRFQs.ApplyStyle(V.Local.iRow,2)</string>
        <string>			Gui.f_Send.fgRFQs.TextMatrix(0,V.Local.iRow,V.uGlobal.uContacts(v.Local.i)!VENDOR.Trim)</string>
        <string>			Gui.f_Send.fgRFQs.TextMatrix(1,V.Local.iRow,V.uglobal.uContacts(v.Local.i)!NAME.Trim)</string>
        <string>			Gui.f_Send.fgRFQs.TextMatrix(2,V.local.iRow,V.uGlobal.uContacts(v.Local.i)!EMAIL.Trim)</string>
        <string />
        <string>		Function.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>'show the form</string>
        <string>Gui.f_Send..Show</string>
        <string>Gui.f_Send.fgRFQs.Visible(true)</string>
        <string />
        <string>'TERMINATE SUBROUTINE</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("f_Process_Load_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.f_Send_Load.End</string>
        <string />
        <string>Program.Sub.f_Send_BuildStyle.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_Process_BuildStyle_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sTitles.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string />
        <string>Gui.f_Send.fgRFQs.Visible(false)</string>
        <string />
        <string>Gui.f_Send.fgRFQs.Cols(5)</string>
        <string>Gui.f_Send.fgRFQs.Rows(1)</string>
        <string>Gui.f_Send.fgRFQs.FixedRows(1)</string>
        <string />
        <string>Gui.f_Send.fgRFQs.ClearStyle(1)</string>
        <string>Gui.f_Send.fgRFQs.ClearStyle(2)</string>
        <string />
        <string>Gui.f_Send.fgRFQs.SetColumnPercentages(".20:.20:.20:.20:.20")</string>
        <string />
        <string>'vendor number column</string>
        <string>Gui.f_Send.fgRFQs.TextMatrix(0,0,"Vendor Number")</string>
        <string>Gui.f_send.fgRFQs.BuildStyle(1,0,"Type","Locked",True)</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(1,0,"Format","Alignment",4)</string>
        <string />
        <string>'vendor name column</string>
        <string>Gui.f_Send.fgRFQs.TextMatrix(1,0,"Vendor Name")</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(1,1,"Type","Locked",True)</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(1,1,"Format","Alignment",4)</string>
        <string />
        <string>'vendor email colum</string>
        <string>Gui.f_Send.fgRFQs.TextMatrix(2,0,"Vendor Email")</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(1,2,"Type","Locked",True)</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(1,2,"Format","Alignment",4)</string>
        <string />
        <string>'include excel column</string>
        <string>Gui.f_Send.fgRFQs.TextMatrix(3,0,"Include Excel")</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(1,3,"Format","Alignment",4)</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(2,3,"Format","Alignment",4)</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(2,3,"Type","Checkbox",True)</string>
        <string />
        <string>'include docs column</string>
        <string>Gui.f_Send.fgRFQs.TextMatrix(4,0,"Include Docs")</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(1,4,"Format","Alignment",4)</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(2,4,"Format","Alignment",4)</string>
        <string>Gui.f_Send.fgRFQs.BuildStyle(2,4,"Type","Checkbox",True)</string>
        <string />
        <string>Gui.f_Send.fgRFQs.ApplyStyle(0,1)</string>
        <string />
        <string>'TERMINATE SUBROUTINE</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("f_Process_BuildStyle_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.f_Send_BuildStyle.End</string>
        <string />
        <string>program.sub.f_Send_Process.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_Send_Process_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.local.i.Declare(Long)</string>
        <string>V.Local.iRows.Declare(Long)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.iRPTID.Declare(Long)</string>
        <string>V.Local.sAttach.Declare(String)</string>
        <string>V.Local.sAttachments.Declare(String)</string>
        <string>V.Local.sPN.Declare(String,"RFQ")</string>
        <string>V.Local.sPV.Declare(String)</string>
        <string>V.Local.iUser.Declare(String)</string>
        <string>V.Local.sSender.Declare(String)</string>
        <string>V.Local.sRecipients.Declare(String)</string>
        <string>V.Local.sRetRec.Declare(String)</string>
        <string>V.Local.i2.Declare(Long)</string>
        <string>V.local.iPID.Declare(Long)</string>
        <string>V.Local.sRow.Declare(String)</string>
        <string>V.Local.iPath.Declare(Long)</string>
        <string>V.Local.i3.Declare(Long)</string>
        <string>V.Local.bSent.Declare(Boolean)</string>
        <string>V.Local.i4.Declare(Long)</string>
        <string>V.Local.sreportfilepath.Declare(String)</string>
        <string>V.Local.sreportfilename.Declare(String)</string>
        <string>V.Local.semail.Declare(String)</string>
        <string>V.Local.bfileexists.Declare(Boolean)</string>
        <string>V.Local.i5.Declare(Long)</string>
        <string />
        <string>V.Local.sfilename.Declare(String)</string>
        <string>V.Local.sfilename2.Declare(String)</string>
        <string>V.Local.sfilepath.Declare(String)</string>
        <string />
        <string>Gui.f_Send..Visible(False)</string>
        <string>Function.Intrinsic.UI.InvokeWaitDialog("Sending emails","Please Wait")</string>
        <string />
        <string>'call the build RFQ report subroutine</string>
        <string>F.intrinsic.Control.CallSub(Buildrfqreport)</string>
        <string />
        <string>'flag 0 element parts of uExcel UDT</string>
        <string>F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uExcel!uVENDOR,"")</string>
        <string>F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uExcel)</string>
        <string />
        <string>F.Global.Security.GetUserId(V.Caller.User,V.Caller.CompanyCode,V.Local.iUser)</string>
        <string>F.Intrinsic.Math.Sub(V.Screen.f_Send!fgRFQs.Rows,1,V.Local.iRows)</string>
        <string>F.Intrinsic.Control.For(V.Local.i,1,V.Local.iRows,1)</string>
        <string>	'bSent to keep track of current contact to see if message already sent.</string>
        <string>	V.Local.bSent.Set(False)</string>
        <string>	V.Local.sAttachments.Set("")</string>
        <string>	V.Local.sAttach.Set("")</string>
        <string>	V.Local.sRet.Set("")</string>
        <string>	V.Local.iPath.Set(0)</string>
        <string>	Gui.f_Send.fgRFQs.ReadRow(V.Local.i,V.Local.sRow)</string>
        <string>	F.Intrinsic.String.Split(V.Local.sRow,"*!*",V.Local.sRow)</string>
        <string>	'include attachments checked?</string>
        <string>	F.Intrinsic.Control.If(V.Local.sRow(4).Trim,=,1)</string>
        <string>	</string>
        <string>		F.Intrinsic.Control.If(V.uGlobal.uDocuments(0)!uDocuments.Trim,&lt;&gt;,"")</string>
        <string>			F.Intrinsic.Control.For(V.Local.i2,V.uGlobal.uDocuments.LBound,V.uGlobal.uDocuments.UBound,1)</string>
        <string>				V.Local.sAttach.Set("")</string>
        <string>				V.Local.sRet.Set("")</string>
        <string>				'breakdown filepath and rebuild file attachment list for Queue message function</string>
        <string>				F.Intrinsic.String.Split(V.uGlobal.uDocuments(v.Local.i2)!uDocuments.Trim,"\",V.Local.sRet)</string>
        <string>				F.Intrinsic.Math.Sub(V.Local.sRet.UBound,1,V.Local.iPath)</string>
        <string>				F.Intrinsic.Control.For(V.Local.i3,V.Local.sRet.LBound,V.Local.iPath,1)</string>
        <string>					F.Intrinsic.Control.If(V.Local.i3,=,V.Local.sRet.LBound)</string>
        <string>						F.Intrinsic.String.Build("{0}{1}",V.Local.sAttach,V.Local.sRet(v.Local.i3).Trim,V.Local.sAttach)</string>
        <string>					F.Intrinsic.Control.Else</string>
        <string>						F.Intrinsic.String.Build("{0}\{1}",V.Local.sAttach,V.Local.sRet(v.Local.i3).Trim,V.Local.sAttach)</string>
        <string>					F.Intrinsic.Control.EndIf</string>
        <string>				F.Intrinsic.Control.Next(V.Local.i3)</string>
        <string>				F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sRet(v.Local.sRet.UBound).Trim,V.Local.sAttach,V.Local.sAttach)</string>
        <string>				F.Intrinsic.String.Build("{0}{1}@!@",V.Local.sAttachments,V.Local.sAttach,V.Local.sAttachments)</string>
        <string>			F.Intrinsic.Control.Next(V.Local.i2)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>	'Inculde Excel File?</string>
        <string>	V.Local.sAttach.Set("")</string>
        <string />
        <string>	F.Intrinsic.Control.If(V.Local.sRow(3).Trim,&lt;&gt;,1)</string>
        <string>	F.intrinsic.Control.AndIf(V.Local.sRow(4),=,1)</string>
        <string>				F.Intrinsic.String.Build("{0}*!*{1}",V.screen.f_main!txtREmail.text,V.Screen.f_Main!txtREmail.Text,V.Local.semail)</string>
        <string>				F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sRow(2),V.Local.sRow(2),V.Local.sRow(2))</string>
        <string>		F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,V.Local.iUser,V.Caller.Caller,V.Screen.f_Send!txtSubject.Text,v.local.semail,V.Local.sRow(2).Trim,V.Screen.f_Send!txtBody.Text,1,V.Screen.f_Main!txtREmail.Text,False,"","","","","","","",V.local.sAttachments,False)</string>
        <string>		V.Local.bSent.Set(True)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		'build the report filepath and check if it exists, if so delete it</string>
        <string>		'BreakdownfilepathandrebuildfileattachmentlistforQueuemessagefunction</string>
        <string>		F.Intrinsic.Control.For(V.Local.i4,V.uGlobal.uExcel.LBound,V.uGlobal.uExcel.Ubound,1)</string>
        <string>			F.Intrinsic.String.Build("{0}{1}{2}",V.Local.sRow(0),V.global.stimedate,".pdf",V.Local.sfilename)</string>
        <string>			F.Intrinsic.String.Build("{0}\{1}\{2}\",V.Caller.FilesDir,"RFQ","Export",V.Local.sfilepath)</string>
        <string>			F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sfilename,V.Local.sfilepath,V.Local.sfilename2)</string>
        <string>			F.Intrinsic.Control.If(V.Local.sRow(0),&lt;&gt;,V.uGlobal.uExcel(v.Local.i4)!uVendor.Trim)</string>
        <string>				'Since we are checking to see if current uContact!vendor = vendor in uExcel we have to see if message has already been sent, if already sent then move to next contact</string>
        <string>				F.Intrinsic.Control.If(V.Local.bSent,=,True)</string>
        <string>					F.Intrinsic.Control.Next(V.Local.i)</string>
        <string>				F.Intrinsic.Control.Else</string>
        <string>					F.Intrinsic.Control.Next(V.Local.i4)</string>
        <string>				F.Intrinsic.Control.EndIf</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				V.Global.sExcelFile.Set(V.uGlobal.uExcel(v.Local.i4)!uExcel.Trim)</string>
        <string>		</string>
        <string>				F.Intrinsic.String.Split(V.Global.sExcelFile,"\",V.Local.sRet)</string>
        <string>				F.Intrinsic.Math.Sub(V.Local.sRet.UBound,1,V.Local.iPath)</string>
        <string>				F.Intrinsic.Control.For(V.Local.i3,V.Local.sRet.LBound,V.Local.iPath,1)</string>
        <string>					F.Intrinsic.Control.If(V.Local.i3,=,V.Local.sRet.LBound)</string>
        <string>						F.Intrinsic.String.Build("{0}{1}",V.Local.sAttach,V.Local.sRet(v.Local.i3).Trim,V.Local.sAttach)</string>
        <string>					F.Intrinsic.Control.Else</string>
        <string>						F.Intrinsic.String.Build("{0}\{1}",V.Local.sAttach,V.Local.sRet(v.Local.i3).Trim,V.Local.sAttach)</string>
        <string>					F.Intrinsic.Control.EndIf</string>
        <string>				F.Intrinsic.Control.Next(V.Local.i3)</string>
        <string>				F.Intrinsic.String.Build("{0}*!*{1}@!@",V.Local.sRet(v.Local.sRet.UBound).Trim,V.Local.sAttach,V.Local.sAttach)</string>
        <string>				F.Intrinsic.String.Build("{0}{1}{2}",V.Local.sAttachments.Trim,V.Local.sAttach,V.local.sfilename2,V.local.sAttachments)</string>
        <string />
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>			'Allow for server direct addresses(ie. "\\server1" and get rid of "\\\" where an extra was added</string>
        <string>			F.Intrinsic.String.Replace(V.Local.sAttachments,"\\\","\\",V.Local.sAttachments)</string>
        <string>			F.Intrinsic.Control.If(V.Local.sAttachments.Trim,&lt;&gt;,"")</string>
        <string>				'Include Attachment</string>
        <string>				F.Intrinsic.String.Build("{0}*!*{1}",V.screen.f_main!txtREmail.text,V.Screen.f_Main!txtREmail.Text,V.Local.semail)</string>
        <string>				F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sRow(2),V.Local.sRow(2),V.Local.sRow(2))</string>
        <string>				F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,V.Local.iUser,V.Caller.Caller,V.Screen.f_Send!txtSubject.Text,v.local.semail,V.Local.sRow(2).Trim,V.Screen.f_Send!txtBody.Text,1,V.Screen.f_Main!txtREmail.Text,False,"","","","","","","",V.local.sAttachments,False)</string>
        <string>				V.Local.bSent.Set(True)</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string>				'No attachment</string>
        <string>				F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,V.Local.iUser,V.Caller.Caller,V.Screen.f_Send!txtSubject.Text,V.Screen.f_Main!txtREmail.Text,V.Local.sRow(2).Trim,V.Screen.f_Send!txtBody.Text)</string>
        <string>				V.Local.bSent.Set(True)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>	</string>
        <string>		F.Intrinsic.Control.Next(V.Local.i4)</string>
        <string />
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>F.Intrinsic.UI.CloseWaitDialog</string>
        <string />
        <string>Function.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("f_Send_Process_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string />
        <string>program.sub.f_Send_Process.End</string>
        <string />
        <string>Program.Sub.f_Send_Retrieve_Docs.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_Send_Retrieve_Docs_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string>V.Local.sRFQ.Declare(String)</string>
        <string>V.Local.sAttachments.Declare(String)</string>
        <string>V.Local.sTemp.Declare(String)</string>
        <string>V.Local.sTempFileName.Declare(String)</string>
        <string>V.Local.sTempFilePath.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.iEnd.Declare(Long)</string>
        <string />
        <string>V.Local.sRFQ.Set(V.Args.RFQ)</string>
        <string>V.Local.sAttachments.Set("")</string>
        <string />
        <string>Function.Intrinsic.String.Concat("SELECT * FROM GCG_VENDOR_RFQ_DOCS WHERE RFQ_NO = '",V.Local.sRFQ,"'",V.local.sSQL)</string>
        <string>Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>Function.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)</string>
        <string>	V.Local.sTemp.Redim(0,0)</string>
        <string>	V.Local.sTempFileName.Set("")</string>
        <string>	V.Local.sTempFilePath.Set("")</string>
        <string>	Function.Intrinsic.String.Split(V.ODBC.conx!rst.FieldValTrim!FILEPATH,"\",V.Local.sTemp)</string>
        <string>	V.Local.sTempFileName.Set(V.Local.sTemp(V.Local.sTemp.UBound))</string>
        <string>	Function.Intrinsic.Math.Sub(V.Local.sTemp.UBound,1,V.Local.iEnd)</string>
        <string>	Function.Intrinsic.Control.For(V.Local.i,0,V.Local.iEnd,1)</string>
        <string>		Function.Intrinsic.Control.If(V.Local.i,=,0)</string>
        <string>			V.Local.sTempFilePath.Set(V.Local.sTemp(0))</string>
        <string>		Function.Intrinsic.Control.Else</string>
        <string>			Function.Intrinsic.String.Concat(V.Local.sTempFilePath,"\",V.Local.sTemp(v.Local.i),V.Local.sTempFilePath)</string>
        <string>		Function.Intrinsic.Control.EndIf</string>
        <string>	Function.Intrinsic.Control.Next(V.Local.i)</string>
        <string>	Function.Intrinsic.Control.If(V.Local.sAttachments,=,"")</string>
        <string>		Function.Intrinsic.String.Concat(V.Local.sTempFileName,"*!*",V.Local.sTempFilePath,V.Local.sAttachments)</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Function.Intrinsic.String.Concat(V.Local.sAttachments,"@!@",V.Local.sTempFileName,"*!*",V.Local.sTempFilePath,V.Local.sAttachments)</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Function.ODBC.conx!rst.MoveNext</string>
        <string>Function.Intrinsic.Control.Loop</string>
        <string />
        <string>Function.Intrinsic.Control.If(V.Local.sAttachments,&lt;&gt;,"")</string>
        <string>	Function.Intrinsic.Variable.AddRV("Attachments",V.Local.sAttachments)</string>
        <string>Function.Intrinsic.Control.Else</string>
        <string>	Function.Intrinsic.Variable.AddRV("Attachments","None")</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>'TERMINATE SUBROUTINE</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("f_Send_Retrieve_Docs_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.f_Send_Retrieve_Docs.End</string>
        <string />
        <string>Program.Sub.BuildExportExcel.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("BuildExportExcel_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string>'ERROR HANDLING ABOVE</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sRFQ.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.sExcel.Declare(String)</string>
        <string>V.Local.sRowData.Declare(String)</string>
        <string>V.Local.sData.Declare(String)</string>
        <string>V.Local.sFile.Declare(String)</string>
        <string>V.Local.sTemplate.Declare(String)</string>
        <string>V.Local.sDate.Declare(String)</string>
        <string>V.Local.icount2.Declare(Long)</string>
        <string>V.Local.ssort.Declare(String)</string>
        <string>V.Local.icount.Declare(Long)</string>
        <string>V.Local.icount.Set(0)</string>
        <string>V.local.ivendcount.declare(Long)</string>
        <string>V.Local.svendor.Declare(String)</string>
        <string>V.Local.ifilecount.Declare(Long)</string>
        <string>V.Local.svendorUDT.Declare(String)</string>
        <string>V.Local.icopycount.Declare(Long)</string>
        <string>V.Local.icopycount2.Declare(Long)</string>
        <string>V.local.iuboundcount.Declare(Long)</string>
        <string>V.Local.iexcelcount.Declare(Long)</string>
        <string>V.Local.iexcelcount.Set(0)</string>
        <string>V.Local.ssql2.Declare(String)</string>
        <string>V.Local.ssort2.Declare(String)</string>
        <string />
        <string>'set the UDT fieldreferences</string>
        <string>F.Intrinsic.variable.SetUDTFieldReference(V.uGlobal.uExcel!uExcel,"uExcel")</string>
        <string>F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uExcel!uVendor,"uVendor")</string>
        <string />
        <string>'format date</string>
        <string>F.Intrinsic.String.Format(V.Ambient.Date,"MMDDYYYY",V.Local.sDate)</string>
        <string>F.Intrinsic.String.Build("{0}-{1}",V.Local.sDate,V.Ambient.Time,V.Local.sDate)</string>
        <string>F.Intrinsic.String.Replace(V.Local.sDate,":","",V.Local.sDate)</string>
        <string />
        <string>'built the template for the excel spreadsheet</string>
        <string>Function.Intrinsic.String.Concat(V.Caller.FilesDir,"\RFQ\Export\ExcelOutputTemplate.xlsx",V.Local.sTemplate)</string>
        <string>'</string>
        <string>''set the titles in the spreadsheet</string>
        <string>V.Local.sData.Set("Part*!*Description*!*Quantity*!*Vendor*!*Sort*!*Seq*!*Price")</string>
        <string />
        <string>'flag parts of the UDT with the element = 0 and delete them</string>
        <string>F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uContacts!VENDOR,"")</string>
        <string>F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uContacts)</string>
        <string />
        <string>V.Local.ivendcount.Set(0)</string>
        <string>F.Intrinsic.Variable.UDTCopy(V.uGlobal.uContacts,V.uGlobal.uCopy,True)</string>
        <string />
        <string>'flag and delete duplicate information in the UDT</string>
        <string>F.Intrinsic.Variable.UDTMultiFlagDuplicates(V.uGlobal.uCopy!VENDOR)</string>
        <string>F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uCopy)</string>
        <string />
        <string>'DO A FOR LOOP HERE LOOP THROUGH THE COPY AND SET TO UEXCELUDT</string>
        <string>V.uglobal.uExcel.Redim(-1,-1)</string>
        <string>V.Local.iuboundcount.Set(0)</string>
        <string>V.Local.icopycount.Set(1)</string>
        <string />
        <string>'loop through the copy UDT created</string>
        <string>F.Intrinsic.Control.For(V.Local.icopycount,V.uGlobal.uCopy.LBound,V.uGlobal.uCopy.UBound,1)</string>
        <string>	F.Intrinsic.Control.If(V.uGlobal.uExcel.UBound,&lt;&gt;,-1)</string>
        <string>		F.Intrinsic.Math.Add(V.uGlobal.uExcel.UBound,1,V.local.iuboundcount)</string>
        <string>		V.uGlobal.uexcel.RedimPreserve(0,V.Local.iuboundcount)</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		V.uGlobal.uexcel.Redim(0,0)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	V.uGlobal.uExcel(v.local.iuboundcount)!uVendor.Set(V.uGlobal.uCopy(v.Local.icopycount)!VENDOR)</string>
        <string>F.Intrinsic.Control.Next(V.Local.icopycount)</string>
        <string />
        <string>'for loop for vendor</string>
        <string>F.Intrinsic.Control.For(V.Local.ivendcount,0,V.uGlobal.uContacts.ubound,1)</string>
        <string>	F.Intrinsic.Control.If(V.Local.svendor.Trim,&lt;&gt;,V.uGlobal.uContacts(v.Local.ivendcount)!VENDOR.Trim)</string>
        <string>		'for loop to get sequences</string>
        <string>		F.Intrinsic.Control.For(V.Local.icount2,0,V.uGlobal.uLines.UBound,1)</string>
        <string>			F.Intrinsic.string.Concat(V.uGlobal.uLines(v.Local.icount2)!Job,"-",V.uGlobal.ulines(v.Local.icount2)!Suffix,V.Local.ssort)</string>
        <string>			F.Intrinsic.String.Build("SELECT SEQ FROM VEND_QTE_HEADER WHERE PART = '{0}' AND VENDOR = '{1}' AND SORT_CODE_1 = '{2}' and SORT_CODE_2 = '{3}'",V.uGlobal.uLines(V.Local.icount2)!Part,V.uGlobal.uContacts(v.Local.ivendcount)!VENDOR,V.Local.ssort,V.uglobal.ucontacts(v.local.ivendcount)!TIME,V.Local.ssql2)</string>
        <string>			F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.ssql2)</string>
        <string>			F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,&lt;&gt;,True)</string>
        <string>				V.Local.ssort2.Set(V.ODBC.conx!rst.FieldValTrim!SEQ)</string>
        <string>				F.Intrinsic.String.LPad(V.Local.ssort2,0,6,V.Local.ssort2)</string>
        <string>				V.Local.svendor.Set(V.uGlobal.uContacts(v.Local.ivendcount)!VENDOR)</string>
        <string>				Function.Intrinsic.String.Concat(V.uGlobal.uLines(v.Local.icount2)!Part.Trim,"*!*",V.uGlobal.uLines(v.Local.icount2)!Description.Trim,V.Local.sRowData)</string>
        <string>				F.Intrinsic.string.Concat(V.uGlobal.uLines(v.Local.icount2)!Job.trim,"-",V.uGlobal.ulines(v.Local.icount2)!Suffix,V.Local.ssort)</string>
        <string>		'		Function.Intrinsic.String.Concat(V.Local.sRowData,"*!*",V.uglobal.uLines(v.Local.icount2)!Qty.Trim,"*!*",V.Local.svendor,"*!*",V.local.ssort,"*!*",V.local.ssort2,"*!*",V.global.sseq2(v.Local.icount),V.Local.sRowData)</string>
        <string>				Function.Intrinsic.String.Concat(V.Local.sRowData,"*!*",V.uglobal.uLines(v.Local.icount2)!Qty.Trim,"*!*",V.Local.svendor,"*!*",V.local.ssort,"*!*",V.local.ssort2,"*!*",V.global.sseq2(v.Local.icount),V.Local.sRowData)</string>
        <string>				F.Intrinsic.String.Concat(V.Local.sData,"$!$",V.Local.sRowData,V.Local.sData)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>			'next loop for sequences</string>
        <string>			F.ODBC.conx!rst.Close</string>
        <string />
        <string>		F.Intrinsic.Control.Next(V.Local.icount2)</string>
        <string />
        <string>			'concat the file path for the spreadhseet, then write it. Afterwards add 1 to the count and loop through again to create another spreadsheet for other vendors, if needed.	</string>
        <string>			Function.Intrinsic.String.Concat("RFQ",V.local.sDate,".xlsx*!*",V.Caller.FilesDir,"\RFQ\Export",V.Local.sExcel)</string>
        <string>			Function.Intrinsic.String.Concat(V.Caller.FilesDir,"\RFQ\Export\RFQ",V.uGlobal.uContacts(v.Local.ivendcount)!VENDOR.Trim,V.Local.sDate,".xlsx",V.Local.sFile)</string>
        <string>			Function.Automation.MSExcel.WriteSpreadsheet(V.Local.sFile,V.Local.sData)</string>
        <string>			F.Intrinsic.Math.Add(V.Local.iexcelcount,1,V.Local.iexcelcount)</string>
        <string>			V.uGlobal.uExcel(v.Local.iexcelcount)!uExcel.Set(V.Local.sFile)</string>
        <string>			'clear the data and rowdata before moving to the next ount</string>
        <string>			V.Local.sData.Set("")</string>
        <string>			V.Local.sRowData.Set("")</string>
        <string>			F.Intrinsic.Math.Add(V.Local.icount2,1,V.Local.icount2)</string>
        <string>		F.Intrinsic.Control.else</string>
        <string>'			F.ODBC.conx!rst.Close</string>
        <string>		F.intrinsic.control.endif</string>
        <string />
        <string>'if needed change the vendor to create the new spreadsheet</string>
        <string>V.Local.svendor.Set(V.uGlobal.uContacts(v.Local.ivendcount)!VENDOR.Trim)</string>
        <string />
        <string>V.Local.sData.Set("Part*!*Description*!*Quantity*!*Vendor*!*Sort*!*Seq*!*Price")</string>
        <string />
        <string>F.Intrinsic.Control.Next(V.Local.ivendcount)</string>
        <string />
        <string />
        <string>'ERROR HANDLING BELOW</string>
        <string>F.Intrinsic.Control.Label("BuildExportExcel_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.BuildExportExcel.End</string>
        <string />
        <string>Program.Sub.ClearReplyTo.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("ClearReplyTo_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'clear the textboxes</string>
        <string>Gui.f_Main.txtRName.Text("")</string>
        <string>Gui.f_Main.txtUser.Text("")</string>
        <string>Gui.f_Main.txtREmail.Text("")</string>
        <string>Gui.f_Main.txtRFax.Text("")</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("ClearReplyTo_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.ClearReplyTo.End</string>
        <string />
        <string>program.sub.txtvendor_lostfocus.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("txtvendor_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string />
        <string>Function.Intrinsic.Control.If(V.Screen.f_Main!txtVendor.text,&lt;&gt;,"")</string>
        <string>	Function.Intrinsic.String.Concat("SELECT NAME_VENDOR FROM V_VENDOR_MASTER WHERE VENDOR = '",V.Screen.f_Main!txtVendor.Text,"'",V.Local.sSQL)</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>		Gui.f_Main.txtVendorName.Text(V.ODBC.conx!rst.FieldValTrim!NAME_VENDOR)</string>
        <string>		Gui.f_Main.cmdAddVendor.SetFocus</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Function.Intrinsic.UI.Msgbox("Selected Vendor is invalid","Invalid Vendor")</string>
        <string>		Gui.f_Main.txtVendor.Text("")</string>
        <string>		Gui.f_Main.txtVendorName.Text("")</string>
        <string>		Gui.f_Main.txtVendor.SetFocus</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Function.ODBC.conx!rst.Close</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("txtvendor_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.txtvendor_lostfocus.End</string>
        <string />
        <string>program.sub.cmdremovevendor_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdremovevendor_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.iOrd.Declare(Long)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string />
        <string>Gui.f_Main.lvSelVendors.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>Function.Intrinsic.Control.If(V.Local.sKey,&lt;&gt;,"***NORETURN***")</string>
        <string>	Gui.f_Main.lvSelVendors.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sText.Set(V.Screen.f_Main!lvSelVendors.ListItemText(V.Local.iOrd))</string>
        <string />
        <string>	Function.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uContacts!VENDOR,V.Local.sText)</string>
        <string>	Function.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uContacts)</string>
        <string />
        <string>	Gui.f_Main.lvSelVendors.RemoveItem(V.Local.sKey)</string>
        <string />
        <string>	Gui.f_Main.lvAvailContacts.ClearItems</string>
        <string>	Gui.f_Main.lvlSelContacts.ClearItems</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdremovevendor_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdremovevendor_click.End</string>
        <string />
        <string>program.sub.cmdbrwreply_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdbrwreply_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string />
        <string>'call the common browser, then call the loadreplyto sub</string>
        <string>Function.Intrinsic.UI.CommonBrowser(10,"",V.Local.sRet)</string>
        <string>Function.Intrinsic.Control.If(V.Local.sRet,&lt;&gt;,"***CANCEL***")</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>	Function.Intrinsic.Control.CallSub(Loadreplyto,"User",V.Local.sRet(1).Trim)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdbrwreply_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdbrwreply_click.End</string>
        <string />
        <string>program.sub.cmdbrwvendor_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdbrwvendor_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string />
        <string>'call the commonbrowser and set the vendor/vendor name textboxes based on whatever selection is made</string>
        <string>F.Intrinsic.UI.SetBrowserHotTypeAhead(True)</string>
        <string />
        <string>Function.Intrinsic.UI.CommonBrowser(300,"",V.Local.sRet)</string>
        <string>Function.Intrinsic.Control.If(V.Local.sRet,&lt;&gt;,"***CANCEL***")</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>	Gui.f_Main.txtVendor.Text(V.Local.sRet(0).Trim)</string>
        <string>	Gui.f_Main.txtVendorName.Text(V.Local.sRet(1).Trim)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdbrwvendor_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdbrwvendor_click.End</string>
        <string />
        <string>program.sub.cmdaddvendor_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdaddvendor_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string>V.Local.iOrd.Declare(Long)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string />
        <string>'if the vendor text isn't blank go through the selected vendors to retrieve the information</string>
        <string>Function.Intrinsic.Control.If(V.Screen.f_Main!txtVendor.Text,&lt;&gt;,"")</string>
        <string>	Gui.f_Main.lvSelVendors.RetrieveAllListItems(V.Local.sKey)</string>
        <string>	Function.Intrinsic.Control.If(V.Local.sKey,&lt;&gt;,"***NORETURN***")</string>
        <string>		Function.Intrinsic.String.Split(V.Local.sKey,"*!*",V.Local.sKey)</string>
        <string />
        <string>		'Checking to see if Vendor already in list</string>
        <string>		Function.Intrinsic.Control.For(V.Local.i,0,V.Local.sKey.UBound,1)</string>
        <string>			Function.Intrinsic.Control.If(V.Local.sKey(v.local.i).trim,=,V.Screen.f_Main!txtVendor.Text)</string>
        <string>				Function.Intrinsic.UI.Msgbox("This Vendor is already in the selection list. Please choose another","Vendor Already Selected")</string>
        <string>				Function.Intrinsic.Control.ExitSub</string>
        <string>			Function.Intrinsic.Control.Endif</string>
        <string>		Function.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>		Gui.f_Main.lvSelVendors.AddListItem(V.Screen.f_Main!txtVendor.Text,V.Screen.f_Main!txtvendor.Text)</string>
        <string>		Gui.f_Main.lvSelVendors.SetListItemSubItemText(V.Screen.f_Main!txtVendor.Text,1,V.Screen.f_Main!txtVendorName.Text)</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Gui.f_Main.lvSelVendors.AddListItem(V.Screen.f_Main!txtVendor.Text,V.Screen.f_Main!txtvendor.Text)</string>
        <string>		Gui.f_Main.lvSelVendors.SetListItemSubItemText(V.Screen.f_Main!txtVendor.Text,1,V.Screen.f_Main!txtVendorName.Text)</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'Loading Contacts from Vendor</string>
        <string>	Function.Intrinsic.String.Concat("select CUST, ID, EMAIL1, (RTRIM(NAME_FIRST) + ' ' + RTRIM(NAME_LAST)) AS FULL_NAME from "CONTACT" WHERE TYPE = 'V' AND CUST = '",V.Screen.f_Main!txtVendor.Text,"'",V.Local.sSQL)</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>	Function.Intrinsic.Variable.LoadUDTFromRecordset("CONX","RST","V.UGLOBAL.UCONTACTS",True)</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Function.ODBC.conx!rst.Close</string>
        <string />
        <string>	'clear the vendor text</string>
        <string>	Gui.f_Main.txtVendor.Text("")</string>
        <string>	Gui.f_Main.txtVendorName.Text("")</string>
        <string>	Gui.f_Main.txtVendor.SetFocus</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdaddvendor_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdaddvendor_click.End</string>
        <string />
        <string>program.sub.lvselvendors_itemclick.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("lvselvendors_itemclick_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.iOrd.Declare(String)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.sKeyNew.Declare(String,"0")</string>
        <string />
        <string>V.Local.icount.Declare(Long)</string>
        <string>V.Local.sloop.Declare(String)</string>
        <string>V.Local.iordinal.Declare(Long)</string>
        <string>V.Local.srange.Declare(String)</string>
        <string>V.Local.sname.Declare(String)</string>
        <string>V.Local.semail.Declare(String)</string>
        <string>V.Local.icount2.Declare(Long)</string>
        <string>V.Local.srange2.Declare(Long)</string>
        <string>V.Local.iloopcount.Declare(Long)</string>
        <string>V.Local.inamecount.Declare(Long)</string>
        <string>V.Local.iemailcount.Declare(Long)</string>
        <string>V.Local.svendor.Declare(String)</string>
        <string>V.Local.sname2.Declare(String)</string>
        <string>V.Local.iselect.Declare(Long)</string>
        <string />
        <string>'Gui.f_Main.lvlSelContacts.ClearItems</string>
        <string>'Gui.f_Main.lvAvailContacts.ClearItems</string>
        <string />
        <string>'F.Intrinsic.Debug.InvokeDebugger</string>
        <string>'F.Intrinsic.Debug.Stop</string>
        <string />
        <string>'F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uContacts!EMAIL,"")</string>
        <string>'F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uContacts!ID,"")</string>
        <string>'F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uContacts!NAME,"")</string>
        <string>''F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uContacts!Selected,"")</string>
        <string>'F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uContacts!VENDOR,"")</string>
        <string>'</string>
        <string>'</string>
        <string>'F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uContacts)</string>
        <string />
        <string />
        <string>Gui.f_Main.lvSelVendors.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string />
        <string>'Function.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uContacts!VENDOR,V.Local.sKey,V.uGlobal.uContacts!Selected,False,V.Local.sRet)</string>
        <string>'Function.Intrinsic.Control.If(V.Local.sRet,&lt;&gt;,"")</string>
        <string>'	    Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>'    Function.Intrinsic.Control.For(V.Local.i,0,V.Local.sRet.UBound,1)</string>
        <string>'        Gui.f_Main.lvAvailContacts.AddListItem(V.Local.sKeyNew,V.uGlobal.uContacts(v.Local.sRet(v.Local.i))!NAME)</string>
        <string>'        Gui.f_Main.lvAvailContacts.SetListItemSubItemText(V.Local.sKeyNew,1,V.uGlobal.uContacts(V.Local.sRet(v.Local.i))!EMAIL)</string>
        <string>'        Gui.f_Main.lvAvailContacts.SetListItemSubItemText(V.Local.sKeyNew,2,V.uGlobal.uContacts(V.Local.sRet(v.Local.i))!ID)</string>
        <string>'        Function.Intrinsic.Math.Add(V.Local.sKeyNew,1,V.Local.sKeyNew)</string>
        <string>'    Function.Intrinsic.Control.Next(V.Local.i)</string>
        <string>'Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string />
        <string>Gui.f_Main.lvAvailContacts.ClearItems</string>
        <string />
        <string>F.Intrinsic.control.For(V.Local.i,V.uGlobal.uContacts.LBound,V.uGlobal.uContacts.UBound,1)</string>
        <string>			F.Intrinsic.Control.If(V.Local.sKey,&lt;&gt;,V.uGlobal.uContacts(v.Local.i)!VENDOR.Trim)</string>
        <string>	</string>
        <string>				Function.Intrinsic.Math.Add(V.local.skeynew,1,V.local.skeynew)</string>
        <string>						F.Intrinsic.Control.Else</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(v.Local.i)!NAME,&lt;&gt;,"")</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(V.Local.i)!Selected,=,False)</string>
        <string>					        Function.Intrinsic.Math.Add(V.local.skeynew,1,V.local.skeynew)</string>
        <string>	        Gui.f_Main.lvAvailContacts.AddListItem(V.local.skeynew,V.uGlobal.uContacts(v.local.i)!NAME)</string>
        <string>	        Gui.f_Main.lvAvailContacts.setlistitemSubItemText(V.local.skeynew,1,V.uGlobal.uContacts(v.local.i)!EMAIL)</string>
        <string>	        Gui.f_Main.lvAvailContacts.SetListItemSubItemText(V.local.skeynew,2,V.uGlobal.uContacts(v.local.i)!ID)</string>
        <string>F.intrinsic.control.endif</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>F.intrinsic.control.endif</string>
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string />
        <string />
        <string />
        <string />
        <string />
        <string />
        <string />
        <string />
        <string>'</string>
        <string>''Make Sure to add to existing contacts in selected list</string>
        <string>'Gui.f_Main.lvlSelContacts.RetrieveAllListItems(V.Local.sRet)</string>
        <string>'F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>'V.Local.sKeyNew.Set(V.Local.sRet(v.local.sRet.UBound))</string>
        <string>'</string>
        <string>'V.Local.sRet.Redim(0,0)</string>
        <string>'</string>
        <string>''Adding selection to selected email contacts</string>
        <string>'Function.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uContacts!VENDOR,V.local.skey,V.uGlobal.uContacts!Selected,True,V.local.sret)</string>
        <string />
        <string>Gui.f_Main.lvlSelContacts.ClearItems</string>
        <string />
        <string>F.Intrinsic.control.For(V.Local.i,V.uGlobal.uContacts.LBound,V.uGlobal.uContacts.UBound,1)</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(V.Local.i)!Selected,=,True)</string>
        <string>	</string>
        <string>				        Function.Intrinsic.Math.Add(V.local.skeynew,1,V.local.skeynew)</string>
        <string>	        Gui.f_Main.lvlSelContacts.AddListItem(V.local.skeynew,V.uGlobal.uContacts(v.local.i)!NAME)</string>
        <string>	        Gui.f_Main.lvlSelContacts.SetListItemSubItemText(V.local.skeynew,1,V.uGlobal.uContacts(v.local.i)!EMAIL)</string>
        <string>	        Gui.f_Main.lvlSelContacts.SetListItemSubItemText(V.local.skeynew,2,V.uGlobal.uContacts(v.local.i)!ID)</string>
        <string>F.intrinsic.control.endif</string>
        <string />
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>'</string>
        <string>'</string>
        <string>'	Function.Intrinsic.Control.If(V.local.sret,&lt;&gt;,"")</string>
        <string>'	F.Intrinsic.Control.If(V.Args.clear,&lt;&gt;,"N")</string>
        <string>'		Gui.f_Main.lvlSelContacts.ClearItems</string>
        <string>'	F.Intrinsic.Control.EndIf</string>
        <string>'	    Function.Intrinsic.String.Split(V.local.sret,"*!*",V.local.sret)</string>
        <string>'		F.Intrinsic.Control.For(V.Local.i,V.uGlobal.uContacts.LBound,V.uGlobal.uContacts.UBound,1)</string>
        <string>'			F.Intrinsic.Control.If(V.uGlobal.uContacts(V.Local.i)!Selected,&lt;&gt;,True)</string>
        <string>'		    Function.Intrinsic.Control.For(V.local.i,0,V.local.sret.UBound,1)</string>
        <string>'</string>
        <string>'	        Function.Intrinsic.Math.Add(V.local.skeynew,1,V.local.skeynew)</string>
        <string>'	        Gui.f_Main.lvlSelContacts.AddListItem(V.local.skeynew,V.uGlobal.uContacts(v.local.sret(v.local.i))!NAME)</string>
        <string>'	        Gui.f_Main.lvlSelContacts.SetListItemSubItemText(V.local.skeynew,1,V.uGlobal.uContacts(v.local.sret(v.local.i))!EMAIL)</string>
        <string>'	        Gui.f_Main.lvlSelContacts.SetListItemSubItemText(V.local.skeynew,2,V.uGlobal.uContacts(v.local.sret(v.local.i))!ID)</string>
        <string>'</string>
        <string>'					F.Intrinsic.Control.Else</string>
        <string>'</string>
        <string>'	    Function.Intrinsic.Control.Next(V.local.i)</string>
        <string>'Function.Intrinsic.Control.EndIf</string>
        <string>'F.Intrinsic.Control.EndIf</string>
        <string>'F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("lvselvendors_itemclick_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>    Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>    F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>    F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>program.sub.lvselvendors_itemclick.End</string>
        <string />
        <string>program.sub.lvavailcontacts_dblclick.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("lvavailcontacts_dblclick_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string>V.Local.iOrd.Declare(Long)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sVendor.Declare(String)</string>
        <string>V.Local.skey2.Declare(String)</string>
        <string />
        <string>'takes selected line and marks contact as true, then clears the available contacts lv and reloads it</string>
        <string>Gui.f_Main.lvAvailContacts.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>Function.Intrinsic.Control.If(V.Local.sKey,&lt;&gt;,"***NORETURN***")</string>
        <string>	Gui.f_Main.lvAvailContacts.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sText.Set(V.Screen.f_Main!lvAvailContacts.ListItemTextExtended(V.Local.iOrd))</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sText,"*!*",V.Local.sText)</string>
        <string>	V.Local.sVendor.Set(V.Screen.f_Main!lvSelVendors.SelectedItemKey)</string>
        <string>	Function.Intrinsic.Variable.UDTMultiSeek(V.uglobal.uContacts!vendor,V.local.sVendor,V.uGlobal.uContacts!ID,V.Local.sText(2).Trim,V.Local.sRet)</string>
        <string>	V.uGlobal.uContacts(v.Local.sRet)!Selected.Set(True)</string>
        <string />
        <string>Gui.f_Main.lvlSelContacts.RetrieveAllListItems(V.Local.skey2)</string>
        <string>	F.Intrinsic.Control.If(V.Local.skey2,=,"")</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>	Function.Intrinsic.Control.CallSub(Lvselvendors_itemclick,"clear","Y")</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string />
        <string>F.Intrinsic.Control.Label("lvavailcontacts_dblclick_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.lvavailcontacts_dblclick.End</string>
        <string />
        <string>program.sub.lvlselcontacts_dblclick.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("lvlselcontacts_dblclick_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.iOrd.Declare(String)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string />
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.skeynew.Declare(String)</string>
        <string>V.Local.skey2.Declare(String)</string>
        <string>V.Local.iret.Declare(Long)</string>
        <string>V.Local.icount.Declare(Long)</string>
        <string />
        <string>Gui.f_Main.lvSelVendors.RetrieveSelectedListitems(V.Local.sKey2)</string>
        <string>Gui.f_Main.lvlSelContacts.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string />
        <string>'after retrieving information from the selected vendors and contact list loop through and mark the selected line as false</string>
        <string>Function.Intrinsic.Control.If(V.Local.sKey,&lt;&gt;,"***NORETURN***")</string>
        <string>	Gui.f_Main.lvlSelContacts.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sText.Set(V.Screen.f_Main!lvlSelContacts.ListItemTextExtended(v.Local.iOrd))</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sText,"*!*",V.Local.sText)</string>
        <string>		F.Intrinsic.Control.For(V.Local.icount,V.uGlobal.uContacts!Name.LBound,V.uGlobal.uContacts!Name.UBound,1)</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(v.Local.icount)!NAME,=,V.Local.sText(0))</string>
        <string>				V.uGlobal.uContacts(v.Local.icount)!Selected.Set(False)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>		F.Intrinsic.Control.Next(V.Local.icount)</string>
        <string>	'remove the selected line</string>
        <string>	Gui.f_Main.lvlselcontacts.RemoveItem(V.Local.sKey)</string>
        <string>	'clear items in the listview</string>
        <string>	Gui.f_Main.lvAvailContacts.ClearItems</string>
        <string />
        <string>'loop through the uContacts UDT and if they are listed as false load them to the available contacts LV</string>
        <string>F.Intrinsic.control.For(V.Local.i,V.uGlobal.uContacts.LBound,V.uGlobal.uContacts.UBound,1)</string>
        <string>			F.Intrinsic.Control.If(V.Local.sKey2,&lt;&gt;,V.uGlobal.uContacts(v.Local.i)!VENDOR.Trim)</string>
        <string>	</string>
        <string>				Function.Intrinsic.Math.Add(V.local.skeynew,1,V.local.skeynew)</string>
        <string>						F.Intrinsic.Control.Else</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(v.Local.i)!NAME,&lt;&gt;,"")</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(V.Local.i)!Selected,=,False)</string>
        <string>					        Function.Intrinsic.Math.Add(V.local.skeynew,1,V.local.skeynew)</string>
        <string>	        Gui.f_Main.lvAvailContacts.AddListItem(V.local.skeynew,V.uGlobal.uContacts(v.local.i)!NAME)</string>
        <string>	        Gui.f_Main.lvAvailContacts.setlistitemSubItemText(V.local.skeynew,1,V.uGlobal.uContacts(v.local.i)!EMAIL)</string>
        <string>	        Gui.f_Main.lvAvailContacts.SetListItemSubItemText(V.local.skeynew,2,V.uGlobal.uContacts(v.local.i)!ID)</string>
        <string>F.intrinsic.control.endif</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>F.intrinsic.control.endif</string>
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>'clear the selected contacts list</string>
        <string>Gui.f_Main.lvlSelContacts.ClearItems</string>
        <string />
        <string>'loop through the uContacts UDT and if the contact is listed as selected reload them into the selected contacts LV</string>
        <string>F.Intrinsic.control.For(V.Local.i,V.uGlobal.uContacts.LBound,V.uGlobal.uContacts.UBound,1)</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(V.Local.i)!Selected,=,True)</string>
        <string>	</string>
        <string>				        Function.Intrinsic.Math.Add(V.local.skeynew,1,V.local.skeynew)</string>
        <string>	        Gui.f_Main.lvlSelContacts.AddListItem(V.local.skeynew,V.uGlobal.uContacts(v.local.i)!NAME)</string>
        <string>	        Gui.f_Main.lvlSelContacts.SetListItemSubItemText(V.local.skeynew,1,V.uGlobal.uContacts(v.local.i)!EMAIL)</string>
        <string>	        Gui.f_Main.lvlSelContacts.SetListItemSubItemText(V.local.skeynew,2,V.uGlobal.uContacts(v.local.i)!ID)</string>
        <string>F.intrinsic.control.endif</string>
        <string />
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("lvlselcontacts_dblclick_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.lvlselcontacts_dblclick.End</string>
        <string />
        <string>program.sub.cmdaddcontact_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdaddcontact_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>'declare variables</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string>V.Local.iOrd.Declare(Long)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sVendor.Declare(String)</string>
        <string />
        <string>'go through the available contacts get the information and mark the contact as selected in the uContaacts UDT</string>
        <string>Gui.f_Main.lvAvailContacts.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>Function.Intrinsic.Control.If(V.Local.sKey,&lt;&gt;,"***NORETURN***")</string>
        <string>	Gui.f_Main.lvAvailContacts.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sText.Set(V.Screen.f_Main!lvAvailContacts.ListItemTextExtended(V.Local.iOrd))</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sText,"*!*",V.Local.sText)</string>
        <string>	V.Local.sVendor.Set(V.Screen.f_Main!lvSelVendors.SelectedItemKey)</string>
        <string>	Function.Intrinsic.Variable.UDTMultiSeek(V.uglobal.uContacts!vendor,V.local.sVendor,V.uGlobal.uContacts!ID,V.Local.sText(2).Trim,V.Local.sRet)</string>
        <string>	V.uGlobal.uContacts(v.Local.sRet)!Selected.Set(True)</string>
        <string>	'call the clear selected vendors tab</string>
        <string>	Function.Intrinsic.Control.CallSub(Lvselvendors_itemclick,"clear","Y")</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdaddcontact_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdaddcontact_click.End</string>
        <string />
        <string>program.sub.cmdremovecontact_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdremovecontact_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>'declare the variables</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.iOrd.Declare(String)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.skeynew.Declare(String)</string>
        <string>V.Local.skey2.Declare(String)</string>
        <string>V.Local.icount.Declare(Long)</string>
        <string />
        <string>'retrieve listitems from both selected vendors and selected contacts</string>
        <string>Gui.f_Main.lvSelVendors.RetrieveSelectedListitems(V.Local.sKey2)</string>
        <string>Gui.f_Main.lvlSelContacts.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string />
        <string>'go through the selected contacts listview and set the contact to false</string>
        <string>Function.Intrinsic.Control.If(V.Local.sKey,&lt;&gt;,"***NORETURN***")</string>
        <string>	Gui.f_Main.lvlSelContacts.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sText.Set(V.Screen.f_Main!lvlSelContacts.ListItemTextExtended(v.Local.iOrd))</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sText,"*!*",V.Local.sText)</string>
        <string>		F.Intrinsic.Control.For(V.Local.icount,V.uGlobal.uContacts!Name.LBound,V.uGlobal.uContacts!Name.UBound,1)</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(v.Local.icount)!NAME,=,V.Local.sText(0))</string>
        <string>				V.uGlobal.uContacts(v.Local.icount)!Selected.Set(False)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>		F.Intrinsic.Control.Next(V.Local.icount)</string>
        <string />
        <string>'remove the contact from the listview</string>
        <string>Gui.f_Main.lvlselcontacts.RemoveItem(V.Local.sKey)</string>
        <string />
        <string>'clear the items in the available contacts list view</string>
        <string>Gui.f_Main.lvAvailContacts.ClearItems</string>
        <string />
        <string>'loop through the ucontacts, if they are marked as false don't load them in the available contacts listview</string>
        <string>F.Intrinsic.control.For(V.Local.i,V.uGlobal.uContacts.LBound,V.uGlobal.uContacts.UBound,1)</string>
        <string>			F.Intrinsic.Control.If(V.Local.sKey2,&lt;&gt;,V.uGlobal.uContacts(v.Local.i)!VENDOR.Trim)</string>
        <string>	</string>
        <string>				Function.Intrinsic.Math.Add(V.local.skeynew,1,V.local.skeynew)</string>
        <string>						F.Intrinsic.Control.Else</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(v.Local.i)!NAME,&lt;&gt;,"")</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(V.Local.i)!Selected,=,False)</string>
        <string>					        Function.Intrinsic.Math.Add(V.local.skeynew,1,V.local.skeynew)</string>
        <string>	        Gui.f_Main.lvAvailContacts.AddListItem(V.local.skeynew,V.uGlobal.uContacts(v.local.i)!NAME)</string>
        <string>	        Gui.f_Main.lvAvailContacts.setlistitemSubItemText(V.local.skeynew,1,V.uGlobal.uContacts(v.local.i)!EMAIL)</string>
        <string>	        Gui.f_Main.lvAvailContacts.SetListItemSubItemText(V.local.skeynew,2,V.uGlobal.uContacts(v.local.i)!ID)</string>
        <string>F.intrinsic.control.endif</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>F.intrinsic.control.endif</string>
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>'clear items in the selected contacts listview</string>
        <string>Gui.f_Main.lvlSelContacts.ClearItems</string>
        <string />
        <string>'loop throught the ucontacts UDT if the contact is marked as selected load them in the selected contacts LV</string>
        <string>F.Intrinsic.control.For(V.Local.i,V.uGlobal.uContacts.LBound,V.uGlobal.uContacts.UBound,1)</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(V.Local.i)!Selected,=,True)</string>
        <string>	</string>
        <string>				        Function.Intrinsic.Math.Add(V.local.skeynew,1,V.local.skeynew)</string>
        <string>	        Gui.f_Main.lvlSelContacts.AddListItem(V.local.skeynew,V.uGlobal.uContacts(v.local.i)!NAME)</string>
        <string>	        Gui.f_Main.lvlSelContacts.SetListItemSubItemText(V.local.skeynew,1,V.uGlobal.uContacts(v.local.i)!EMAIL)</string>
        <string>	        Gui.f_Main.lvlSelContacts.SetListItemSubItemText(V.local.skeynew,2,V.uGlobal.uContacts(v.local.i)!ID)</string>
        <string>F.intrinsic.control.endif</string>
        <string />
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdremovecontact_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdremovecontact_click.End</string>
        <string />
        <string>program.sub.cmdbrwjob_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdbrwjob_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.stitles.Declare(String)</string>
        <string>V.Local.iwidths.Declare(Long)</string>
        <string />
        <string>'F.Intrinsic.string.Split("Job*!*Suffix*!*Printed*!*Description*!*PartNumber*!*Rev*!*DateDue","*!*",V.local.stitles)</string>
        <string>'F.Intrinsic.string.Split("Job*!*Suffix*!*Description*!*PartNumber","*!*",V.local.stitles)</string>
        <string>F.Intrinsic.string.Split("Job*!*Suffix*!*Description*!*PartNumber*!*Rev","*!*",V.local.stitles)</string>
        <string>'F.Intrinsic.String.Split("Work Order*!*Suffix*!*Part*!*Description","*!*",V.Local.stitles)</string>
        <string>'F.Intrinsic.String.Split("1000*!*1000*!*1000*!*1000*!*1000*!*1000*!*1000","*!*",V.Local.iwidths)</string>
        <string>'F.Intrinsic.String.Split("1800*!*1500*!*3000*!*1000","*!*",V.Local.iwidths)</string>
        <string>F.Intrinsic.String.Split("1800*!*1500*!*3000*!*1000*!*500","*!*",V.Local.iwidths)</string>
        <string />
        <string>'F.ODBC.Connection!con.OpenConnection("Global_PLA","Master","master")</string>
        <string>'F.Intrinsic.UI.Browser("Select a job","con","Select Job, Suffix, Part, Description from V_JOB_HEADER where JOB_TYPE &lt;&gt; 'L'",V.Local.stitles,V.Local.iwidths,V.Local.sRet)</string>
        <string>'SELECT JOB AS "Job", SUFFIX AS "Suffix", FLAG_WO_PRTD AS "Printed", DESCRIPTION AS "Description" ,SUBSTRING (PART,1,17) AS"Part Number",SUBSTRING(PART,18,3)AS"Rev",DATE_DUEAS"Date Due",V_JOB_HEADER.JOB,V_JOB_HEADER.SUFFIXFROMV_JOB_HEADERWHEREJOB&gt;''ORDERBY"Job","Suffix"</string>
        <string>F.intrinsic.ui.Browser(" Select a job","conx","SELECT JOB AS Job, SUFFIX AS Suffix, DESCRIPTION AS Description, SUBSTRING(PART,1,17) AS PartNumber, SUBSTRING(PART,18,3) as REV FROM V_JOB_HEADER WHERE JOB &gt; '' ORDER BY Job, Suffix",V.Local.stitles,V.Local.iwidths,V.Local.sRet)</string>
        <string>'F.intrinsic.ui.Browser(" Select a job","con","SELECT JOB AS Job, SUFFIX AS Suffix, DESCRIPTION AS Description, SUBSTRING (PART,1,17) AS Part Number, FROM V_JOB_HEADER WHERE JOB &gt; '' ORDER BY Job, Suffix",V.Local.stitles,V.Local.iwidths,V.Local.sRet)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Local.sRet,=,"***CANCEL***")</string>
        <string>F.Intrinsic.UI.Msgbox("No job was selected")</string>
        <string>'	F.ODBC.Connection!con.Close</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'Function.Intrinsic.UI.CommonBrowser(1000,"",V.Local.sRet)</string>
        <string>Function.Intrinsic.Control.elseIf(V.Local.sRet,&lt;&gt;,"***CANCEL***")</string>
        <string>	'Clearing router</string>
        <string>	Gui.f_Main.txtRouter.Text("")</string>
        <string>	Gui.f_Main.txtRouterQty.Text("")</string>
        <string>	Gui.f_Main.chkRequisitions.Value(0)</string>
        <string />
        <string>	'call the clear part sub</string>
        <string>	F.Intrinsic.Control.CallSub(Clearpart)</string>
        <string>	</string>
        <string>	'clear items in the lvRouterWOSeq list view and set the textboxes to the information selected, then call the loadjobsequences sub</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>	Gui.f_Main.txtJob.Text(V.Local.sRet(0).Trim)</string>
        <string>	Gui.f_Main.txtSuffix.Text(V.Local.sRet(1).Trim)</string>
        <string>	Gui.f_Main.txtEndJob.Text(V.Local.sRet(0).Trim)</string>
        <string>	Gui.f_Main.txtEndSuff.Text(V.Local.sRet(1).Trim)</string>
        <string>	F.Intrinsic.Control.CallSub(Loadjobsequences)</string>
        <string>'	F.ODBC.Connection!con.Close</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdbrwjob_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdbrwjob_click.End</string>
        <string />
        <string>program.sub.cmdbrwrouter_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdbrwrouter_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string />
        <string>'call the common browser and clear the items int he lvRouterWOSeq listview</string>
        <string>Function.Intrinsic.UI.CommonBrowser(2705,"",V.Local.sRet)</string>
        <string>Function.Intrinsic.Control.If(V.Local.sRet,&lt;&gt;,"***CANCEL***")</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string />
        <string>	'clear the textboxes</string>
        <string>	Gui.f_Main.txtJob.Text("")</string>
        <string>	Gui.f_Main.txtSuffix.Text("")</string>
        <string>	Gui.f_Main.txtEndJob.Text("")</string>
        <string>	Gui.f_Main.txtEndSuff.Text("")</string>
        <string>	Gui.f_Main.chkRequisitions.Value(0)</string>
        <string />
        <string>	F.Intrinsic.Control.CallSub(Clearpart)</string>
        <string />
        <string>	Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>	Gui.f_Main.txtRouter.Text(V.Local.sRet(0).Trim)</string>
        <string>	</string>
        <string>	'goes throught the database to select information for the router selection</string>
        <string>	Function.Intrinsic.String.Concat("SELECT QUANTITY_1 FROM RTR_PRICE_1_4 WHERE ROUTER = '",V.Local.sRet(0).Trim,"' AND ROUTER_TYPE = 'Q'",V.Local.sSQL)</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>		F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldVal!QUANTITY_1,=,0)</string>
        <string>			Gui.f_Main.txtRouterQty.Text("1")</string>
        <string>		F.Intrinsic.Control.Else</string>
        <string>			Gui.f_Main.txtRouterQty.Text(V.ODBC.CONX!rst.FieldVal!QUANTITY_1)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Gui.f_Main.txtRouterQty.Text("1")</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Function.ODBC.Conx!rst.Close</string>
        <string />
        <string>	'call the loadroutersequences sub</string>
        <string>	Function.Intrinsic.Control.CallSub(Loadroutersequences)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdbrwrouter_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdbrwrouter_click.End</string>
        <string />
        <string>Program.Sub.LoadJobSequences.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("LoadJobSequences_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string>V.Local.fJobQty.Declare(Float)</string>
        <string>V.Local.fQty.Declare(Float)</string>
        <string>V.Local.swo.Declare(String)</string>
        <string>V.Local.sewo.Declare(String)</string>
        <string>V.Local.sjob.Declare(String)</string>
        <string>V.Local.ssuffix.Declare(String)</string>
        <string />
        <string>'F.intrinsic.String.Build("SELECT SEQ, PART, DESCRIPTION,UNITS,DATE_DUE FROM V_JOB_OPERATIONS WHERE JOB = BETWEEN '{0}' AND '{1}' AND SUFFIX = BETWEEN '{2}' AND '{3}' AND LMO = '{4}' AND SEQ &lt;990000 ORDER BY SEQ",V.Screen.f_Main!txtJob.Text,V.Screen.f_Main!txtEndJob.Text,V.Screen.f_Main!txtSuffix.Text,V.Screen.f_Main!txtEndSuff.Text,"M",V.Local.sSql)</string>
        <string />
        <string>Function.Intrinsic.String.Concat("SELECT SEQ, PART, SUFFIX, JOB, DESCRIPTION, UNITS, DATE_DUE FROM V_JOB_OPERATIONS WHERE JOB = '",V.Screen.f_Main!txtJob.Text,"' AND SUFFIX = '",V.Screen.f_Main!txtSuffix.Text,"' AND LMO = 'M' AND SEQ &lt; 990000 Order By SEQ",V.Local.sSQL)</string>
        <string>Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>	Function.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)</string>
        <string>		V.Local.sjob.Set(V.ODBC.conx!rst.FieldVal!JOB)</string>
        <string>		V.Local.ssuffix.Set(V.ODBC.conx!rst.FieldVal!SUFFIX)</string>
        <string />
        <string>		Gui.f_Main.lvRouterWOSeq.AddListItem(V.ODBC.conx!rst.FieldValTrim!SEQ,V.ODBC.conx!rst.FieldValTrim!SEQ)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,1,V.ODBC.conx!rst.FieldValTrim!PART)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,2,V.ODBC.conx!rst.FieldValTrim!DESCRIPTION)</string>
        <string />
        <string>		Function.Intrinsic.String.Concat("SELECT QTY_ORDER, JOB FROM V_JOB_HEADER WHERE JOB = '",V.Screen.f_Main!txtJob.Text,"' AND SUFFIX = '",V.Screen.f_Main!txtSuffix.Text,"'",V.Local.sSQL)</string>
        <string>		Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTY",V.Local.sSQL)</string>
        <string>		V.Local.fJobQty.Set(V.ODBC.conx!rstQTY.FieldVal!QTY_ORDER)</string>
        <string />
        <string>		Function.ODBC.conx!rstQTY.Close</string>
        <string>		Function.Intrinsic.Math.Mult(V.Local.fJobQty,V.ODBC.conx!rst.FieldVal!UNITS,V.Local.fQty)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,3,V.Local.fQty)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,4,V.ODBC.conx!rst.FieldVal!DATE_DUE)</string>
        <string />
        <string>		F.Intrinsic.String.Concat(V.local.sjob,"-",V.local.ssuffix,V.Local.sjob)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,5,V.local.sjob)</string>
        <string />
        <string>			Function.ODBC.conx!rst.MoveNext</string>
        <string>	Function.Intrinsic.Control.Loop</string>
        <string>	Function.ODBC.conx!rst.Close</string>
        <string>Function.Intrinsic.Control.Else</string>
        <string>	Function.ODBC.conx!rst.Close</string>
        <string>	Function.Intrinsic.UI.Msgbox("No material sequences found for this job","No Material Found")</string>
        <string>	Function.Intrinsic.Control.ExitSub</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("LoadJobSequences_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.LoadJobSequences.End</string>
        <string />
        <string>program.sub.txtsuffix_lostfocus.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("txtsuffix_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string />
        <string>Function.Intrinsic.Control.If(V.Screen.f_Main!txtJob.Text,&lt;&gt;,"")</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string />
        <string>	'Clearing router fields</string>
        <string>	Gui.f_Main.txtRouter.Text("")</string>
        <string>	Gui.f_Main.txtRouterQty.Text("")</string>
        <string>	Gui.f_Main.chkRequisitions.Value(0)</string>
        <string />
        <string>	F.Intrinsic.Control.CallSub(Clearpart)</string>
        <string />
        <string>	Function.Intrinsic.String.Concat("SELECT JOB, SUFFIX FROM V_JOB_HEADER WHERE JOB = '",V.Screen.f_Main!txtJob.Text,"' AND SUFFIX = '",V.screen.f_Main!txtSuffix.Text,"'",V.Local.sSQL)</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>		F.Intrinsic.Control.CallSub(Loadjobsequences)</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Function.Intrinsic.UI.Msgbox("Invalid Job Selected","Invalid Job")</string>
        <string>		Gui.f_Main.txtJob.Text("")</string>
        <string>		Gui.f_Main.txtSuffix.Text("")</string>
        <string>		Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>		Gui.f_Main.txtJob.SetFocus</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Function.ODBC.conx!rst.Close</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("txtsuffix_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.txtsuffix_lostfocus.End</string>
        <string />
        <string>program.sub.txtrouter_lostfocus.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("txtrouter_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string />
        <string>Function.Intrinsic.Control.If(V.Screen.f_Main!txtRouter.Text,&lt;&gt;,"")</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string />
        <string>	'Clearing job fields</string>
        <string>	Gui.f_Main.txtJob.Text("")</string>
        <string>	Gui.f_Main.txtSuffix.Text("")</string>
        <string>	Gui.f_Main.chkRequisitions.Value(0)</string>
        <string />
        <string>	F.Intrinsic.Control.CallSub(Clearpart)</string>
        <string />
        <string>	Function.Intrinsic.String.Concat("SELECT QUANTITY_1 FROM RTR_PRICE_1_4 WHERE ROUTER ='",V.Screen.f_Main!txtRouter.Text,"'AND ROUTER_TYPE='Q'",V.Local.sSQL)</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>		F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldVal!QUANTITY_1,=,0)</string>
        <string>			Gui.f_Main.txtRouterQty.Text("1")</string>
        <string>		F.Intrinsic.Control.Else</string>
        <string>			Gui.f_Main.txtRouterQty.Text(V.ODBC.CONX!rst.FieldVal!QUANTITY_1)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string />
        <string>		Function.Intrinsic.Control.CallSub(Loadroutersequences)</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Function.Intrinsic.UI.Msgbox("Invalid Router Selected","Invalid Router")</string>
        <string>		Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>		Gui.f_Main.txtRouter.Text("")</string>
        <string>		Gui.f_Main.txtRouterQty.Text("")</string>
        <string>		Gui.f_Main.txtRouter.SetFocus</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Function.ODBC.conx!rst.Close</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("txtrouter_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.txtrouter_lostfocus.End</string>
        <string />
        <string>Program.Sub.LoadRouterSequences.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("LoadRouterSequences_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string>V.Local.fQty.Declare(Float)</string>
        <string />
        <string>Function.Intrinsic.String.Concat("SELECT LINE_ROUTER, PART_WC_OUTSIDE, DESC_RT_LINE, RUN_TIME FROM V_ROUTER_LINE WHERE ROUTER = '",V.Screen.f_Main!txtRouter.Text,"' AND LMO = 'M'",V.Local.sSQL)</string>
        <string>Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>	Function.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.AddListItem(V.ODBC.conx!rst.FieldValTrim!LINE_ROUTER,V.ODBC.conx!rst.FieldValTrim!LINE_ROUTER)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!LINE_ROUTER,1,V.ODBC.conx!rst.FieldValTrim!PART_WC_OUTSIDE)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!LINE_ROUTER,2,V.ODBC.conx!rst.FieldValTrim!DESC_RT_LINE)</string>
        <string>		Function.Intrinsic.Math.Mult(V.SCREEN.f_Main!txtRouterQty.Text,V.ODBC.conx!rst.FieldVal!RUN_TIME,V.Local.fQty)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!LINE_ROUTER,3,V.Local.fQty)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!LINE_ROUTER,4,"")</string>
        <string>		Function.ODBC.conx!rst.MoveNext</string>
        <string>	Function.Intrinsic.Control.Loop</string>
        <string>	Function.ODBC.conx!rst.Close</string>
        <string>Function.Intrinsic.Control.Else</string>
        <string>	Function.ODBC.conx!rst.Close</string>
        <string>	Function.Intrinsic.UI.Msgbox("No material sequences found for this router","No Material Found")</string>
        <string>	Function.Intrinsic.Control.ExitSub</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("LoadRouterSequences_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.LoadRouterSequences.End</string>
        <string />
        <string>program.sub.txtrouterqty_lostfocus.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("txtrouterqty_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>Function.Intrinsic.Control.If(V.Screen.f_Main!txtRouter.Text,&lt;&gt;,"")</string>
        <string>Function.Intrinsic.Control.AndIf(V.Screen.f_Main!txtRouterQty.Text,&gt;,0)</string>
        <string>	Function.Intrinsic.Control.CallSub(Loadroutersequences)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("txtrouterqty_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.txtrouterqty_lostfocus.End</string>
        <string />
        <string>program.sub.chkrequisitions_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("chkrequisitions_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'if the check requisitions checkbox is checked clear several textboxes and call the clear part and load req. subs</string>
        <string>F.Intrinsic.Control.If(V.Screen.f_Main!chkRequisitions.Value,=,1)</string>
        <string />
        <string>	'Clearing Router and job fields</string>
        <string>	Gui.f_Main.txtJob.Text("")</string>
        <string>	Gui.f_Main.txtSuffix.Text("")</string>
        <string>	Gui.f_Main.txtRouter.Text("")</string>
        <string>	Gui.f_Main.txtRouterQty.Text("")</string>
        <string>	Gui.f_Main.txtEndJob.Text("")</string>
        <string>	Gui.f_Main.txtEndSuff.Text("")</string>
        <string />
        <string>	F.Intrinsic.Control.CallSub(Clearpart)</string>
        <string>	F.Intrinsic.Control.CallSub(Loadrequisitions)</string>
        <string />
        <string>F.Intrinsic.Control.Else</string>
        <string>	'clear items in the lvrouterWOseq listview</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("chkrequisitions_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.chkrequisitions_click.End</string>
        <string />
        <string>Program.Sub.LoadRequisitions.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("LoadRequisitions_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst","select (PO_REQ_NUMBER + '-' + PO_REQ_LINE) AS SEQUENCE, PART, DESCRIPTION, QUANTITY, DATE_DUE from v_PURCHASE_REQS")</string>
        <string>Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>	Function.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.AddListItem(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,V.ODBC.conx!rst.FieldValTrim!SEQUENCE)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,1,V.ODBC.conx!rst.FieldValTrim!PART)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,2,V.ODBC.conx!rst.FieldValTrim!DESCRIPTION)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,3,V.ODBC.conx!rst.FieldValTrim!QUANTITY)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,4,V.ODBC.conx!rst.FieldVal!DATE_DUE)</string>
        <string>		Function.ODBC.conx!rst.MoveNext</string>
        <string>	Function.Intrinsic.Control.Loop</string>
        <string>Function.Intrinsic.Control.Else</string>
        <string>	Function.Intrinsic.UI.Msgbox("No open requisitions found","No Reqs Found")</string>
        <string>	Function.Intrinsic.Control.ExitSub</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("LoadRequisitions_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.LoadRequisitions.End</string>
        <string />
        <string>Program.Sub.ClearPart.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("ClearPart_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'clear the textboxes</string>
        <string>Gui.f_Main.txtPart.Text("")</string>
        <string>Gui.f_Main.txtDescription.Text("")</string>
        <string>Gui.f_Main.txtQuantity.Text("")</string>
        <string>Gui.f_Main.txtJob2.Text("")</string>
        <string>Gui.f_Main.txtSuffix2.Text("")</string>
        <string />
        <string>Gui.f_Main.dtpDueDate.Value(V.Ambient.Date)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("ClearPart_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.ClearPart.End</string>
        <string />
        <string>program.sub.cmdbrwpart_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdbrwpart_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string />
        <string>'call the commonbrowser and set the selected information in the part and description text boxes</string>
        <string>Function.Intrinsic.UI.CommonBrowser(105,"",V.Local.sRet)</string>
        <string>Function.Intrinsic.Control.If(V.Local.sRet,&lt;&gt;,"***CANCEL***")</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>	Gui.f_Main.txtPart.Text(V.Local.sRet(0).Trim)</string>
        <string>	Gui.f_Main.txtDescription.Text(V.Local.sRet(2).Trim)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdbrwpart_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdbrwpart_click.End</string>
        <string />
        <string>program.sub.txtpart_lostfocus.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("txtpart_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string />
        <string>Function.Intrinsic.Control.If(V.Screen.f_Main!txtPart.Text,&lt;&gt;,"")</string>
        <string>	Function.Intrinsic.String.Concat("SELECT DESCRIPTION FROM V_INVENTORY_MSTR WHERE PART = '",V.Screen.f_Main!txtPart.Text,"'",V.Local.sSQL)</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>		Gui.f_Main.txtDescription.Text(V.ODBC.conx!rst.FieldValTrim!DESCRIPTION)</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Function.ODBC.conx!rst.Close</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("txtpart_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.txtpart_lostfocus.End</string>
        <string />
        <string>program.sub.lvrouterwoseq_itemclick.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("lvrouterwoseq_itemclick_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.iOrd.Declare(Long)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string>V.Local.sjob.Declare(String)</string>
        <string>V.Local.ssuffix.Declare(String)</string>
        <string>V.Local.sreq.Declare(String)</string>
        <string>V.Local.sjobsuff.Declare(String)</string>
        <string>V.Local.bret.Declare(Boolean)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Screen.f_Main!chkRequisitions.Value,&lt;&gt;,1)</string>
        <string />
        <string>	V.Local.sJob.Set(V.Screen.f_Main!txtJob.Text)</string>
        <string>	V.Local.ssuffix.Set(V.Screen.f_Main!txtSuffix.Text)</string>
        <string />
        <string>	'retrieve selected list item</string>
        <string>	Gui.f_Main.lvRouterWOSeq.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string />
        <string>	V.Local.sText.Set(V.screen.f_Main!lvRouterWOSeq.ListItemTextExtended(V.Local.iOrd))</string>
        <string />
        <string>	Function.Intrinsic.String.Split(V.Local.sText,"*!*",V.Local.sText)</string>
        <string />
        <string>	'set the information that was selected in the textboxes</string>
        <string>	Gui.f_Main.txtPart.Text(V.local.sText(1).Trim)</string>
        <string>	Gui.f_Main.txtDescription.Text(V.Local.sText(2).Trim)</string>
        <string>	Gui.f_Main.txtQuantity.Text(V.Local.sText(3).Trim)</string>
        <string />
        <string>	F.Intrinsic.String.IsInString(V.Local.sText(5),"-",True,V.Local.bret)</string>
        <string />
        <string>	F.Intrinsic.Control.If(V.Local.bret,=,True)</string>
        <string>		F.Intrinsic.String.Split(V.Local.sText(5),"-",V.Local.sjobsuff)</string>
        <string>		Gui.f_Main.txtJob2.Text(V.Local.sjobsuff(0))</string>
        <string>		Gui.f_Main.txtSuffix2.Text(V.Local.sjobsuff(1))</string>
        <string>		Function.Intrinsic.Control.If(V.Local.sText(4).Trim,=,"")</string>
        <string>			Gui.f_Main.dtpDueDate.Value(V.Ambient.Date)</string>
        <string>		Function.Intrinsic.Control.Else</string>
        <string>			Gui.f_Main.dtpDueDate.Value(V.Local.sText(4).Trim)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		Function.Intrinsic.Control.If(V.Local.sText(4).Trim,=,"")</string>
        <string>			Gui.f_Main.dtpDueDate.Value(V.Ambient.Date)</string>
        <string>		Function.Intrinsic.Control.Else</string>
        <string>			Gui.f_Main.dtpDueDate.Value(V.Local.sText(4).Trim)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Screen.f_Main!chkRequisitions.Value,=,1)</string>
        <string />
        <string>	V.Local.sJob.Set(V.Screen.f_Main!txtJob.Text)</string>
        <string>	V.Local.ssuffix.Set(V.Screen.f_Main!txtSuffix.Text)</string>
        <string>	'retrieve selected list item</string>
        <string>	Gui.f_Main.lvRouterWOSeq.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sText.Set(V.screen.f_Main!lvRouterWOSeq.ListItemTextExtended(V.Local.iOrd))</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sText,"*!*",V.Local.sText)</string>
        <string />
        <string>	'set the information that was selected in the textboxes</string>
        <string>	Gui.f_Main.txtPart.Text(V.local.sText(1).Trim)</string>
        <string>	Gui.f_Main.txtDescription.Text(V.Local.sText(2).Trim)</string>
        <string>	Gui.f_Main.txtQuantity.Text(V.Local.sText(3).Trim)</string>
        <string />
        <string>	F.Intrinsic.String.IsInString(V.Local.sText(5),"-",True,V.Local.bret)</string>
        <string />
        <string>	F.Intrinsic.Control.If(V.Local.bret,=,True)</string>
        <string>		F.Intrinsic.String.Split(V.Local.sText(5),"-",V.Local.sjobsuff)</string>
        <string>		Gui.f_Main.txtJob2.Text(V.Local.sjobsuff(0))</string>
        <string>		Gui.f_Main.txtSuffix2.Text(V.Local.sjobsuff(1))</string>
        <string>		'</string>
        <string>		Function.Intrinsic.Control.If(V.Local.sText(4).Trim,=,"")</string>
        <string>			Gui.f_Main.dtpDueDate.Value(V.Ambient.Date)</string>
        <string>		Function.Intrinsic.Control.Else</string>
        <string>			Gui.f_Main.dtpDueDate.Value(V.Local.sText(4).Trim)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.Control.Else</string>
        <string>		Function.Intrinsic.Control.If(V.Local.sText(4).Trim,=,"")</string>
        <string>			Gui.f_Main.dtpDueDate.Value(V.Ambient.Date)</string>
        <string>		Function.Intrinsic.Control.Else</string>
        <string>			Gui.f_Main.dtpDueDate.Value(V.Local.sText(4).Trim)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("lvrouterwoseq_itemclick_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.lvrouterwoseq_itemclick.End</string>
        <string />
        <string>program.sub.cmdaddline_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdaddline_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.sSeq.Declare(String)</string>
        <string>V.Local.iOrd.Declare(Long)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string>V.Local.iC.Declare(Long)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sReq.Declare(String)</string>
        <string />
        <string>'Making sure user has a part selected to add</string>
        <string>Function.Intrinsic.Control.If(V.Screen.f_Main!txtPart.Text,=,"")</string>
        <string>	Function.Intrinsic.UI.Msgbox("Part Number is Required","Required Fields")</string>
        <string>	Function.Intrinsic.Control.ExitSub</string>
        <string>Function.Intrinsic.Control.ElseIf(V.screen.f_Main!txtQuantity.Text,=&lt;,0)</string>
        <string>	Function.Intrinsic.UI.Msgbox("Quantity must be greater than 0","Required Fields")</string>
        <string>	Function.Intrinsic.Control.ExitSub</string>
        <string>Function.Intrinsic.Control.Endif</string>
        <string />
        <string>'Function.Intrinsic.Control.SelectCase(V.Screen.f_Main!ddlType.Text)</string>
        <string />
        <string>Function.Intrinsic.Control.Case("Router")</string>
        <string>	Function.Intrinsic.Control.If(V.Screen.f_Main!txtRouter.Text,=,"")</string>
        <string>		Function.Intrinsic.UI.Msgbox("Router number when using type "Router" is required","Required Fields")</string>
        <string>		Function.Intrinsic.Control.ExitSub</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Gui.f_Main.lvRouterWOSeq.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sSeq.Set(V.Screen.f_Main!lvRouterWOSeq.ListItemText(v.Local.iOrd))</string>
        <string>Function.Intrinsic.Control.Case("Job")</string>
        <string>	Function.Intrinsic.Control.If(V.Screen.f_Main!txtJob.Text,=,"")</string>
        <string>		Function.Intrinsic.UI.Msgbox("Job number when using type "Job" is required","Required Fields")</string>
        <string>		Function.Intrinsic.Control.ExitSub</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	Gui.f_Main.lvRouterWOSeq.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string>	Gui.f_Main.lvRouterWOSeq.ListitemKeyToOrdinal(V.Local.sKey,V.Local.iOrd)</string>
        <string>	V.Local.sSeq.Set(V.Screen.f_Main!lvRouterWOSeq.ListItemText(v.Local.iOrd))</string>
        <string>Function.Intrinsic.Control.Case("Requisition")</string>
        <string>	Function.Intrinsic.Control.If(V.Screen.f_Main!lvRouterWOSeq.SelectedItemKey,&lt;&gt;,"***NORETURN***")</string>
        <string>		Gui.f_Main.lvRouterWOSeq.ListitemKeyToOrdinal(V.Screen.f_Main!lvRouterWOSeq.SelectedItemKey,V.Local.iOrd)</string>
        <string>		V.Local.sReq.Set(V.Screen.f_Main!lvRouterWOSeq.ListItemText(v.Local.iOrd))</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>Function.Intrinsic.Control.EndSelect</string>
        <string />
        <string>'added to see if it preserves UDT</string>
        <string>F.Intrinsic.Control.If(V.Global.iLastNumber,&gt;,0)</string>
        <string>	F.Intrinsic.Math.Add(V.uglobal.uLines.UBound,1,V.Local.iC)</string>
        <string>	V.uGlobal.uLines.RedimPreserve(0,V.Local.iC)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'set the information in the uLines UDT</string>
        <string>V.uglobal.uLines(v.Local.iC)!Part.Set(V.Screen.f_Main!txtPart.Text)</string>
        <string>V.uGlobal.uLines(v.Local.iC)!Description.Set(V.Screen.f_Main!txtDescription.Text)</string>
        <string>V.uGlobal.uLines(v.Local.iC)!Qty.Set(V.Screen.f_Main!txtQuantity.Text)</string>
        <string>V.uglobal.uLines(v.Local.iC)!Router.Set(V.Screen.f_Main!txtRouter.Text)</string>
        <string>V.uGlobal.uLines(v.Local.iC)!Job.Set(V.Screen.f_Main!txtJob2.Text)</string>
        <string>V.uGlobal.uLines(v.Local.iC)!Suffix.Set(V.Screen.f_Main!txtSuffix2.Text)</string>
        <string>V.uGlobal.uLines(v.Local.iC)!Sequence.Set(V.Local.sSeq.Trim)</string>
        <string>V.uglobal.uLines(v.Local.iC)!DueDate.Set(V.Screen.f_Main!dtpDueDate.Value)</string>
        <string />
        <string>Function.Intrinsic.Control.CallSub(Loadlinesgrid)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>	F.Intrinsic.Control.Label("cmdaddline_click_Err")</string>
        <string>	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>		Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdaddline_click.End</string>
        <string />
        <string>program.sub.cmdbrwjob2_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdbrwjob2_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sret.Declare(String)</string>
        <string>V.Local.stitles.Declare(String)</string>
        <string>V.Local.iwidths.Declare(Long)</string>
        <string />
        <string>F.Intrinsic.string.Split("Job*!*Suffix*!*Description*!*PartNumber*!*Rev","*!*",V.local.stitles)</string>
        <string>'F.Intrinsic.string.Split("Job*!*Suffix*!*Description*!*PartNumber","*!*",V.local.stitles)</string>
        <string>'F.Intrinsic.String.Split("1800*!*1500*!*3000*!*1000","*!*",V.Local.iwidths)</string>
        <string>F.Intrinsic.String.Split("1800*!*1500*!*3000*!*1000*!*500","*!*",V.Local.iwidths)</string>
        <string />
        <string>'F.ODBC.Connection!conxx.OpenConnection("Global_PLA","Master","master")</string>
        <string>'F.intrinsic.ui.Browser("Select a job","conx","SELECT JOB AS Job, SUFFIX AS Suffix, DESCRIPTION AS Description, SUBSTRING (PART,1,17) AS PartNumber FROM V_JOB_HEADER WHERE JOB &gt; '' ORDER BY Job, Suffix",V.Local.stitles,V.Local.iwidths,V.Local.sRet)</string>
        <string>F.intrinsic.ui.Browser(" Select a job","conx","SELECT JOB AS Job, SUFFIX AS Suffix, DESCRIPTION AS Description, SUBSTRING(PART,1,17) AS PartNumber, SUBSTRING(PART,18,3) as REV FROM V_JOB_HEADER WHERE JOB &gt; '' ORDER BY Job, Suffix",V.Local.stitles,V.Local.iwidths,V.Local.sRet)</string>
        <string />
        <string>'F.Intrinsic.String.Split("Work Order*!*Suffix*!*Part*!*Description","*!*",V.Local.stitles)</string>
        <string>'F.Intrinsic.String.Split("1600*!*1000*!*1800*!*2300","*!*",V.Local.iwidths)</string>
        <string>'F.ODBC.Connection!con.OpenConnection("Global_PLA","Master","master")</string>
        <string>'F.Intrinsic.UI.Browser("Select a job","con","Select Job, Suffix, Part, Description from V_JOB_HEADER where JOB_TYPE &lt;&gt; 'L'",V.Local.stitles,V.Local.iwidths,V.Local.sRet)</string>
        <string>F.Intrinsic.Control.If(V.Local.sRet,=,"***CANCEL***")</string>
        <string>	F.Intrinsic.UI.Msgbox("No job was selected")</string>
        <string>'	F.ODBC.Connection!conxx.Close</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>'call the comman browser</string>
        <string>'Function.Intrinsic.UI.CommonBrowser(1000,"",V.Local.sRet)</string>
        <string>Function.Intrinsic.Control.elseIf(V.Local.sRet,&lt;&gt;,"***CANCEL***")</string>
        <string />
        <string>	'when a selection is made fill in the ending job and suffix textboxes</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>	Gui.f_Main.txtJob2.Text(V.Local.sret(0).Trim)</string>
        <string>	Gui.f_Main.txtSuffix2.Text(V.Local.sRet(1).Trim)</string>
        <string>'	F.ODBC.Connection!conxx.Close</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdbrwjob2_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdbrwjob2_click.End</string>
        <string />
        <string>program.sub.f_docs_unload.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("f_docs_unload_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'closes the form</string>
        <string>Gui.f_Docs..Visible(false)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("f_docs_unload_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.f_docs_unload.End</string>
        <string />
        <string>program.sub.cmdadddoc_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdadddoc_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.iUB.Declare(Long)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string />
        <string>'Making sure user has a file path selected</string>
        <string>Function.Intrinsic.Control.If(V.Screen.f_Docs!txtdocpath.Text,=,"")</string>
        <string>	Function.Intrinsic.UI.Msgbox("Document Path Required","Required Fields")</string>
        <string>	Function.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Check to see if 0 index in UDT is filled, if so then keep increasing</string>
        <string>F.Intrinsic.Control.If(V.uGlobal.uDocuments(0)!uDocuments.Trim,&lt;&gt;,"")</string>
        <string>	F.Intrinsic.Math.Add(V.uGlobal.uDocuments.UBound,1,V.Local.iUB)</string>
        <string>	V.uGlobal.uDocuments.RedimPreserve(0,V.Local.iUB)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'add 1 to the global variable, keep line count with global variable, add textg from docpath to listview</string>
        <string>F.Intrinsic.Math.Add(V.global.iKey,1,V.global.iKey)</string>
        <string>Gui.f_Docs.lvDocs.AddListItem(V.Global.iKey,V.Global.iKey)</string>
        <string>Gui.f_Docs.lvDocs.SetListItemSubItemText(V.Global.iKey,1,V.Screen.f_Docs!txtdocpath.Text)</string>
        <string>'Add to UDT uDocuments</string>
        <string>V.uGlobal.uDocuments(v.Local.iUB)!uDocuments.Set(V.Screen.f_Docs!txtdocpath.Text)</string>
        <string />
        <string>'clear the document path text</string>
        <string>Gui.f_Docs.txtdocpath.Text("")</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdadddoc_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string />
        <string>program.sub.cmdadddoc_click.End</string>
        <string />
        <string>program.sub.cmdremovedoc_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdremovedoc_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'delete what is selected in the document listview</string>
        <string>V.Local.iKey.Declare(Long)</string>
        <string>V.Local.iOrd.Declare(Long)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string />
        <string>V.Local.iKey.Set(V.Screen.f_Docs!lvDocs.SelectedItemKey)</string>
        <string>Gui.f_Docs.lvDocs.ListitemKeyToOrdinal(V.Local.iKey,V.Local.iOrd)</string>
        <string>V.Local.sRet.Set(V.Screen.f_Docs!lvDocs.ListItemTextExtended(v.Local.iOrd))</string>
        <string>F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string />
        <string>'remove from udt</string>
        <string>F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uDocuments!uDocuments,V.Local.sRet(1).Trim)</string>
        <string>F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uDocuments)</string>
        <string />
        <string>'remove from list</string>
        <string>Gui.f_Docs.lvDocs.RemoveItem(V.Local.iKey)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdremovedoc_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_docs_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string />
        <string>program.sub.cmdremovedoc_click.End</string>
        <string />
        <string>program.sub.cmdclear_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdclear_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'clears the document listview</string>
        <string>Gui.f_Docs.lvDocs.ClearItems</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdclear_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdclear_click.End</string>
        <string />
        <string>program.sub.cmddocbrowse_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmddocbrowse_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'DECLARE VARIABLES</string>
        <string />
        <string>V.Local.iRet.Declare(Long)</string>
        <string />
        <string>'get file path for document and then attach automatically without going through doc control screen</string>
        <string>'invoke open file dialogue</string>
        <string>V.Local.sFile.Declare(String)</string>
        <string />
        <string>'Browse for file to upload from</string>
        <string>F.Intrinsic.UI.ShowOpenFileDialog("","",,V.Local.sFile)</string>
        <string>F.Intrinsic.Control.If(V.Local.sFile,&lt;&gt;,"***CANCEL***")</string>
        <string>'set textbox to sFile</string>
        <string>Gui.f_Docs.txtdocpath.Text(V.Local.sfile.Trim)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmddocbrowse_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmddocbrowse_click.End</string>
        <string />
        <string>program.sub.cmdreqbrowse_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdreqbrowse_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>'declaration of variables</string>
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sret.Declare(String)</string>
        <string>V.Local.stemp.Declare(String)</string>
        <string>V.Local.sTitles.Declare(String)</string>
        <string>V.Local.iwidths.Declare(Long)</string>
        <string>V.Local.sreturn.Declare(String)</string>
        <string />
        <string>'set the titles and widths for the browser</string>
        <string>F.Intrinsic.String.Split("Sequence*!*Suffix*!*Part*!*Description","*!*",V.Local.sTitles)</string>
        <string>F.Intrinsic.String.Split("1500*!*1500*!*1500*!*5000","*!*",V.Local.iwidths)</string>
        <string />
        <string>'create browser for requisitions</string>
        <string>Function.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass,1200)</string>
        <string>F.Intrinsic.UI.Browser("Select a Sequence","con","Select SEQ, SUFFIX, PART, DESCRIPTION  from V_JOB_OPERATIONS where  SEQ &lt; 990000 Order By SEQ",V.Local.sTitles,V.Local.iwidths,V.Local.sret)</string>
        <string>Function.ODBC.Connection!con.Close</string>
        <string />
        <string>Function.Intrinsic.Control.If(V.Local.sRet,&lt;&gt;,"***CANCEL***")</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>F.Intrinsic.String.Concat(V.Local.sret(0).Trim,"-",V.Local.sret(1).Trim,V.Local.sreturn)</string>
        <string />
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdreqbrowse_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdreqbrowse_click.End</string>
        <string />
        <string>Program.Sub.ReadExportFile.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("ReadExportFile_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>'declare local variables</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.iret.Declare(Long)</string>
        <string>V.Local.sseq.Declare(String)</string>
        <string>V.Local.sid.declare(String)</string>
        <string>V.Local.irowcount.Declare(Long)</string>
        <string>V.local.sret.Declare(String)</string>
        <string>V.Local.ireturn.Declare(Long)</string>
        <string>V.Local.stemp.Declare(String)</string>
        <string>V.Local.sfinal.Declare(String)</string>
        <string>V.Local.iret2.Declare(Long)</string>
        <string>V.Local.bExists.Declare(Boolean)</string>
        <string />
        <string>V.Local.iret.Set(1)</string>
        <string>V.Local.iret2.Set(7)</string>
        <string />
        <string>F.Intrinsic.String.Build("{0}\{1}{2}000UPLVENQPEXPORT000000001.TMP",v.caller.localgsstempdir,V.Caller.User.trim,V.Caller.Terminal,V.Local.stemp)</string>
        <string />
        <string>F.Intrinsic.File.Exists(V.Local.stemp,V.Local.bExists)</string>
        <string>'Only do the following if the file exists</string>
        <string>F.Intrinsic.Control.If(V.Local.bExists,=,True)</string>
        <string>	Function.Intrinsic.File.file2string(V.local.stemp,V.local.sfinal)</string>
        <string />
        <string>	F.Intrinsic.string.Split(V.local.sfinal,V.Ambient.NewLine,V.Local.sfinal)</string>
        <string />
        <string>	'loop through vendors</string>
        <string>	'F.Intrinsic.Control.For(V.Local.ivendcount,V.uGlobal.uContacts.LBound,V.uGlobal.uContacts.ubound,1)</string>
        <string />
        <string>	F.Intrinsic.control.For(V.Local.i,V.Local.iret2,V.Local.sfinal.UBound,1)</string>
        <string />
        <string>		V.Local.sret.Set(V.Local.sfinal(v.Local.iret2))</string>
        <string>		F.Intrinsic.Control.If(V.Local.sret,&lt;&gt;,"")</string>
        <string>			F.Intrinsic.String.Split(V.Local.sret,"|~|",V.Local.sret)</string>
        <string />
        <string>			V.Global.sSeq.Set(V.Local.sret(1))</string>
        <string>			F.Intrinsic.Math.Add(V.Local.iret2,1,V.Local.iret2)</string>
        <string>			F.Intrinsic.Control.If(V.Global.sSeq2,=,"")</string>
        <string />
        <string>				F.Intrinsic.String.Build("{0}",V.Global.sSeq,V.Global.sSeq2)</string>
        <string>		</string>
        <string>			F.Intrinsic.Control.Else</string>
        <string />
        <string>				F.Intrinsic.String.Build("{0}*!*{1}",V.Global.sSeq2,V.global.sseq,V.Global.sSeq2)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string />
        <string>			F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>		F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	F.Intrinsic.String.Split(V.Global.sSeq2,"*!*",V.Global.sSeq2)</string>
        <string />
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("ReadExportFile_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.ReadExportFile.End</string>
        <string />
        <string>program.sub.cmdbrwending_click.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdbrwending_click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>V.Local.sret.Declare(String)</string>
        <string />
        <string>V.Local.sSql.Declare(String)</string>
        <string>V.Local.fJobQty.Declare(Float)</string>
        <string>V.Local.fQty.Declare(Float)</string>
        <string>V.Local.swo.Declare(String)</string>
        <string>V.Local.sewo.Declare(String)</string>
        <string>V.Local.icount.Declare(Long)</string>
        <string>V.local.sjob.Declare(String)</string>
        <string>V.Local.ssuffix.Declare(String)</string>
        <string>V.Local.stitles.Declare(String)</string>
        <string>V.Local.iwidths.Declare(Long)</string>
        <string />
        <string>V.Local.icount.Set(0)</string>
        <string />
        <string>F.Intrinsic.string.Split("Job*!*Suffix*!*Description*!*PartNumber*!*Rev","*!*",V.local.stitles)</string>
        <string>F.Intrinsic.String.Split("1800*!*1500*!*3000*!*1000*!*500","*!*",V.Local.iwidths)</string>
        <string>F.intrinsic.ui.Browser(" Select a job","conx","SELECT JOB AS Job, SUFFIX AS Suffix, DESCRIPTION AS Description, SUBSTRING(PART,1,17) AS PartNumber, SUBSTRING(PART,18,3) as REV FROM V_JOB_HEADER WHERE JOB &gt; '' ORDER BY Job, Suffix",V.Local.stitles,V.Local.iwidths,V.Local.sRet)</string>
        <string />
        <string>'common browser</string>
        <string>'F.Intrinsic.string.Split("Job*!*Suffix*!*Description*!*PartNumber","*!*",V.local.stitles)</string>
        <string>'F.Intrinsic.String.Split("1800*!*1500*!*3000*!*1000","*!*",V.Local.iwidths)</string>
        <string>'F.ODBC.Connection!con.OpenConnection("Global_PLA","Master","master")</string>
        <string>'F.intrinsic.ui.Browser("Select a job","con","SELECT JOB AS Job, SUFFIX AS Suffix, DESCRIPTION AS Description, SUBSTRING (PART,1,17) AS PartNumber FROM V_JOB_HEADER WHERE JOB &gt; '' ORDER BY Job, Suffix",V.Local.stitles,V.Local.iwidths,V.Local.sRet)</string>
        <string />
        <string>Function.Intrinsic.Control.If(V.Local.sRet,&lt;&gt;,"***CANCEL***")</string>
        <string />
        <string>	'Clearing router</string>
        <string>	Gui.f_Main.txtRouter.Text("")</string>
        <string>	Gui.f_Main.txtRouterQty.Text("")</string>
        <string>	Gui.f_Main.chkRequisitions.Value(0)</string>
        <string />
        <string>	'call the clearpart sub</string>
        <string>	F.Intrinsic.Control.CallSub(Clearpart)</string>
        <string>	'split the job and suffix for ending job and suff</string>
        <string>	Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>	Gui.f_Main.txtEndJob.Text(V.Local.sRet(0).Trim)</string>
        <string>	Gui.f_Main.txtEndSuff.Text(V.Local.sRet(1).Trim)</string>
        <string />
        <string>	F.Intrinsic.String.Build("SELECT SEQ, PART, JOB, SUFFIX, DESCRIPTION, UNITS, DATE_DUE FROM V_JOB_OPERATIONS WHERE JOB  BETWEEN '{0}' AND '{1}' AND SUFFIX BETWEEN '{2}' AND '{3}' AND LMO = 'M' AND SEQ &lt; 990000 Order By SEQ",V.Screen.f_Main!txtJob.Text,V.Screen.f_Main!txtEndJob.Text,V.Screen.f_Main!txtSuffix.Text,V.Screen.f_Main!txtEndSuff.Text,V.Local.sSql)</string>
        <string>	'open connection and clear items in the list view</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string />
        <string>		Function.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)</string>
        <string />
        <string>		V.Local.sjob.Set(V.ODBC.conx(v.Local.icount)!rst.FieldValtrim!JOB)</string>
        <string>		V.Local.ssuffix.Set(V.ODBC.conx(v.Local.icount)!rst.FieldValtrim!SUFFIX)</string>
        <string>		F.Intrinsic.String.Concat(V.local.sjob,"-",V.local.ssuffix,V.Local.sjob)</string>
        <string />
        <string>		Gui.f_Main.lvRouterWOSeq.AddListItem(V.local.icount,V.ODBC.conx!rst.FieldValTrim!SEQ)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.local.icount,1,V.ODBC.conx!rst.FieldValTrim!PART)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.local.icount,2,V.ODBC.conx!rst.FieldValTrim!DESCRIPTION)</string>
        <string>	'</string>
        <string>		Function.Intrinsic.String.Concat("SELECT JOB, SUFFIX, QTY_ORDER FROM V_JOB_HEADER WHERE JOB = '",V.Screen.f_Main!txtJob.Text,"' AND SUFFIX = '",V.Screen.f_Main!txtSuffix.Text,"'",V.Local.sSQL)</string>
        <string>		Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTY",V.Local.sSQL)</string>
        <string />
        <string>		V.Local.fJobQty.Set(V.ODBC.conx!rstQTY.FieldVal!QTY_ORDER)</string>
        <string />
        <string>		Function.Intrinsic.Math.Mult(V.Local.fJobQty,V.ODBC.conx!rst.FieldVal!UNITS,V.Local.fQty)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.Local.icount,3,V.Local.fQty)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.local.icount,4,V.ODBC.conx!rst.FieldVal!DATE_DUE)</string>
        <string />
        <string>	'	F.Intrinsic.String.Concat(V.local.sjob,"-",V.local.ssuffix,V.Local.sjob)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.local.icount,5,V.local.sjob)</string>
        <string>		Function.ODBC.conx!rstQTY.Close</string>
        <string />
        <string>		F.Intrinsic.Math.Add(V.Local.icount,1,V.Local.icount)</string>
        <string />
        <string>			Function.ODBC.conx!rst.MoveNext</string>
        <string>		Function.Intrinsic.Control.Loop</string>
        <string>		Function.ODBC.conx!rst.Close</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Function.ODBC.conx!rst.Close</string>
        <string>		Function.Intrinsic.UI.Msgbox("No material sequences found for this job","No Material Found")</string>
        <string>		Function.Intrinsic.Control.ExitSub</string>
        <string>'		F.ODBC.Connection!con.Close</string>
        <string />
        <string>F.Intrinsic.control.ElseIf(V.local.sret,=,"***CANCEL***")</string>
        <string>F.Intrinsic.UI.Msgbox("No job was selected")</string>
        <string>'	F.ODBC.Connection!con.Close</string>
        <string>		F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'		F.ODBC.Connection!con.Close</string>
        <string>'		F.ODBC.connection!conx.Close</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string />
        <string>F.Intrinsic.Control.Label("cmdbrwending_click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_docs_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.cmdbrwending_click.End</string>
        <string />
        <string>program.sub.txtjob_lostfocus.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("txtjob_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("txtjob_lostfocus_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.txtjob_lostfocus.End</string>
        <string />
        <string>Program.Sub.LoadNoClear.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("LoadNoClear_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>V.Local.sKey.Declare(String)</string>
        <string>V.Local.iOrd.Declare(String)</string>
        <string>V.Local.sText.Declare(String)</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.sKeyNew.Declare(String,"0")</string>
        <string />
        <string>V.Local.icount.Declare(Long)</string>
        <string>V.Local.sloop.Declare(String)</string>
        <string>V.Local.iordinal.Declare(Long)</string>
        <string>V.Local.srange.Declare(String)</string>
        <string>V.Local.sname.Declare(String)</string>
        <string>V.Local.semail.Declare(String)</string>
        <string>V.Local.icount2.Declare(Long)</string>
        <string>V.Local.srange2.Declare(Long)</string>
        <string>V.Local.iloopcount.Declare(Long)</string>
        <string>V.Local.inamecount.Declare(Long)</string>
        <string>V.Local.iemailcount.Declare(Long)</string>
        <string>V.Local.svendor.Declare(String)</string>
        <string>V.Local.sname2.Declare(String)</string>
        <string>V.Local.iselect.Declare(Long)</string>
        <string />
        <string>'clears items in the available contacts list</string>
        <string>Gui.f_Main.lvAvailContacts.ClearItems</string>
        <string />
        <string>Gui.f_Main.lvSelVendors.RetrieveSelectedListitems(V.Local.sKey)</string>
        <string />
        <string>'loop through the contacts if the contact is false load them in the available contact listview</string>
        <string>Function.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uContacts!VENDOR,V.Local.sKey,V.uGlobal.uContacts!Selected,False,V.Local.sRet)</string>
        <string>Function.Intrinsic.Control.If(V.Local.sRet,&lt;&gt;,"")</string>
        <string>	    Function.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>    Function.Intrinsic.Control.For(V.Local.i,0,V.Local.sRet.UBound,1)</string>
        <string>        Gui.f_Main.lvAvailContacts.AddListItem(V.Local.sKeyNew,V.uGlobal.uContacts(v.Local.sRet(v.Local.i))!NAME)</string>
        <string>        Gui.f_Main.lvAvailContacts.SetListItemSubItemText(V.Local.sKeyNew,1,V.uGlobal.uContacts(V.Local.sRet(v.Local.i))!EMAIL)</string>
        <string>        Gui.f_Main.lvAvailContacts.SetListItemSubItemText(V.Local.sKeyNew,2,V.uGlobal.uContacts(V.Local.sRet(v.Local.i))!ID)</string>
        <string>        Function.Intrinsic.Math.Add(V.Local.sKeyNew,1,V.Local.sKeyNew)</string>
        <string>    Function.Intrinsic.Control.Next(V.Local.i)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Make Sure to add to existing contacts in selected list</string>
        <string>Gui.f_Main.lvlSelContacts.RetrieveAllListItems(V.Local.sRet)</string>
        <string>F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)</string>
        <string>V.Local.sKeyNew.Set(V.Local.sRet(v.local.sRet.UBound))</string>
        <string />
        <string>V.Local.sRet.Redim(0,0)</string>
        <string />
        <string>'Adding selection to selected email contacts if they are listed as True in the uContacts UDT</string>
        <string>Function.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uContacts!VENDOR,V.local.skey,V.uGlobal.uContacts!Selected,True,V.local.sret)</string>
        <string />
        <string>'clear the selectedcontacts LV to add new selected contacts</string>
        <string>Gui.f_Main.lvlSelContacts.ClearItems</string>
        <string />
        <string>F.Intrinsic.control.For(V.Local.icount,V.uGlobal.uContacts.LBound,V.uGlobal.uContacts.UBound,1)</string>
        <string>			F.Intrinsic.Control.If(V.uGlobal.uContacts(V.Local.i)!Selected,=,True)</string>
        <string>	        Gui.f_Main.lvlSelContacts.AddListItem(V.local.skeynew,V.uGlobal.uContacts(v.local.sret(v.local.i))!NAME)</string>
        <string>	        Gui.f_Main.lvlSelContacts.SetListItemSubItemText(V.local.skeynew,1,V.uGlobal.uContacts(v.local.sret(v.local.i))!EMAIL)</string>
        <string>	        Gui.f_Main.lvlSelContacts.SetListItemSubItemText(V.local.skeynew,2,V.uGlobal.uContacts(v.local.sret(v.local.i))!ID)</string>
        <string>F.intrinsic.control.endif</string>
        <string />
        <string>F.Intrinsic.Control.Next(V.Local.i)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string />
        <string>F.Intrinsic.Control.Label("LoadNoClear_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.LoadNoClear.End</string>
        <string />
        <string>Program.Sub.BuildRFQReport.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("BuildRFQReport_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sfilename.Declare(String)</string>
        <string>V.Local.sfilename.Set("RFQ Report")</string>
        <string>V.Local.sfilepath.Declare(String)</string>
        <string>V.Local.bfileexists.Declare(Boolean)</string>
        <string>V.Local.sterminal.Declare(String)</string>
        <string>V.Local.sreportid.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.sreportssql.Declare(String)</string>
        <string>V.Local.i2.Declare(Long)</string>
        <string>V.Local.ssql.Declare(String)</string>
        <string>V.Local.spn.Declare(String)</string>
        <string>V.Local.spv.Declare(String)</string>
        <string>V.Local.scheck.Declare(String)</string>
        <string>V.Local.i3.Declare(Long)</string>
        <string>V.Local.icontactscounter.Declare(Long)</string>
        <string>V.Local.icontactscheck.Declare(Long)</string>
        <string>V.Local.iret.Declare(Long)</string>
        <string>V.Local.ikeytest.Declare(Long)</string>
        <string>V.Local.ilong.Declare(Long)</string>
        <string>V.Local.ireport.Declare(Long)</string>
        <string />
        <string>V.Local.sdate.Declare(String)</string>
        <string>V.Local.stime.Declare(String)</string>
        <string>V.Local.sRFQDate.Declare(String)</string>
        <string>V.Local.sreplydate.Declare(String)</string>
        <string>V.Local.sreqdate.Declare(String)</string>
        <string>V.Local.sreportname.Declare(String)</string>
        <string />
        <string>'V.Local.sreqdate.Set(V.Screen.f_Main!dtpDueDate.Value)</string>
        <string>'F.Intrinsic.string.format(V.Local.sReqdate,"MMDDYY",V.Local.sReqdate)</string>
        <string />
        <string>V.Local.sreplydate.Set(V.Screen.f_Main!dtpReplyBy.Value)</string>
        <string>F.Intrinsic.string.format(V.Local.sReplydate,"MMDDYY",V.Local.sReplydate)</string>
        <string />
        <string>V.Local.sRFQDate.Set(V.Ambient.Date)</string>
        <string>F.Intrinsic.string.format(V.Local.sRFQdate,"MMDDYY",V.Local.sRFQdate)</string>
        <string />
        <string>V.Local.sdate.Set(V.Ambient.Date)</string>
        <string />
        <string>'format date</string>
        <string>F.Intrinsic.String.Format(V.Ambient.Date,"MMDDYYYY",V.Local.sDate)</string>
        <string>F.Intrinsic.String.Build("{0}-{1}",V.Local.sDate,V.Ambient.Time,V.Local.sDate)</string>
        <string>F.Intrinsic.String.Replace(V.Local.sDate,":","",V.Local.sDate)</string>
        <string>V.Global.sTimeDate.Set(V.Local.sdate)</string>
        <string />
        <string>'set the sterminal local variable to the terminal</string>
        <string>V.Local.sterminal.Set(V.Caller.Terminal)</string>
        <string>V.Local.sreportid.Set("002807")</string>
        <string />
        <string>'loop through the uContacts UDT</string>
        <string>F.Intrinsic.Control.For(V.Local.i,V.uGlobal.uContacts.LBound,V.uGlobal.uContacts.UBound,1)</string>
        <string />
        <string>'	V.local.sreqdate.set(V.uGlobal.uLines(v.Local.i)!DueDate)</string>
        <string>'	F.Intrinsic.string.format(V.Local.sReqdate,"MMDDYY",V.Local.sReqdate)</string>
        <string>	F.Intrinsic.String.Build("{0}\{1}",V.Caller.BusintDir,"PU_RequestForQuote_Rev01.rpt",V.Local.sreportname)</string>
        <string />
        <string />
        <string>	'build the report filepath and check if it exists, if so delete it</string>
        <string>	F.Intrinsic.String.Build("{0}\{1}\{2}\{3}{4}{5}",V.Caller.FilesDir,"RFQ","Export",V.uGlobal.uContacts(v.Local.i)!VENDOR,V.local.sdate,".pdf",V.Local.sfilename)</string>
        <string>	F.Intrinsic.file.exists(V.local.sfilename,V.local.bfileexists)</string>
        <string>	F.Intrinsic.Control.If(V.Local.bfileexists,=,True)</string>
        <string>		F.Intrinsic.File.Deletefile(V.Local.sfilename)</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string />
        <string>	'redim the RFQ UDT</string>
        <string>	V.uGlobal.uRFQ.Redim(0,V.uGlobal.uLines.UBound)</string>
        <string>	</string>
        <string>	F.Intrinsic.Control.For(V.Local.i2,V.uGlobal.uLines.LBound,V.uGlobal.uLines.UBound,1)</string>
        <string>		V.local.sreqdate.set(V.uGlobal.uLines(v.Local.i2)!DueDate)</string>
        <string>		F.Intrinsic.string.format(V.Local.sReqdate,"MMDDYY",V.Local.sReqdate)</string>
        <string>		V.uGlobal.uRFQ(v.local.i2)!VENDOR.Set(V.uGlobal.uContacts(v.Local.i)!VENDOR)</string>
        <string>		V.uGlobal.uRFQ(v.Local.i2)!TRMNL_NO.Set(V.Local.sterminal)</string>
        <string>		V.uGlobal.uRFQ(v.Local.i2)!RPTID.Set(V.Local.sreportid)</string>
        <string>		V.uGlobal.uRFQ(v.Local.i2)!DESCR.Set(V.uGlobal.uLines(v.Local.i2)!Description)</string>
        <string>		V.uglobal.uRFQ(v.local.i2)!LINE.set(V.uglobal.ulines(v.local.i2)!line)</string>
        <string>		V.uglobal.uRFQ(v.local.i2)!PART.set(V.uglobal.ulines(v.local.i2)!Part)</string>
        <string>		V.uGlobal.uRFQ(v.Local.i2)!QTY.Set(V.uGlobal.uLines(v.Local.i2)!Qty)</string>
        <string>		V.uGlobal.uRFQ(v.Local.i2)!REPLY_NAME.Set(V.uGlobal.uContacts(v.Local.i)!NAME)</string>
        <string>		V.uGlobal.uRFQ(v.Local.i2)!REPLY_EMAIL.Set(V.uGlobal.uContacts(v.Local.i)!EMAIL)</string>
        <string>		V.uGlobal.uRFQ(v.Local.i2)!REPLY_DATE.Set(V.Local.sReplyDate)</string>
        <string />
        <string>		'setting a fake RFQ number for the time being</string>
        <string>		V.uGlobal.uRFQ(v.Local.i2)!RFQ_NUM.Set("")</string>
        <string>		V.uGlobal.uRFQ(v.Local.i2)!RFQ_DATE.Set(V.Local.sRFQDate)</string>
        <string>		V.uGlobal.uRFQ(v.Local.i2)!REQD_DATE.Set(V.local.sreqdate)</string>
        <string>		</string>
        <string>		'get the Unit or the uRFQ UDT</string>
        <string>		F.Intrinsic.String.Build(" SELECT UM_INVENTORY from INVENTORY_MSTR where PART = '{0}'",V.uGlobal.uLines(v.Local.i2)!Part,V.Local.ssql)</string>
        <string>		F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.ssql)</string>
        <string>		F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!UNIT.Set(V.ODBC.conx!rst.FieldValTrim!UM_INVENTORY)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>		F.ODBC.conx!rst.Close</string>
        <string>		</string>
        <string>		'query for and set other variables in the u RFQ UDT</string>
        <string>		F.Intrinsic.string.Build("Select NAME_VENDOR, ADDRESS1, ADDRESS2, CITY, STATE, CODE_ZIP, COUNTRY, ATTENTION from VENDOR_MASTER where VENDOR = '{0}'",V.uGlobal.uRFQ(v.Local.i2)!VENDOR,V.Local.ssql)</string>
        <string>		F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.ssql)</string>
        <string>		F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!VEN_NAME_OUT.Set(V.ODBC.conx!rst.FieldValTrim!NAME_VENDOR)</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!VEN_ADDS_1.Set(V.ODBC.conx!rst.FieldValTrim!ADDRESS1)</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!VEN_ADDS_2.Set(V.ODBC.conx!rst.FieldValTrim!ADDRESS2)</string>
        <string />
        <string>			'ADDRESS 3, 4, AND 5, FAX TITLE AND REPLY DATE/REPLY FAX???</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!VEN_ADDS_3.Set("")</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!ven_ADDS_4.Set("")</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!VEN_ADDS_5.Set("")</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!FAX_TITLE.Set("Fax:")</string>
        <string>'			V.uGlobal.uRFQ(v.Local.i2)!REPLY_DATE.Set("")</string>
        <string>			V.uGlobal.uRFQ(V.Local.i2)!REPLY_FAX.Set("")</string>
        <string>			'run some tests with key sequence</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!KEY_SEQ.Set(V.Local.ikeytest)</string>
        <string>			F.Intrinsic.Math.Add(V.Local.ikeytest,1,V.Local.ikeytest)</string>
        <string>'				V.uGlobal.uRFQ(v.Local.i2)!RFQ_NUM.Set("1234")</string>
        <string />
        <string>			V.uGlobal.uRFQ(v.Local.i2)!VEN_CITY.Set(V.ODBC.conx!rst.FieldValTrim!CITY)</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!VEN_STATE.Set(V.ODBC.conx!rst.FieldValTrim!STATE)</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!VEN_COUNTRY.Set(V.ODBC.conx!rst.FieldValTrim!COUNTRY)</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!ATTN.Set(V.ODBC.conx!rst.FieldValTrim!ATTENTION)</string>
        <string>	</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>		F.ODBC.conx!rst.close</string>
        <string />
        <string>		'get the fax number for the uRFQ UDT</string>
        <string>		F.Intrinsic.String.build("select BUY_FAX from VEND_MSTR_ADDL where VEND_NO = '{0}'",V.uglobal.uRFQ(v.Local.i2)!VENDOR,V.Local.ssql)</string>
        <string>		F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.ssql)</string>
        <string>		F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>			V.uGlobal.uRFQ(v.Local.i2)!VEN_FAX_OUT.Set(V.ODBC.conx!rst.FieldValTrim!BUY_FAX)</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>		F.ODBC.conx!rst.close</string>
        <string />
        <string>	F.Intrinsic.Control.Next(V.Local.i2)</string>
        <string />
        <string>	F.Intrinsic.String.Build("DELETE from LASER_RFQ where TRMNL_NO = '{0}' and RPTID = '{1}'",V.Local.sterminal,V.Local.sreportid,V.Local.ssql)</string>
        <string>	F.ODBC.Connection!conx.Execute(V.Local.ssql)</string>
        <string>	'run/save the report</string>
        <string>	F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM LASER_RFQ")</string>
        <string>'	F.ODBC.conx!rst.Close</string>
        <string>	V.Local.spn.Set("Terminal*!*REPORTID*!*Signature*!*Logo")</string>
        <string>	F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Caller.Terminal,V.Local.sreportid,"","",V.Local.spv)</string>
        <string>	F.Intrinsic.String.Split(V.Local.spn,"*!*",V.Local.spn)</string>
        <string>	F.Intrinsic.String.Split(V.Local.spv,"*!*",V.Local.spv)</string>
        <string>	f.Intrinsic.Variable.saveUDTtoRecordset("conx","rst","v.uGlobal.uRFQ")</string>
        <string>	F.Global.BI.InitializeReport("Custom RFQ Report",V.Local.sreportname,V.Local.ireport)</string>
        <string>	F.Global.BI.SaveReport(V.Local.ireport,1,V.Local.spn,V.Local.spv,V.Local.sfilename)</string>
        <string>'	F.Global.BI.SaveReport(002807,1,V.Local.spn,V.Local.spv,V.Local.sfilename)</string>
        <string />
        <string>	F.ODBC.conx!rst.Close</string>
        <string>F.intrinsic.Control.next(V.Local.i)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("BuildRFQReport_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.BuildRFQReport.End</string>
        <string />
        <string>program.sub.lvrouterwoseq_columnclick.start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("lvrouterwoseq_columnclick_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>V.Local.sSql.Declare(String)</string>
        <string>V.Local.fJobQty.Declare(Float)</string>
        <string>V.Local.fQty.Declare(Float)</string>
        <string>V.Local.swo.Declare(String)</string>
        <string>V.Local.sewo.Declare(String)</string>
        <string>V.Local.sjob.Declare(String)</string>
        <string>V.Local.ssuffix.Declare(String)</string>
        <string>V.global.icounter.Declare(Long)</string>
        <string>V.Global.icounter2.Declare(Long)</string>
        <string>V.Local.sret.Declare(String)</string>
        <string />
        <string>'Check to see if the requisitions checkbox is checked and if the global icounter 2 is equal to 1 if so populate the flexgrid in ascending order of sequences</string>
        <string>F.Intrinsic.Control.If(V.Screen.f_Main!chkRequisitions.Value,=,1)</string>
        <string>F.Intrinsic.Control.AndIf(V.Global.icounter2,=,1)</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst","select (PO_REQ_NUMBER + '-' + PO_REQ_LINE) AS SEQUENCE, PART, DESCRIPTION, QUANTITY, DATE_DUE from v_PURCHASE_REQS order by SEQUENCE")</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>		Function.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.AddListItem(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,V.ODBC.conx!rst.FieldValTrim!SEQUENCE)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,1,V.ODBC.conx!rst.FieldValTrim!PART)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,2,V.ODBC.conx!rst.FieldValTrim!DESCRIPTION)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,3,V.ODBC.conx!rst.FieldValTrim!QUANTITY)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,4,V.ODBC.conx!rst.FieldVal!DATE_DUE)</string>
        <string>			Function.ODBC.conx!rst.MoveNext</string>
        <string>		Function.Intrinsic.Control.Loop</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Function.Intrinsic.UI.Msgbox("No open requisitions found","No Reqs Found")</string>
        <string>		Function.Intrinsic.Control.ExitSub</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	V.Global.icounter2.Set(0)</string>
        <string>	F.ODBC.conx!rst.Close</string>
        <string>'F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Check to see if the requisitions checkbox is checked and if the global icounter 2 is equal to 1 if not populate the flexgrid in descending order of sequences</string>
        <string>F.Intrinsic.Control.elseIf(V.Screen.f_Main!chkRequisitions.Value,=,1)</string>
        <string>F.Intrinsic.Control.AndIf(V.Global.icounter2,=,0)</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst","select (PO_REQ_NUMBER + '-' + PO_REQ_LINE) AS SEQUENCE, PART, DESCRIPTION, QUANTITY, DATE_DUE from v_PURCHASE_REQS order by SEQUENCE DESC")</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>		Function.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.AddListItem(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,V.ODBC.conx!rst.FieldValTrim!SEQUENCE)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,1,V.ODBC.conx!rst.FieldValTrim!PART)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,2,V.ODBC.conx!rst.FieldValTrim!DESCRIPTION)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,3,V.ODBC.conx!rst.FieldValTrim!QUANTITY)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQUENCE,4,V.ODBC.conx!rst.FieldVal!DATE_DUE)</string>
        <string>			Function.ODBC.conx!rst.MoveNext</string>
        <string>		Function.Intrinsic.Control.Loop</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Function.Intrinsic.UI.Msgbox("No open requisitions found","No Reqs Found")</string>
        <string>		Function.Intrinsic.Control.ExitSub</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	V.Global.icounter2.Set(1)</string>
        <string>	F.ODBC.conx!rst.Close</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'check to see if the requisitions checkbox has not been checked and if the global i counter is equal to 1 if so populate the flexgrid ordered by sequence</string>
        <string>F.Intrinsic.Control.If(V.Screen.f_Main!chkRequisitions.Value,=,0)</string>
        <string>F.Intrinsic.Control.andIf(V.global.icounter,=,1)</string>
        <string>	Function.Intrinsic.String.Concat("SELECT SEQ, PART, SUFFIX, JOB, DESCRIPTION, UNITS, DATE_DUE FROM V_JOB_OPERATIONS WHERE JOB = '",V.Screen.f_Main!txtJob.Text,"' AND SUFFIX = '",V.Screen.f_Main!txtSuffix.Text,"' AND LMO = 'M' AND SEQ &lt; 990000 Order By SEQ",V.Local.sSQL)</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>		Function.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)</string>
        <string>			V.Local.sjob.Set(V.ODBC.conx!rst.FieldVal!JOB)</string>
        <string>			V.Local.ssuffix.Set(V.ODBC.conx!rst.FieldVal!SUFFIX)</string>
        <string />
        <string>			Gui.f_Main.lvRouterWOSeq.AddListItem(V.ODBC.conx!rst.FieldValTrim!SEQ,V.ODBC.conx!rst.FieldValTrim!SEQ)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,1,V.ODBC.conx!rst.FieldValTrim!PART)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,2,V.ODBC.conx!rst.FieldValTrim!DESCRIPTION)</string>
        <string />
        <string>			Function.Intrinsic.String.Concat("SELECT QTY_ORDER, JOB FROM V_JOB_HEADER WHERE JOB = '",V.Screen.f_Main!txtJob.Text,"' AND SUFFIX = '",V.Screen.f_Main!txtSuffix.Text,"'",V.Local.sSQL)</string>
        <string>			Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTY",V.Local.sSQL)</string>
        <string>			V.Local.fJobQty.Set(V.ODBC.conx!rstQTY.FieldVal!QTY_ORDER)</string>
        <string />
        <string>			Function.ODBC.conx!rstQTY.Close</string>
        <string>			Function.Intrinsic.Math.Mult(V.Local.fJobQty,V.ODBC.conx!rst.FieldVal!UNITS,V.Local.fQty)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,3,V.Local.fQty)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,4,V.ODBC.conx!rst.FieldVal!DATE_DUE)</string>
        <string />
        <string>			F.Intrinsic.String.Concat(V.local.sjob,"-",V.local.ssuffix,V.Local.sjob)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,5,V.local.sjob)</string>
        <string />
        <string>				Function.ODBC.conx!rst.MoveNext</string>
        <string>		Function.Intrinsic.Control.Loop</string>
        <string>		Function.ODBC.conx!rst.Close</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Function.ODBC.conx!rst.Close</string>
        <string>		Function.Intrinsic.UI.Msgbox("No material sequences found for this job","No Material Found")</string>
        <string>		Function.Intrinsic.Control.ExitSub</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>		V.global.icounter.Set(0)</string>
        <string />
        <string>'check to see if the requisitions checkbox has not been checked and if the global i counter is equal to 0 if so populate the flexgrid ordered by sequence descending</string>
        <string>F.Intrinsic.Control.Elseif(V.Screen.f_Main!chkRequisitions.Value,=,0)</string>
        <string>F.Intrinsic.Control.AndIf(V.Global.icounter,=,0)</string>
        <string>'	V.Local.icounter.Set(0)</string>
        <string>F.intrinsic.String.Build("SELECT SEQ, PART, DESCRIPTION,UNITS,DATE_DUE FROM V_JOB_OPERATIONS WHERE JOB = BETWEEN '{0}' AND '{1}' AND SUFFIX = BETWEEN '{2}' AND '{3}' AND LMO = '{4}' AND SEQ &lt;990000 ORDER BY SEQ",V.Screen.f_Main!txtJob.Text,V.Screen.f_Main!txtEndJob.Text,V.Screen.f_Main!txtSuffix.Text,V.Screen.f_Main!txtEndSuff.Text,"M",V.Local.sSql)</string>
        <string>'F.Intrinsic.Control.If(V.Local.icounter,=,0)</string>
        <string>	Function.Intrinsic.String.Concat("SELECT SEQ, PART, SUFFIX, JOB, DESCRIPTION, UNITS, DATE_DUE FROM V_JOB_OPERATIONS WHERE JOB = '",V.Screen.f_Main!txtJob.Text,"' AND SUFFIX = '",V.Screen.f_Main!txtSuffix.Text,"' AND LMO = 'M' AND SEQ &lt; 990000 Order By SEQ DESC",V.Local.sSQL)</string>
        <string>	Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)</string>
        <string>	Function.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)</string>
        <string>		Gui.f_Main.lvRouterWOSeq.ClearItems</string>
        <string>		Function.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)</string>
        <string>			V.Local.sjob.Set(V.ODBC.conx!rst.FieldVal!JOB)</string>
        <string>			V.Local.ssuffix.Set(V.ODBC.conx!rst.FieldVal!SUFFIX)</string>
        <string />
        <string>			Gui.f_Main.lvRouterWOSeq.AddListItem(V.ODBC.conx!rst.FieldValTrim!SEQ,V.ODBC.conx!rst.FieldValTrim!SEQ)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,1,V.ODBC.conx!rst.FieldValTrim!PART)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,2,V.ODBC.conx!rst.FieldValTrim!DESCRIPTION)</string>
        <string />
        <string>			Function.Intrinsic.String.Concat("SELECT QTY_ORDER, JOB FROM V_JOB_HEADER WHERE JOB = '",V.Screen.f_Main!txtJob.Text,"' AND SUFFIX = '",V.Screen.f_Main!txtSuffix.Text,"'",V.Local.sSQL)</string>
        <string>			Function.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTY",V.Local.sSQL)</string>
        <string>			V.Local.fJobQty.Set(V.ODBC.conx!rstQTY.FieldVal!QTY_ORDER)</string>
        <string />
        <string>			Function.ODBC.conx!rstQTY.Close</string>
        <string>			Function.Intrinsic.Math.Mult(V.Local.fJobQty,V.ODBC.conx!rst.FieldVal!UNITS,V.Local.fQty)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,3,V.Local.fQty)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,4,V.ODBC.conx!rst.FieldVal!DATE_DUE)</string>
        <string />
        <string>			F.Intrinsic.String.Concat(V.local.sjob,"-",V.local.ssuffix,V.Local.sjob)</string>
        <string>			Gui.f_Main.lvRouterWOSeq.SetListItemSubItemText(V.ODBC.conx!rst.FieldValTrim!SEQ,5,V.local.sjob)</string>
        <string />
        <string>				Function.ODBC.conx!rst.MoveNext</string>
        <string>		Function.Intrinsic.Control.Loop</string>
        <string>		Function.ODBC.conx!rst.Close</string>
        <string>	Function.Intrinsic.Control.Else</string>
        <string>		Function.ODBC.conx!rst.Close</string>
        <string>		Function.Intrinsic.UI.Msgbox("No material sequences found for this job","No Material Found")</string>
        <string>		Function.Intrinsic.Control.ExitSub</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>	V.global.icounter.Set(1)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("lvrouterwoseq_columnclick_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_VENDOR_RFQ_EXT.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(F_main_unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>program.sub.lvrouterwoseq_columnclick.End</string>
        <string />
        <string>Program.Sub.Comments.Start</string>
        <string>${$0$}$GCG_VENDOR_RFQ_EXT$}$MITCH$}$1/23/2015$}$False</string>
        <string>${$3$}$0$}$$}$-1$}$-1$}$$}$1/1/1900$}$1/23/2015 - Mitch</string>
        <string>Took this project over from Brian Lefler.  There were a number of issues.  One is that the program had code ripped out of Document Control and placed inside of it to duplicate DCC inside the program, circumventing licensing.  Next, the program was getting the next RFQ number from GS, but not reserving it up front.  Therefore, if multiple people are using the program, then they will conflict when save for having the same RFQ ID.  Finally, the next RFQ number is not be reconciled correction for OP_HEADER and RAOPT.  The correct way is that the CORE program should have been updated to use COMPROC to read/write the options from OP_HEADER only.  This involves PURA65, PURA65N, and OPTPUR.</string>
        <string>Program.Sub.Comments.End</string>
        <string />
        <string />
      </Lines>
    </TextStrings>
  </TextSource>
  <Scrolling>
    <WindowOriginY>3879</WindowOriginY>
  </Scrolling>
  <Outlining>
    <AllowOutlining>true</AllowOutlining>
    <ImageSize>8</ImageSize>
    <Ranges />
  </Outlining>
  <HyperText />
  <Spelling />
  <Braces />
</SyntaxEdit>